<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>天飞 技术随笔</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://talenhao.github.io/"/>
  <updated>2019-08-27T07:38:40.000Z</updated>
  <id>https://talenhao.github.io/</id>
  
  <author>
    <name>天飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kernel参数</title>
    <link href="https://talenhao.github.io/2019/08/27/kernel%E5%8F%82%E6%95%B0/"/>
    <id>https://talenhao.github.io/2019/08/27/kernel参数/</id>
    <published>2019-08-27T07:38:40.000Z</published>
    <updated>2019-08-27T07:38:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内核参数"><a href="#内核参数" class="headerlink" title="内核参数"></a>内核参数</h1><h2 id="vm-max-map-count"><a href="#vm-max-map-count" class="headerlink" title="vm.max_map_count"></a>vm.max_map_count</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>Elasticsearch uses a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-store.html#mmapfs" target="_blank" rel="noopener"><code>mmapfs</code></a> directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions.</p><p><strong><code>mmapfs</code></strong></p><p>The MMap FS type stores the shard index on the file system (maps to Lucene <code>MMapDirectory</code>) by mapping a file into memory (mmap). Memory mapping uses up a portion of the virtual memory address space in your process equal to the size of the file being mapped. Before using this class, be sure you have allowed plenty of <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html" target="_blank" rel="noopener">virtual address space</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;内核参数&quot;&gt;&lt;a href=&quot;#内核参数&quot; class=&quot;headerlink&quot; title=&quot;内核参数&quot;&gt;&lt;/a&gt;内核参数&lt;/h1&gt;&lt;h2 id=&quot;vm-max-map-count&quot;&gt;&lt;a href=&quot;#vm-max-map-count&quot; class=&quot;head
      
    
    </summary>
    
      <category term="kernel" scheme="https://talenhao.github.io/categories/kernel/"/>
    
    
      <category term="linux,kernel" scheme="https://talenhao.github.io/tags/linux-kernel/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 笔记</title>
    <link href="https://talenhao.github.io/2019/08/26/elasticsearch-%E7%AC%94%E8%AE%B0/"/>
    <id>https://talenhao.github.io/2019/08/26/elasticsearch-笔记/</id>
    <published>2019-08-26T10:00:17.000Z</published>
    <updated>2019-08-26T10:00:17.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ELASTICSEARCH官方文档笔记"><a href="#ELASTICSEARCH官方文档笔记" class="headerlink" title="ELASTICSEARCH官方文档笔记"></a>ELASTICSEARCH官方文档笔记</h1><p>分布式文档存储</p><p>序列化json文档,KV包含数据</p><p>full-text searche全文索引实时搜索(An inverted index lists every unique word that appears in any document and identifies all of the documents each word occurs in.)</p><p>When dynamic mapping is enabled, Elasticsearch automatically detects and adds new fields to the index.</p><p>相同的字段可以标记为多个类型以便不同的分析方法</p><p>aggregations operate 和 search requests可并行执行</p><h3 id="搜索数据"><a href="#搜索数据" class="headerlink" title="搜索数据"></a>搜索数据</h3><p>REST API接口管理集群,索引和搜索数据(<a href="https://www.elastic.co/guide/en/elasticsearch/client/index.html" target="_blank" rel="noopener">Elasticsearch client</a>,kibana developer console, command line)</p><p>​    The Elasticsearch REST APIs support structured queries, full text queries, and complex queries that combine the two. </p><p>全文索引将按关联性返回搜索结果</p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html" target="_blank" rel="noopener">Query DSL</a> </p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-overview.html" target="_blank" rel="noopener">SQL-style queries</a></p><h3 id="分析数据"><a href="#分析数据" class="headerlink" title="分析数据"></a>分析数据</h3><p>聚合功能</p><p>key metrics, patterns, and trends</p><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><h2 id="弹性调度"><a href="#弹性调度" class="headerlink" title="弹性调度"></a>弹性调度</h2><p>cluster</p><p>node</p><p>shard</p><p>自由添加node,自动平衡As the cluster grows (or shrinks), Elasticsearch automatically migrates shards to rebalance the cluster.</p><p>index(逻辑组)-&gt;shards(物理)-&gt;nodes</p><pre class="mermaid">graph LRindex(Index逻辑组)-->shardsshards-->primary_shardsprimary_shards-->replicas_shards(replicas shards只读)primary_cluster-->CCR(Cross-cluster replication)CCR-->replicated_cluster(replicated cluster只读)</pre><p>## </p><h3 id="CAT-API"><a href="#CAT-API" class="headerlink" title="CAT API"></a>CAT API</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -X GET <span class="string">"127.0.0.1:9200/_cat/health?v&amp;pretty"</span></span></span><br><span class="line">epoch      timestamp cluster        status node.total node.data shards  pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line">1566820997 12:03:17  cluster-name   green          15         9   6073 6039    0    0        0             0                  -                100.0%</span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -X GET <span class="string">"127.0.0.1:9200/_cat/indices?v&amp;pretty"</span> |more</span></span><br><span class="line">health status index                                                        uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">green  open   logstash-xxx-2019.08.22            1NcDlWKNQxKK529JwuQxFg   5   0     308686            0    548.3mb        548.3mb</span><br><span class="line">green  open   bbbb-2019.07.02                                            NTzO-PQESb2YrrUPzs0fVA   5   0     161398            0       99mb           99mb</span><br><span class="line">green  open   logstash-cccc-2019.08.26                               -1DGNXaFRiqcowhhQ4Y2Tg   5   0    1364938            0    178.4mb        178.4mb</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> GET /customer/_doc/1单个文档获取</span></span><br></pre></td></tr></table></figure><h3 id="bluk-api-batch-document-operations-批量操作"><a href="#bluk-api-batch-document-operations-批量操作" class="headerlink" title="bluk api  (batch document operations)批量操作"></a>bluk api  (batch document operations)批量操作</h3><p>上传数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/elastic/elasticsearch/blob/master/docs/src/<span class="built_in">test</span>/resources/accounts.json?raw=<span class="literal">true</span></span></span><br><span class="line">curl -H "Content-Type: application/json" -XPOST "localhost:9200/bank/_bulk?pretty&amp;refresh" --data-binary "@accounts.json"</span><br><span class="line">curl "localhost:9200/_cat/indices?v"</span><br></pre></td></tr></table></figure><h2 id="search-analyze-and-machine-learning"><a href="#search-analyze-and-machine-learning" class="headerlink" title="search,analyze and machine learning"></a>search,analyze and machine learning</h2><h3 id="search"><a href="#search" class="headerlink" title="search"></a>search</h3><p>跟sql不同,这里没有游标等概念,查询完就结束了</p><ol><li><strong>REST request url</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search?q=*&amp;sort=account_number:asc&amp;pretty</span><br><span class="line">&#123;</span><br><span class="line">  "took" : 63,//查询使用的时间(微秒)</span><br><span class="line">  "timed_out" : false, //是否超时</span><br><span class="line">  "_shards" : &#123;//返回查询的shard信息</span><br><span class="line">    "total" : 5,</span><br><span class="line">    "successful" : 5,</span><br><span class="line">    "skipped" : 0,</span><br><span class="line">    "failed" : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  "hits" : &#123; //查询结果</span><br><span class="line">    "total" : &#123; //查询匹配</span><br><span class="line">        "value": 1000, //总数</span><br><span class="line">        "relation": "eq" //关联</span><br><span class="line">    &#125;,</span><br><span class="line">    "max_score" : null,</span><br><span class="line">    "hits" : [ &#123;  //实际结果列表</span><br><span class="line">      "_index" : "bank",</span><br><span class="line">      "_type" : "_doc",</span><br><span class="line">      "_id" : "0",</span><br><span class="line">      "sort": [0],</span><br><span class="line">      "_score" : null,</span><br><span class="line">      "_source" : &#123;"account_number":0,"balance":16623,"firstname":"Bradshaw","lastname":"Mckenzie","age":29,"gender":"F","address":"244 Columbus Place","employer":"Euron","email":"bradshawmckenzie@euron.com","city":"Hobucken","state":"CO"&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      "_index" : "bank",</span><br><span class="line">      "_type" : "_doc",</span><br><span class="line">      "_id" : "1",</span><br><span class="line">      "sort": [1],</span><br><span class="line">      "_score" : null,</span><br><span class="line">      "_source" : &#123;"account_number":1,"balance":39225,"firstname":"Amber","lastname":"Duke","age":32,"gender":"M","address":"880 Holmes Lane","employer":"Pyrami","email":"amberduke@pyrami.com","city":"Brogan","state":"IL"&#125;</span><br><span class="line">    &#125;, ...</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>REST request body</strong></p><ol><li><p>match_all</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;//使用QUERY DSL</span><br><span class="line">    "query": &#123; "match_all": &#123;&#125; &#125;,</span><br><span class="line">    "sort": [</span><br><span class="line">    &#123; "account_number": "asc" &#125;</span><br><span class="line">    ],</span><br><span class="line">    // "sort": &#123; "balance": &#123; "order": "desc" &#125; &#125;</span><br><span class="line">    "size": 1, //默认为10</span><br><span class="line">    "from": 10, //指定开始的结果,默认为0,对于分布显示结果很有用</span><br><span class="line">    "_source": ["account_number", "balance"],//代替默认的_source返回字段</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>match</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match": &#123; "account_number": 20 &#125; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>match_phrase匹配短语</p><ol><li><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match_phrase": &#123; "address": "mill lane" &#125; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><ol start="4"><li><p>bool</p><ol><li>must(and)</li><li>should(or)</li><li>must_not(not)</li><li>filter<ol><li>range</li></ol></li></ol></li></ol><h3 id="analyze"><a href="#analyze" class="headerlink" title="analyze"></a>analyze</h3><p>term是代表完全匹配，即不进行分词器分析，文档中必须包含整个搜索的词汇</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  "size": 0, //不显示搜索结果</span><br><span class="line">  "aggs": &#123;</span><br><span class="line">    "group_by_state": &#123;</span><br><span class="line">      "terms": &#123; //terms aggregation聚合方式</span><br><span class="line">        "field": "state.keyword",</span><br><span class="line">        "size": 5 //默认显示10条记录</span><br><span class="line">        "order": &#123; //指定排序</span><br><span class="line">            "average_balance": "desc"</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      "aggs":&#123; //嵌套</span><br><span class="line">      "average_balance": &#123;</span><br><span class="line">      "avg": &#123;</span><br><span class="line">      "field": "balance"</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"took"</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"skipped"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"hits"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: &#123;</span><br><span class="line">            <span class="attr">"value"</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="attr">"relation"</span>: <span class="string">"eq"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"max_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"hits"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"_index"</span>: <span class="string">"bank"</span>,</span><br><span class="line">                <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">                <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">                <span class="attr">"_source"</span>: &#123;</span><br><span class="line">                    <span class="attr">"account_number"</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">"balance"</span>: <span class="number">39225</span>,</span><br><span class="line">                    <span class="attr">"firstname"</span>: <span class="string">"Amber"</span>,</span><br><span class="line">                    <span class="attr">"lastname"</span>: <span class="string">"Duke"</span>,</span><br><span class="line">                    <span class="attr">"age"</span>: <span class="number">32</span>,</span><br><span class="line">                    <span class="attr">"gender"</span>: <span class="string">"M"</span>,</span><br><span class="line">                    <span class="attr">"address"</span>: <span class="string">"880 Holmes Lane"</span>,</span><br><span class="line">                    <span class="attr">"employer"</span>: <span class="string">"Pyrami"</span>,</span><br><span class="line">                    <span class="attr">"email"</span>: <span class="string">"amberduke@pyrami.com"</span>,</span><br><span class="line">                    <span class="attr">"city"</span>: <span class="string">"Brogan"</span>,</span><br><span class="line">                    <span class="attr">"state"</span>: <span class="string">"IL"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"aggregations"</span>: &#123;</span><br><span class="line">        <span class="attr">"group_by_state"</span>: &#123;</span><br><span class="line">            <span class="attr">"doc_count_error_upper_bound"</span>: <span class="number">-1</span>,</span><br><span class="line">            <span class="attr">"sum_other_doc_count"</span>: <span class="number">923</span>,</span><br><span class="line">            <span class="attr">"buckets"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"CO"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">14</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">32460.35714285714</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"NE"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">16</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">32041.5625</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"AZ"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">14</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">31634.785714285714</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"MT"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">17</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">31147.41176470588</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"VA"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">16</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">30600.0625</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装ELASTICSEARCH"><a href="#安装ELASTICSEARCH" class="headerlink" title="安装ELASTICSEARCH"></a>安装ELASTICSEARCH</h2><p>自带一个openjdk,可能过JAVA_HOME变量修改成自部署JAVA版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@dab238b13031 elasticsearch]# ls -1</span><br><span class="line">LICENSE.txt</span><br><span class="line">NOTICE.txt</span><br><span class="line">README.textile</span><br><span class="line">bin//执行文件</span><br><span class="line">config//配置文件</span><br><span class="line">data//shard数据目录</span><br><span class="line">jdk//自带jdk版本</span><br><span class="line">lib</span><br><span class="line">logs//日志</span><br><span class="line">modules</span><br><span class="line">plugins//插件,每个插件都有一个子目录</span><br><span class="line">[root@dab238b13031 elasticsearch]# ls jdk/</span><br><span class="line">bin  conf  include  jmods  legal  lib  release</span><br></pre></td></tr></table></figure><p>docker版本基础镜像基于centos7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.3.1</span><br><span class="line"><span class="meta">$</span><span class="bash"> grep vm.max_map_count /etc/sysctl.conf</span></span><br><span class="line">vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 后台,添加命令行配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置文件 config/elasticsearch.yml</span></span><br><span class="line">./bin/elasticsearch -d -Ecluster.name=my_cluster -Enode.name=node_1</span><br></pre></td></tr></table></figure><p>检测是否在运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/?pretty"</span><br><span class="line">&#123;</span><br><span class="line">  "name": "dab238b13031",</span><br><span class="line">  "cluster_name": "docker-cluster",</span><br><span class="line">  "cluster_uuid": "mNH6fmV0RE2WVvavM-9bFA",</span><br><span class="line">  "version": &#123;</span><br><span class="line">    "number": "7.3.1",</span><br><span class="line">    "build_flavor": "default",</span><br><span class="line">    "build_type": "docker",</span><br><span class="line">    "build_hash": "4749ba6",</span><br><span class="line">    "build_date": "2019-08-19T20:19:25.651794Z",</span><br><span class="line">    "build_snapshot": false,</span><br><span class="line">    "lucene_version": "8.1.0",</span><br><span class="line">    "minimum_wire_compatibility_version": "6.8.0",</span><br><span class="line">    "minimum_index_compatibility_version": "6.0.0-beta1"</span><br><span class="line">  &#125;,</span><br><span class="line">  "tagline": "You Know, for Search"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><strong>配置文件和敏感配置后需要重启</strong></p><p>三个配置文件:默认在config目录下,可ES_PATH_CONF=/path/to/my/config修改</p><ul><li><code>elasticsearch.yml</code> for configuring Elasticsearch</li><li><code>jvm.options</code> for configuring Elasticsearch JVM settings<ul><li>7-9:-Xmx2g 冒号前是java版本范围</li></ul></li><li><code>log4j2.properties</code> Log4j 2 for configuring Elasticsearch logging </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@dab238b13031 elasticsearch]# ls -1 bin/</span><br><span class="line">elasticsearch</span><br><span class="line">elasticsearch-certgen</span><br><span class="line">elasticsearch-certutil</span><br><span class="line">elasticsearch-cli</span><br><span class="line">elasticsearch-croneval</span><br><span class="line">elasticsearch-env</span><br><span class="line">elasticsearch-enve</span><br><span class="line">elasticsearch-keystore//用于创建敏感配置</span><br><span class="line">elasticsearch-migrate</span><br><span class="line">elasticsearch-node</span><br><span class="line">elasticsearch-plugin</span><br><span class="line">elasticsearch-saml-metadata</span><br><span class="line">elasticsearch-setup-passwords</span><br><span class="line">elasticsearch-shard</span><br><span class="line">elasticsearch-sql-cli</span><br><span class="line">elasticsearch-sql-cli-7.3.1.jar</span><br><span class="line">elasticsearch-syskeygen</span><br><span class="line">elasticsearch-users</span><br><span class="line">x-pack-env</span><br><span class="line">x-pack-security-env</span><br><span class="line">x-pack-watcher-env</span><br></pre></td></tr></table></figure><h4 id="敏感配置-POST-nodes-reload-secure-settings加载"><a href="#敏感配置-POST-nodes-reload-secure-settings加载" class="headerlink" title="敏感配置(POST _nodes/reload_secure_settings加载)"></a>敏感配置(POST _nodes/reload_secure_settings加载)</h4><p>添加string</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /file/containing/setting/value | bin/elasticsearch-keystore add --stdin the.setting.name.to.set</span><br></pre></td></tr></table></figure><p>添加文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-keystore add-file the.setting.name.to.set /path/example-file.json</span><br></pre></td></tr></table></figure><p>删除</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-keystore remove the.setting.name.to.remove</span><br></pre></td></tr></table></figure><h4 id="INDEX生命周期策略管理"><a href="#INDEX生命周期策略管理" class="headerlink" title="INDEX生命周期策略管理"></a>INDEX生命周期策略管理</h4><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/using-policies-rollover.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/using-policies-rollover.html</a></p><h4 id="机器学习-默认是开启听"><a href="#机器学习-默认是开启听" class="headerlink" title="机器学习(默认是开启听)"></a>机器学习(默认是开启听)</h4><p>xpack.ml.enabled</p><h4 id="heap-size"><a href="#heap-size" class="headerlink" title="heap size"></a>heap size</h4><p>默认1G</p><p><code>Xms</code> (minimum heap size) and <code>Xmx</code> (maximum heap size) </p><p>Set <code>Xmx</code> and <code>Xms</code> to no more than 50% of your physical RAM</p><p>大heap利于内部缓存,但会带来长GC暂停.</p><p>系统内存太小影响文件缓存</p><h4 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch  -  nofile  65535</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff -a //禁用swap</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>ulimit -u 4096</p><p>JVM会缓存解析10秒,ES覆盖为60秒,反向解析10秒</p><h2 id="Aggregations"><a href="#Aggregations" class="headerlink" title="Aggregations"></a>Aggregations</h2><p>四类</p><ol><li>bucketing分组</li><li>metric度量<ol><li>avg/加权avg</li></ol></li><li>matrix矩阵(在多个字段基础上产生矩阵)</li><li>pipeline管道(在其它聚合基础上再次聚合)</li></ol><p>聚合嵌套功能十分强大</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 语法结构 aggregations或aggs</span></span><br><span class="line"><span class="string">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="string">"&lt;aggregation_name&gt;"</span> : &#123;</span><br><span class="line">        <span class="string">"&lt;aggregation_type&gt;"</span> : &#123;</span><br><span class="line">            &lt;aggregation_body&gt;</span><br><span class="line">        &#125;</span><br><span class="line">        [,<span class="string">"meta"</span> : &#123;  [&lt;meta_data_body&gt;] &#125; ]?</span><br><span class="line">        [,"aggregations" : &#123; [&lt;sub_aggregation&gt;]+ &#125; ]?</span><br><span class="line">    &#125;</span><br><span class="line">    [,"&lt;aggregation_name_2&gt;" : &#123; ... &#125; ]*</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ELASTICSEARCH官方文档笔记&quot;&gt;&lt;a href=&quot;#ELASTICSEARCH官方文档笔记&quot; class=&quot;headerlink&quot; title=&quot;ELASTICSEARCH官方文档笔记&quot;&gt;&lt;/a&gt;ELASTICSEARCH官方文档笔记&lt;/h1&gt;&lt;p&gt;分布
      
    
    </summary>
    
      <category term="elastic" scheme="https://talenhao.github.io/categories/elastic/"/>
    
    
      <category term="elastic,elasticsearch" scheme="https://talenhao.github.io/tags/elastic-elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://talenhao.github.io/2019/08/26/nginx%E5%AE%9E%E8%B7%B5/"/>
    <id>https://talenhao.github.io/2019/08/26/nginx实践/</id>
    <published>2019-08-26T05:48:23.000Z</published>
    <updated>2019-08-26T05:48:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx笔记"><a href="#nginx笔记" class="headerlink" title="nginx笔记"></a>nginx笔记</h1><h2 id="第三章-场景实践篇"><a href="#第三章-场景实践篇" class="headerlink" title="第三章 场景实践篇"></a>第三章 场景实践篇</h2><h3 id="静态web服务"><a href="#静态web服务" class="headerlink" title="静态web服务"></a>静态web服务</h3><h4 id="跨域访问"><a href="#跨域访问" class="headerlink" title="跨域访问"></a>跨域访问</h4><p>服务器允许网站请求其它域名的内容.</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> Access-Control-Allow-Orgin http://example.com;</span><br><span class="line"><span class="attribute">add_header</span> Access-Control-Allow-Methods POST,GET,PUT,DELETE,OPTIONS;</span><br></pre></td></tr></table></figure><h4 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h4><p>nginx支持简单方式</p><ul><li><p>http Referer(<strong>Module ngx_http_referer_module</strong>)</p><ul><li><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">referer_hash_bucket_size</span> <span class="number">64</span>;</span><br><span class="line"><span class="attribute">referer_hash_max_size</span> <span class="number">2048</span>;</span><br><span class="line"><span class="attribute">valid_referers</span> <span class="literal">none</span> | <span class="literal">blocked</span> | server_names | string ...;</span><br><span class="line"><span class="comment"># 匹配为empty string,不匹配为1</span></span><br><span class="line"><span class="comment"># none为空</span></span><br><span class="line"><span class="comment"># blocked是被代理或防火墙删除了http://或https://后剩余的url</span></span><br><span class="line"><span class="comment"># server_names其中之一</span></span><br><span class="line"><span class="comment"># string ... 其它匹配字符串</span></span><br></pre></td></tr></table></figure></li><li><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意:valid_referers and $valid_referer单复数格式</span></span><br><span class="line"><span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> server_names</span><br><span class="line">               <span class="regexp">*.example.com</span> <span class="regexp">example.*</span> www.example.org/galleries/</span><br><span class="line">               ~\.google\.;</span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$valid_referer</span>)&#123;</span><br><span class="line"><span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="代理服务"><a href="#代理服务" class="headerlink" title="代理服务"></a>代理服务</h4><p><code>http</code></p><p><code>https</code></p><p><code>rtmp</code></p><p><code>icmp/pop/smtp</code></p><h5 id="正向代理-客户端"><a href="#正向代理-客户端" class="headerlink" title="正向代理(客户端)"></a>正向代理(客户端)</h5><h5 id="反向代理-服务端"><a href="#反向代理-服务端" class="headerlink" title="反向代理(服务端)"></a>反向代理(服务端)</h5><p>ngx_http_proxy_module</p><table><thead><tr><th align="left">Syntax:</th><th><code>proxy_pass URL;</code>  //http,https,socket</th></tr></thead><tbody><tr><td align="left">Default:</td><td>—</td></tr><tr><td align="left">Context:</td><td><code>location</code>, <code>if in location</code>, <code>limit_except</code></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;nginx笔记&quot;&gt;&lt;a href=&quot;#nginx笔记&quot; class=&quot;headerlink&quot; title=&quot;nginx笔记&quot;&gt;&lt;/a&gt;nginx笔记&lt;/h1&gt;&lt;h2 id=&quot;第三章-场景实践篇&quot;&gt;&lt;a href=&quot;#第三章-场景实践篇&quot; class=&quot;header
      
    
    </summary>
    
      <category term="nginx" scheme="https://talenhao.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://talenhao.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>LINUX常用工具集</title>
    <link href="https://talenhao.github.io/2019/08/23/LINUX%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    <id>https://talenhao.github.io/2019/08/23/LINUX常用工具集/</id>
    <published>2019-08-23T05:57:00.000Z</published>
    <updated>2019-08-23T05:57:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>网络监控:</p><p><strong>NetHogs</strong>是一个开源的命令行工具（类似于Linux的top命令），用来按进程或程序实时统计网络带宽使用率。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;网络监控:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NetHogs&lt;/strong&gt;是一个开源的命令行工具（类似于Linux的top命令），用来按进程或程序实时统计网络带宽使用率。&lt;/p&gt;

      
    
    </summary>
    
      <category term="linux" scheme="https://talenhao.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://talenhao.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>c primer plus 学习笔记</title>
    <link href="https://talenhao.github.io/2019/08/20/c-primer-plus-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://talenhao.github.io/2019/08/20/c-primer-plus-学习笔记/</id>
    <published>2019-08-20T06:48:09.000Z</published>
    <updated>2019-08-20T06:48:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="c-primer-plus-学习笔记"><a href="#c-primer-plus-学习笔记" class="headerlink" title="c primer plus 学习笔记"></a>c primer plus 学习笔记</h1><h2 id="第一章-认识C语言"><a href="#第一章-认识C语言" class="headerlink" title="第一章 认识C语言"></a>第一章 认识C语言</h2><a id="more"></a><h2 id="第二章-C语言概述"><a href="#第二章-C语言概述" class="headerlink" title="第二章 C语言概述"></a>第二章 C语言概述</h2><h3 id="C语言的基本模块"><a href="#C语言的基本模块" class="headerlink" title="C语言的基本模块:"></a>C语言的基本模块:</h3><ul><li>函数<ul><li>形参:变量</li><li>实参:值</li></ul></li></ul><h3 id="C语言重要特性"><a href="#C语言重要特性" class="headerlink" title="C语言重要特性"></a>C语言重要特性</h3><ul><li>转义序列<em>escape sequence</em></li><li>占位符</li></ul><p><img src="/images/1566283720167.png" alt="1566283720167"></p><h3 id="C语言的结构"><a href="#C语言的结构" class="headerlink" title="C语言的结构"></a>C语言的结构</h3><ul><li><p>程序(由多个函数组成)</p><ul><li><p>头文件</p><ul><li><code>#include&lt;stdio.h&gt;</code>包含一个文件,C编译器的预处理指令#(头文件可定义一些常量,函数名,实际代码在另一个库文件中,头文件相当于组织程序)</li></ul></li><li><p><code>/*注释*/</code> <code>//注释</code></p></li><li><p>分号结尾;</p></li><li><p>函数</p><ul><li><p>函数头 <code>int main(void)</code>int返回类型,main是主函数,void表示空参数</p><ul><li>返回类型</li><li>函数名</li><li>形式参数</li></ul></li><li><p>函数体</p><ul><li><p>声明 <code>int num;</code>变量(<em>variable</em>)标识符(<em>identifer</em>)声明(<em>declaration</em>) -&gt;mem位置,数据类型</p><ul><li><p>关键字</p><p><img src="/images/1566369369759.png" alt="1566369369759"></p></li><li><p>变量名: </p><ul><li>C99/C11变量标识符最长63个字符,外部标识符最长31个字符</li><li>大小写字母,数字,_,不能以数字开头</li><li>所有变量必须先声明才能使用</li></ul></li></ul></li><li><p>语句</p><ul><li>跳转语句<ul><li>赋值表达式(存储值到内存空间)</li><li>return语句 返回值</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="第三章-数据和C"><a href="#第三章-数据和C" class="headerlink" title="第三章 数据和C"></a>第三章 数据和C</h2><h3 id="数据-承载信息的数字和符号"><a href="#数据-承载信息的数字和符号" class="headerlink" title="数据 承载信息的数字和符号"></a>数据 <code>承载信息的数字和符号</code></h3><ul><li>常量<em>constant</em><ul><li>程序运行过程中不改变;</li><li>编译器根据书写形态自动判断数据类型</li></ul></li><li>变量<em>variable</em><ul><li>可变或被赋值</li><li>声明时需要指定类型</li></ul></li></ul><h3 id="基本类型关键字"><a href="#基本类型关键字" class="headerlink" title="基本类型关键字:"></a>基本类型关键字:</h3><p><img src="/images/1566380575708.png" alt="1566380575708"></p><p>数据类型按存储方式分两大数据类型: 浮点数范围&gt;整数</p><ul><li><p>整数类型<code>没有小数位的数</code></p><ul><li><pre class="mermaid">    graph TBchar(char: '4', 'ABC')-->encode(encode:ASCII,EBCDIC,CJK字符集,Unicode,UTF-8...)encode-->intint-->进制(进制:16,8,2..)进制-->bit</pre></li><li><p>int</p></li><li><p>char</p></li><li><p>_Bool<code>1 bit. 1为true,0为false</code></p></li></ul></li><li><p>浮点数类型<code>类似实数</code> 分两部分存储 7.0=0.7E1</p><ul><li>指数部分1</li><li>小数部分0.7</li><li>任何区间实数无穷多,计算机无法存储所有值,只存储近似值,会损失精度</li></ul></li></ul><p>字节byte=8bit</p><p>字:计算机寻址单位</p><table><thead><tr><th>整数类型</th><th>占位长度</th></tr></thead><tbody><tr><td>short</td><td>16bit</td></tr><tr><td>int</td><td>16bit/32bit</td></tr><tr><td>long</td><td>32bit</td></tr><tr><td>long long</td><td>64bit</td></tr></tbody></table><p>程序中超出最大值会重新开始计算,类似汽车里程表</p><h3 id="C语言数据类型-分配合适内存空间"><a href="#C语言数据类型-分配合适内存空间" class="headerlink" title="C语言数据类型(分配合适内存空间)"></a>C语言数据类型(分配合适内存空间)</h3><p><img src="/images/1566381311465.png" alt="1566381311465"></p><p><img src="/images/1566383417472.png" alt="1566383417472"></p><p>scanf(“%f”, &amp;indentifer)将输入的值赋值给标识符indentifer</p><p>&amp; 找到指定变量标识符的地址</p><p>printf中转换说明决定了数据的显示方式,而不是存储方式.</p><h4 id="char"><a href="#char" class="headerlink" title="char"></a>char</h4><ul><li>字符常量:使用‘ ’引起来表示字符,编译器会识别并根据编码转换成整数值;<code>也可以直接把编码赋值给变量标记符</code><ul><li>不带引号是变量标识符</li><li>“ ”表示字符串</li><li>转义序列</li></ul></li></ul><h2 id="第四章-字符串和格式化输入-输出-数据表示"><a href="#第四章-字符串和格式化输入-输出-数据表示" class="headerlink" title="第四章 字符串和格式化输入/输出(数据表示)"></a>第四章 字符串和格式化输入/输出(数据表示)</h2><p>数组<em>array</em>存储字符串,占用连续的字节空间.</p><h3 id="4-2字符串-字符序列-双引号"><a href="#4-2字符串-字符序列-双引号" class="headerlink" title="4.2字符串(字符序列)(双引号)"></a>4.2字符串(字符序列)(双引号)</h3><p>存储:</p><p><code>char</code>类型的<code>array</code>中</p><p><img src="/images/1566479127445.png" alt="1566479127445"></p><p>数组:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> id[<span class="number">40</span>] <span class="comment">//40字节空间的char类型array</span></span><br></pre></td></tr></table></figure><p>sizeof():<code>以字节为单位给出对象大小</code></p><p>strlen():<code>计算字符串的字符长度</code></p><h3 id="4-3常量和C预处理器"><a href="#4-3常量和C预处理器" class="headerlink" title="4.3常量和C预处理器"></a>4.3常量和C预处理器</h3><p>符号常量<em>symbolic constant</em>(编译时替换compile-time subsitution=明示常量manifest constant)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NAME value <span class="comment">// 一般大写或c_/k_开头</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi 3.1415926</span></span><br></pre></td></tr></table></figure><p>const限定符,表示变量为只读</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NAME = value; <span class="comment">//NAME不可更改, 用起来比define灵活</span></span><br></pre></td></tr></table></figure><p>printf()/scanf() <code>I/O函数</code></p><p>使用转换说明符(<em>conversion specification</em>)转换成可显示的形式.</p><p><img src="/images/1566480422167.png" alt="1566480422167"></p><h2 id="第五章-运算符-表达式expression和语句statement-数据处理"><a href="#第五章-运算符-表达式expression和语句statement-数据处理" class="headerlink" title="第五章 运算符,表达式expression和语句statement(数据处理)"></a>第五章 运算符,表达式expression和语句statement(数据处理)</h2><p>数据处理:</p><ul><li>算术运算</li><li>数值比较</li><li>修改变量</li><li>逻辑组合关系</li></ul><p>大多语句由表达式构成;表达式可能包含子表达式;</p><p>一条语句是一条完整的计算机指令.带(;)号</p><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(condition)&#123;</span><br><span class="line">  block</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h3><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符="></a>赋值运算符=</h4><ul><li><code>使用赋值的思想才能解释 i = i + 1</code></li><li>对象定位值(可修改的左值)variable = value</li><li>目的:把值(数据对象)存储到内存位置上</li></ul><h4 id="加法运算符"><a href="#加法运算符" class="headerlink" title="加法运算符+"></a>加法运算符+</h4><ul><li>二元运算符<code>需要两个运算对象</code></li><li>一元运算符<code>正号+</code></li></ul><h4 id="减法运算符"><a href="#减法运算符" class="headerlink" title="减法运算符-"></a>减法运算符-</h4><ul><li>二元运算符`需要两个运算对象</li><li>一元运算符<code>负号-</code></li></ul><h3 id="乘法运算符"><a href="#乘法运算符" class="headerlink" title="乘法运算符*"></a>乘法运算符*</h3><h3 id="除法运算符"><a href="#除法运算符" class="headerlink" title="除法运算符/"></a>除法运算符/</h3><p>截断:整数除法的小数位被丢弃</p><p>C99使用趋零截断,-3.8转换成-3</p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src="/images/1566546550631.png" alt="1566546550631"></p><h3 id="其它运算符"><a href="#其它运算符" class="headerlink" title="其它运算符"></a>其它运算符</h3><p><strong>sizeof(type/variable) 返回size_t(无符号整数类型)类型的值</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> real; <span class="comment">//typedef 为double创建别名real</span></span><br></pre></td></tr></table></figure><p><strong>求模运算符 %</strong> <code>常用于根据求模结果是否为0控制流程</code></p><p>​    负数使用趋零截断,以每个对象的符号为正负取结果为正负</p><p><strong>递增运算符++/递减运算符 - -</strong></p><p>前后辍只有自身没有运算符或赋值运算符时结果都是一样的,但复合运算时会影响结果.</p><ul><li><p>前辍模式: </p><ul><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a_post = <span class="number">2</span> * a++ <span class="comment">// a_post = 2a, a = a + 1</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>后辍模式:</p><ul><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pre_b = <span class="number">2</span> * ++b <span class="comment">// b = b + 1, pre_b = 2b</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="/images/1566554717693.png" alt="1566554717693"></p><h2 id="第六章-C控制语句-循环"><a href="#第六章-C控制语句-循环" class="headerlink" title="第六章 C控制语句:循环"></a>第六章 C控制语句:循环</h2><p>程序流:</p><ol><li>语句序列</li><li>循环</li><li>分支</li></ol><p>三种循环:</p><ul><li><p>for</p><ul><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(initialize；test；update)&#123; <span class="comment">//使用分号分割,支持使用逗号一次处理多个变量</span></span><br><span class="line">  statement</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><pre class="mermaid">    graph TBinit-->testtest-->成功成功-->for_bodytest-->失败失败-->updateupdate-->test</pre></li><li></li></ul></li><li><p>while</p><ul><li><p>每次迭代都会调用判断循环条件</p></li><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">expression<span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">while</span> (entry condition)<span class="comment">//测试</span></span><br><span class="line">&#123;</span><br><span class="line">  statement(简单/&#123;复合&#125;)</span><br><span class="line">  expression<span class="comment">//更新</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>第一次循环称为一次迭代</p></li></ul></li><li><p>do while</p></li></ul><p>condition:</p><ul><li>非0为真</li><li>0为假</li></ul><h4 id="赋值运算符-1"><a href="#赋值运算符-1" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p><code>=,+=,-=,*=,/=,%=</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;c-primer-plus-学习笔记&quot;&gt;&lt;a href=&quot;#c-primer-plus-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;c primer plus 学习笔记&quot;&gt;&lt;/a&gt;c primer plus 学习笔记&lt;/h1&gt;&lt;h2 id=&quot;第一章-认识C语言&quot;&gt;&lt;a href=&quot;#第一章-认识C语言&quot; class=&quot;headerlink&quot; title=&quot;第一章 认识C语言&quot;&gt;&lt;/a&gt;第一章 认识C语言&lt;/h2&gt;
    
    </summary>
    
      <category term="c" scheme="https://talenhao.github.io/categories/c/"/>
    
    
      <category term="c" scheme="https://talenhao.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>centos 7 关闭笔记本合盖挂起功能</title>
    <link href="https://talenhao.github.io/2019/08/13/centos-7-%E5%85%B3%E9%97%AD%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%90%88%E7%9B%96%E6%8C%82%E8%B5%B7%E5%8A%9F%E8%83%BD/"/>
    <id>https://talenhao.github.io/2019/08/13/centos-7-关闭笔记本合盖挂起功能/</id>
    <published>2019-08-13T12:22:34.000Z</published>
    <updated>2019-08-13T12:22:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>centos 7 关闭笔记本合盖挂起功能<br>家里有一台dell的老笔记本，安装了centos7系统使用。<br>默认系统配置把笔记本电脑屏合上后会造成挂起，网络断开。笔记本不能合盖，放置占位，也会造成灰尘进入键盘等总之不是很方便。<br>systemd可以处理ACPI事件，这个默认配置可以通过修改systemd-logind.service的行为修改。</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@server ~]# vi /etc/systemd/logind.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">  This file is part of systemd.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">  systemd is free software; you can redistribute it and/or modify it</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  under the terms of the GNU Lesser General Public License as published by</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  the Free Software Foundation; either version 2.1 of the License, or</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  (at your option) any later version.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entries <span class="keyword">in</span> this file show the compile time defaults.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You can change settings by editing this file.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Defaults can be restored by simply deleting this file.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See logind.conf(5) <span class="keyword">for</span> details.</span></span><br><span class="line"></span><br><span class="line">[Login]</span><br><span class="line"><span class="meta">#</span><span class="bash">NAutoVTs=6</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ReserveVT=6</span></span><br><span class="line"><span class="meta">#</span><span class="bash">KillUserProcesses=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">KillOnlyUsers=</span></span><br><span class="line"><span class="meta">#</span><span class="bash">KillExcludeUsers=root</span></span><br><span class="line"><span class="meta">#</span><span class="bash">InhibitDelayMaxSec=5</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HandlePowerKey=poweroff</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HandleSuspendKey=<span class="built_in">suspend</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">HandleHibernateKey=hibernate</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HandleLidSwitch=<span class="built_in">suspend</span></span></span><br><span class="line">HandleLidSwitch=ignore              #这个合盖操作修改为ignore，合盖时不做任务操作。</span><br><span class="line"><span class="meta">#</span><span class="bash">HandleLidSwitchDocked=ignore</span></span><br><span class="line"><span class="meta">#</span><span class="bash">PowerKeyIgnoreInhibited=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">SuspendKeyIgnoreInhibited=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HibernateKeyIgnoreInhibited=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">LidSwitchIgnoreInhibited=yes</span></span><br><span class="line"><span class="meta">#</span><span class="bash">IdleAction=ignore</span></span><br><span class="line"><span class="meta">#</span><span class="bash">IdleActionSec=30min</span></span><br><span class="line"><span class="meta">#</span><span class="bash">RuntimeDirectorySize=10%</span></span><br><span class="line"><span class="meta">#</span><span class="bash">RemoveIPC=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">UserTasksMax=</span></span><br></pre></td></tr></table></figure><p>行为可以是 ignore、poweroff、reboot、halt、suspend、hibernate、hybrid-sleep、lock 或 kexec。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@server ~]# systemctl list-units |grep logind</span><br><span class="line">systemd-logind.service    loaded active running   Login Service</span><br><span class="line">[root@server ~]# systemctl restart systemd-logind</span><br></pre></td></tr></table></figure><p>重启服务后合上笔记本，网络不受影响。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@server ~]# ping 192.168.3.1</span><br><span class="line">PING 192.168.3.1 (192.168.3.1) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.3.1: icmp_seq=1 ttl=64 time=0.557 ms</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;centos 7 关闭笔记本合盖挂起功能&lt;br&gt;家里有一台dell的老笔记本，安装了centos7系统使用。&lt;br&gt;默认系统配置把笔记本电脑屏合上后会造成挂起，网络断开。笔记本不能合盖，放置占位，也会造成灰尘进入键盘等总之不是很方便。&lt;br&gt;systemd可以处理ACPI事件，这个默认配置可以通过修改systemd-logind.service的行为修改。&lt;/p&gt;
    
    </summary>
    
      <category term="centos" scheme="https://talenhao.github.io/categories/centos/"/>
    
    
      <category term="centos" scheme="https://talenhao.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>git study</title>
    <link href="https://talenhao.github.io/2019/08/12/git-study/"/>
    <id>https://talenhao.github.io/2019/08/12/git-study/</id>
    <published>2019-08-12T06:49:17.000Z</published>
    <updated>2019-08-12T06:49:17.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git-study"><a href="#git-study" class="headerlink" title="git study"></a>git study</h1><p> Git 对待数据的方法:</p><ol><li><p>Git 对待数据更像是一个快照流,没有更改的直接保留一个链接到原来的文件</p><p>subversion存储每个版本与初始文件的差异</p></li><li><p>git近乎所有操作都在本地执行,所以速度很快.其它CCVS离线后基本做不了什么</p></li><li><p>git存储sha-1校验和( 40 个十六进制字符),并以此做索引引用.</p></li></ol><h2 id="GIT三种状态"><a href="#GIT三种状态" class="headerlink" title="GIT三种状态"></a>GIT三种状态</h2><ol><li>已修改 modified    -&gt; 工作目录</li><li>已暂存 staged(版本标记)  -&gt; 暂存区</li><li>已提交 commited(存储到数据库) -&gt; 仓库</li></ol><p><img src="/images/1565675036087.png" alt="1565675036087"></p><a id="more"></a><h2 id="GIT三个工作区"><a href="#GIT三个工作区" class="headerlink" title="GIT三个工作区"></a>GIT三个工作区</h2><p>工作目录,暂存区,仓库</p><h2 id="GIT安装"><a href="#GIT安装" class="headerlink" title="GIT安装"></a>GIT安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Mon Aug 12 talen@tp-arch-tianfei ~]$ sudo pacman -S git</span><br></pre></td></tr></table></figure><h2 id="GIT-配置"><a href="#GIT-配置" class="headerlink" title="GIT 配置"></a>GIT 配置</h2><h3 id="配置路径"><a href="#配置路径" class="headerlink" title="配置路径"></a>配置路径</h3><p>git config 有三个配置文件路径</p><p>系统配置/etc/gitconfig </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --system</span><br></pre></td></tr></table></figure><p>当前用户配置 ~/.gitconfig 或 ~/config/git/config</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global</span><br></pre></td></tr></table></figure><p>当前仓库配置 .git/config</p><h3 id="配置用户信息"><a href="#配置用户信息" class="headerlink" title="配置用户信息"></a>配置用户信息</h3><p>如要配置当前用户或系统层配置,添加–global或–system参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config  user.name <span class="string">"Tianfei hao"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config  user.email haotianfei@example.com</span></span><br></pre></td></tr></table></figure><h3 id="检查配置"><a href="#检查配置" class="headerlink" title="检查配置"></a>检查配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --list</span></span><br></pre></td></tr></table></figure><h2 id="GIT基础"><a href="#GIT基础" class="headerlink" title="GIT基础"></a>GIT基础</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add</span><br><span class="line">git rm 删除工作区的文件</span><br><span class="line">--cached只删除staged中的文件</span><br><span class="line">--force适用于已经删除工作区文件,但已经提交到staged中的文件</span><br><span class="line">git mv 重命名文件</span><br><span class="line">git commit</span><br><span class="line">-a //跳过add,将staged的文件暂存一并提交</span><br><span class="line">--amend</span><br><span class="line">git clone</span><br><span class="line">git status</span><br><span class="line">git diff // modified与staged对比</span><br><span class="line">git diff --cached/--staged //staged与commited对比</span><br><span class="line">git log</span><br><span class="line">-p 显示diff</span><br><span class="line">-数字 显示最近几次的提交</span><br><span class="line">--stat 每一次提交的统计信息</span><br></pre></td></tr></table></figure><h3 id="gitignore-文件忽略跟踪"><a href="#gitignore-文件忽略跟踪" class="headerlink" title=".gitignore 文件忽略跟踪"></a>.gitignore 文件忽略跟踪</h3><ol><li>空行,#开头会被忽略</li><li>使用标准glob模式匹配( shell 所使用的简化了的正则表达式)<ol><li>* 匹配任意字符</li><li>[abc] 方括号内任意字符</li><li>? 单个任意字符</li><li>[0-9] 范围</li><li>a/**/z 中间任意目录</li></ol></li><li>使用/开头防止递归,/结尾表示目录</li><li>!表示取反</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;git-study&quot;&gt;&lt;a href=&quot;#git-study&quot; class=&quot;headerlink&quot; title=&quot;git study&quot;&gt;&lt;/a&gt;git study&lt;/h1&gt;&lt;p&gt; Git 对待数据的方法:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Git 对待数据更像是一个快照流,没有更改的直接保留一个链接到原来的文件&lt;/p&gt;
&lt;p&gt;subversion存储每个版本与初始文件的差异&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git近乎所有操作都在本地执行,所以速度很快.其它CCVS离线后基本做不了什么&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git存储sha-1校验和( 40 个十六进制字符),并以此做索引引用.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;GIT三种状态&quot;&gt;&lt;a href=&quot;#GIT三种状态&quot; class=&quot;headerlink&quot; title=&quot;GIT三种状态&quot;&gt;&lt;/a&gt;GIT三种状态&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;已修改 modified    -&amp;gt; 工作目录&lt;/li&gt;
&lt;li&gt;已暂存 staged(版本标记)  -&amp;gt; 暂存区&lt;/li&gt;
&lt;li&gt;已提交 commited(存储到数据库) -&amp;gt; 仓库&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/images/1565675036087.png&quot; alt=&quot;1565675036087&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://talenhao.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://talenhao.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>arch linux pacman清理</title>
    <link href="https://talenhao.github.io/2019/08/06/arch-linux-pacman%E6%B8%85%E7%90%86/"/>
    <id>https://talenhao.github.io/2019/08/06/arch-linux-pacman清理/</id>
    <published>2019-08-06T09:37:36.000Z</published>
    <updated>2019-08-06T09:37:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pacman"><a href="#pacman" class="headerlink" title="pacman"></a>pacman</h1><p>清理已经安装的包缓存文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pacman -Scc</span><br><span class="line"></span><br><span class="line">[Tue Aug 06 talen@tp-arch-tianfei pkg]$ sudo pacman -Scc</span><br><span class="line">[sudo] password for talen:</span><br><span class="line">Cache directory: /var/cache/pacman/pkg/</span><br><span class="line">:: Do you want to remove ALL files from cache? [y/N] y</span><br><span class="line">removing all files from cache...</span><br><span class="line">Database directory: /var/lib/pacman/</span><br><span class="line">:: Do you want to remove unused repositories? [Y/n] y</span><br><span class="line">removing unused sync repositories...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;pacman&quot;&gt;&lt;a href=&quot;#pacman&quot; class=&quot;headerlink&quot; title=&quot;pacman&quot;&gt;&lt;/a&gt;pacman&lt;/h1&gt;&lt;p&gt;清理已经安装的包缓存文件&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;tabl
      
    
    </summary>
    
      <category term="arch" scheme="https://talenhao.github.io/categories/arch/"/>
    
    
      <category term="arch" scheme="https://talenhao.github.io/tags/arch/"/>
    
      <category term="pacman" scheme="https://talenhao.github.io/tags/pacman/"/>
    
  </entry>
  
  <entry>
    <title>linux终端中文显示问题修复</title>
    <link href="https://talenhao.github.io/2019/08/05/linux%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/"/>
    <id>https://talenhao.github.io/2019/08/05/linux终端中文显示问题修复/</id>
    <published>2019-08-05T02:32:58.000Z</published>
    <updated>2019-08-05T02:32:58.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[talen@tp-arch-tianfei nginx]$ ls</span><br><span class="line">'Mastering Nginx.pdf'</span><br><span class="line">'Nginx 1 Web Server Implementation Cookbook.pdf'</span><br><span class="line">'Nginx Essentials.pdf'</span><br><span class="line">'Nginx From Beginner to Pro.pdf'</span><br><span class="line">'Nginx HTTP Server, Third Edition.pdf'</span><br><span class="line">'Nginx Module Extension.pdf'</span><br><span class="line">'Nginx'$'\346\225\231\347\250\213\344\273\216\345\205\245\351\227\250\345\210\260\347\262\276\351\200\232''('$'\350\277\220\347\273\264\347\224\237\345\255\230\346\227\266\351\227\264''TTLSA'$'\345\207\272\345\223\201'').pdf'</span><br><span class="line"> nginx</span><br><span class="line"> nginx-kernel.txt</span><br><span class="line"> nginx-pdf</span><br><span class="line"> nginx.conf.info</span><br><span class="line"> nginx.dot</span><br><span class="line">'nginx: See Active connections _ Connections Per Seconds.html'</span><br><span class="line"> nginx__try_files</span><br><span class="line"> nginx_architecture.png</span><br><span class="line"> nginx_conf.dot</span><br><span class="line"> nginx_setup.dot</span><br><span class="line">'nginx'$'\347\254\254\344\270\211\346\226\271\346\250\241\345\235\227''.txt'</span><br><span class="line">'nginx'$'\347\274\226\350\257\221\345\217\202\346\225\260''.txt'</span><br><span class="line">''$'\345\206\263\346\210\230''Nginx'$'\357\274\232'' '$'\347\263\273\347\273\237\345\215\267'' - '$'\351\253\230\346\200\247\350\203\275''Web'$'\346\234\215\345\212\241\345\231\250\350\257\246\350\247\243\344\270\216\350\277\220\347\273\264''(jb51.net).pdf'</span><br><span class="line">''$'\345\256\236\346\210\230''Nginx_'$'\345\217\226\344\273\243''Apache'$'\347\232\204\351\253\230\346\200\247\350\203\275''Web'$'\346\234\215\345\212\241\345\231\250''.'$'\345\274\240\345\256\264''.'$'\346\211\253\346\217\217\347\211\210''.pdf'</span><br><span class="line">''$'\345\256\236\346\210\230''nginx'</span><br><span class="line">''$'\346\267\261\345\205\245\345\211\226\346\236\220''Nginx.pdf'</span><br><span class="line">''$'\346\267\261\345\205\245\347\220\206\350\247\243''Nginx'$'\346\250\241\345\235\227\345\274\200\345\217\221\344\270\216\346\236\266\346\236\204\350\247\243\346\236\220''.pdf'</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">[talen@tp-arch-tianfei nginx]$ locale</span><br><span class="line">LANG=C</span><br><span class="line">LC_CTYPE="C"</span><br><span class="line">LC_NUMERIC="C"</span><br><span class="line">LC_TIME="C"</span><br><span class="line">LC_COLLATE="C"</span><br><span class="line">LC_MONETARY="C"</span><br><span class="line">LC_MESSAGES="C"</span><br><span class="line">LC_PAPER="C"</span><br><span class="line">LC_NAME="C"</span><br><span class="line">LC_ADDRESS="C"</span><br><span class="line">LC_TELEPHONE="C"</span><br><span class="line">LC_MEASUREMENT="C"</span><br><span class="line">LC_IDENTIFICATION="C"</span><br><span class="line">LC_ALL=</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ locale -a</span><br><span class="line">C</span><br><span class="line">POSIX</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[talen@tp-arch-tianfei nginx]$ sudo vim /etc/locale.gen</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ cat /etc/locale.gen  |grep -v '#'</span><br><span class="line">en_US.UTF-8 UTF-8  </span><br><span class="line">zh_CN.GBK GBK  </span><br><span class="line">zh_CN.UTF-8 UTF-8  </span><br><span class="line">[talen@tp-arch-tianfei nginx]$ sudo locale-gen </span><br><span class="line">Generating locales...</span><br><span class="line">  en_US.UTF-8... done</span><br><span class="line">  zh_CN.GBK... done</span><br><span class="line">  zh_CN.UTF-8... done</span><br><span class="line">Generation complete.</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ locale -a</span><br><span class="line">C</span><br><span class="line">POSIX</span><br><span class="line">en_US.utf8</span><br><span class="line">zh_CN.gbk</span><br><span class="line">zh_CN.utf8</span><br><span class="line"></span><br><span class="line">[talen@tp-arch-tianfei nginx]$ sudo localectl set-locale LANG=en_US.UTF-8</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ locale &gt; ~/.config/locale.conf</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ sed -i 's/=.*/="en_US.UTF-8"/' ~/.config/locale.conf </span><br><span class="line">[talen@tp-arch-tianfei ~]$ locale</span><br><span class="line">LANG=C</span><br><span class="line">LC_CTYPE="C"</span><br><span class="line">LC_NUMERIC="C"</span><br><span class="line">LC_TIME="C"</span><br><span class="line">LC_COLLATE="C"</span><br><span class="line">LC_MONETARY="C"</span><br><span class="line">LC_MESSAGES="C"</span><br><span class="line">LC_PAPER="C"</span><br><span class="line">LC_NAME="C"</span><br><span class="line">LC_ADDRESS="C"</span><br><span class="line">LC_TELEPHONE="C"</span><br><span class="line">LC_MEASUREMENT="C"</span><br><span class="line">LC_IDENTIFICATION="C"</span><br><span class="line">LC_ALL=</span><br><span class="line">[talen@tp-arch-tianfei ~]$ LANG= source /etc/profile.d/locale.sh</span><br><span class="line">[talen@tp-arch-tianfei ~]$ locale</span><br><span class="line">LANG=C</span><br><span class="line">LC_CTYPE=en_US.UTF-8</span><br><span class="line">LC_NUMERIC=en_US.UTF-8</span><br><span class="line">LC_TIME=en_US.UTF-8</span><br><span class="line">LC_COLLATE=en_US.UTF-8</span><br><span class="line">LC_MONETARY=en_US.UTF-8</span><br><span class="line">LC_MESSAGES=en_US.UTF-8</span><br><span class="line">LC_PAPER=en_US.UTF-8</span><br><span class="line">LC_NAME=en_US.UTF-8</span><br><span class="line">LC_ADDRESS=en_US.UTF-8</span><br><span class="line">LC_TELEPHONE=en_US.UTF-8</span><br><span class="line">LC_MEASUREMENT=en_US.UTF-8</span><br><span class="line">LC_IDENTIFICATION=en_US.UTF-8</span><br><span class="line">LC_ALL=</span><br><span class="line"></span><br><span class="line">[talen@tp-arch-tianfei t.web]$ ls</span><br><span class="line"> apache                             http401认证请求.png  'http method1.png'   http常见状态码.png   http状态码.png                 tomcat</span><br><span class="line"> apache整合tomcat多实例多网站.png   httpbase64.png       'http method.png'    http报文.png         http盲中继keep-alive挂起问题   代理与网关区别</span><br><span class="line"> http401认证请求                    httpbase65.png        http常用方法.png    http报文内容         nginx                          基本web服务器请求步骤</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[talen@tp-arch-tianfei nginx]$ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Mastering Nginx.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx 1 Web Server Implementation Cookbook.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx Essentials.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx From Beginner to Pro.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx HTTP Server, Third Edition.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx Module Extension.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx&#39;$&#39;\346\225\231\347\250\213\344\273\216\345\205\245\351\227\250\345\210\260\347\262\276\351\200\232&#39;&#39;(&#39;$&#39;\350\277\220\347\273\264\347\224\237\345\255\230\346\227\266\351\227\264&#39;&#39;TTLSA&#39;$&#39;\345\207\272\345\223\201&#39;&#39;).pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx-kernel.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx-pdf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx.conf.info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx.dot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;nginx: See Active connections _ Connections Per Seconds.html&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx__try_files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx_architecture.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx_conf.dot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx_setup.dot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;nginx&#39;$&#39;\347\254\254\344\270\211\346\226\271\346\250\241\345\235\227&#39;&#39;.txt&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;nginx&#39;$&#39;\347\274\226\350\257\221\345\217\202\346\225\260&#39;&#39;.txt&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\345\206\263\346\210\230&#39;&#39;Nginx&#39;$&#39;\357\274\232&#39;&#39; &#39;$&#39;\347\263\273\347\273\237\345\215\267&#39;&#39; - &#39;$&#39;\351\253\230\346\200\247\350\203\275&#39;&#39;Web&#39;$&#39;\346\234\215\345\212\241\345\231\250\350\257\246\350\247\243\344\270\216\350\277\220\347\273\264&#39;&#39;(jb51.net).pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\345\256\236\346\210\230&#39;&#39;Nginx_&#39;$&#39;\345\217\226\344\273\243&#39;&#39;Apache&#39;$&#39;\347\232\204\351\253\230\346\200\247\350\203\275&#39;&#39;Web&#39;$&#39;\346\234\215\345\212\241\345\231\250&#39;&#39;.&#39;$&#39;\345\274\240\345\256\264&#39;&#39;.&#39;$&#39;\346\211\253\346\217\217\347\211\210&#39;&#39;.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\345\256\236\346\210\230&#39;&#39;nginx&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\346\267\261\345\205\245\345\211\226\346\236\220&#39;&#39;Nginx.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\346\267\261\345\205\245\347\220\206\350\247\243&#39;&#39;Nginx&#39;$&#39;\346\250\241\345\235\227\345\274\200\345\217\221\344\270\216\346\236\266\346\236\204\350\247\243\346\236\220&#39;&#39;.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="https://talenhao.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://talenhao.github.io/tags/linux/"/>
    
      <category term="terminal" scheme="https://talenhao.github.io/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>react study</title>
    <link href="https://talenhao.github.io/2019/08/01/react-study/"/>
    <id>https://talenhao.github.io/2019/08/01/react-study/</id>
    <published>2019-08-01T09:00:31.000Z</published>
    <updated>2019-08-01T09:00:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React学习笔记"><a href="#React学习笔记" class="headerlink" title="React学习笔记"></a>React学习笔记</h1><pre class="mermaid">graph TBJavaScript-->JavaScript_runtimeJavaScript_runtime-->Node.jsJavaScript-->v8v8(Google Chrome V8 引擎)-->Node.jsNode.js-->webpack(npm package 管理器)webpack(webpack 打包器)-->npmJSX-->babel(babel编译器)npm-->create-react-app(create-react-app官方脚手架)create-react-app-->React(React framework)React_component(React 组件化三大基本要素)babel-->React_component(React)render-->React_componentReact_component-->ReactReact-->vdom(虚拟DOM)React-->diff(DIFF算法)out_data(外部数据)-->this.propsthis.props-->render(render方法)bindin(内部数据)-->this.statethis.state-->renderadd-dom(步骤 1 添加一个 DOM 容器到 HTML)-->script-tag(步骤 2 添加 Script 标签)script-tag-->create_react(步骤 3创建一个 React 组件)</pre><p>面向数据编程</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><a id="more"></a><ol><li>… 展开运算符</li></ol><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><ul><li>父组件通过属性向子组件传递参数</li><li>子组件通过this.props接收父组件传递过来的参数值</li><li>子组件如想和父组件通信,需要调用父组件传递过来的方法</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloMessage</span> <span class="keyword">extends</span> <span class="title">Reacts</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">    render()&#123;</span><br><span class="line">        <span class="keyword">return</span>(</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            hello, &#123;<span class="keyword">this</span>.props.name&#125;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;React学习笔记&quot;&gt;&lt;a href=&quot;#React学习笔记&quot; class=&quot;headerlink&quot; title=&quot;React学习笔记&quot;&gt;&lt;/a&gt;React学习笔记&lt;/h1&gt;&lt;pre class=&quot;mermaid&quot;&gt;graph TB
JavaScript--&gt;JavaScript_runtime
JavaScript_runtime--&gt;Node.js
JavaScript--&gt;v8
v8(Google Chrome V8 引擎)--&gt;Node.js
Node.js--&gt;webpack(npm package 管理器)
webpack(webpack 打包器)--&gt;npm
JSX--&gt;babel(babel编译器)
npm--&gt;create-react-app(create-react-app官方脚手架)
create-react-app--&gt;React(React framework)
React_component(React 组件化三大基本要素)
babel--&gt;React_component(React)
render--&gt;React_component
React_component--&gt;React
React--&gt;vdom(虚拟DOM)
React--&gt;diff(DIFF算法)

out_data(外部数据)--&gt;this.props
this.props--&gt;render(render方法)
bindin(内部数据)--&gt;this.state
this.state--&gt;render

add-dom(步骤 1 添加一个 DOM 容器到 HTML)--&gt;script-tag(步骤 2 添加 Script 标签)
script-tag--&gt;create_react(步骤 3创建一个 React 组件)&lt;/pre&gt;

&lt;p&gt;面向数据编程&lt;/p&gt;
&lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;
    
    </summary>
    
      <category term="react" scheme="https://talenhao.github.io/categories/react/"/>
    
      <category term="front-end" scheme="https://talenhao.github.io/categories/react/front-end/"/>
    
    
      <category term="react" scheme="https://talenhao.github.io/tags/react/"/>
    
      <category term="front-end" scheme="https://talenhao.github.io/tags/front-end/"/>
    
  </entry>
  
  <entry>
    <title>Python errors</title>
    <link href="https://talenhao.github.io/2019/07/31/Python-errors/"/>
    <id>https://talenhao.github.io/2019/07/31/Python-errors/</id>
    <published>2019-07-31T09:32:01.000Z</published>
    <updated>2019-07-31T09:32:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-Errors-原因"><a href="#python-Errors-原因" class="headerlink" title="python Errors 原因"></a>python Errors 原因</h1><h2 id="Q1"><a href="#Q1" class="headerlink" title="Q1"></a>Q1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2019-07-31 17:23:44,663 - jms_perm.py - INFO - perm_key: ([&apos;名字(zhi.ming)&apos;], [&apos;v-hostname.hx(10.10.100.100)&apos;])</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;jms_perm.py&quot;, line 338, in &lt;module&gt;</span><br><span class="line">    perm_args_list = perm_process()</span><br><span class="line">  File &quot;jms_perm.py&quot;, line 318, in perm_process</span><br><span class="line">    long_time_perms[perm_key] = perm</span><br><span class="line">TypeError: unhashable type: &apos;list&apos;</span><br></pre></td></tr></table></figure><h2 id="A1"><a href="#A1" class="headerlink" title="A1"></a>A1</h2><p>Python dict的key必须为hashable</p><a id="more"></a><p>问题中key中包含list或dict类型,所以报错.</p><p>可哈希的元素有：int, float, str, tuple<br> 不可哈希的元素有：list, set, dict</p><p>简单说在元素生命周期中,元素值会发布变动的为unhashable</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python-Errors-原因&quot;&gt;&lt;a href=&quot;#python-Errors-原因&quot; class=&quot;headerlink&quot; title=&quot;python Errors 原因&quot;&gt;&lt;/a&gt;python Errors 原因&lt;/h1&gt;&lt;h2 id=&quot;Q1&quot;&gt;&lt;a href=&quot;#Q1&quot; class=&quot;headerlink&quot; title=&quot;Q1&quot;&gt;&lt;/a&gt;Q1&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2019-07-31 17:23:44,663 - jms_perm.py - INFO - perm_key: ([&amp;apos;名字(zhi.ming)&amp;apos;], [&amp;apos;v-hostname.hx(10.10.100.100)&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;jms_perm.py&amp;quot;, line 338, in &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    perm_args_list = perm_process()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;jms_perm.py&amp;quot;, line 318, in perm_process&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    long_time_perms[perm_key] = perm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TypeError: unhashable type: &amp;apos;list&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;A1&quot;&gt;&lt;a href=&quot;#A1&quot; class=&quot;headerlink&quot; title=&quot;A1&quot;&gt;&lt;/a&gt;A1&lt;/h2&gt;&lt;p&gt;Python dict的key必须为hashable&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://talenhao.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://talenhao.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>git change user name in history commits</title>
    <link href="https://talenhao.github.io/2019/07/26/git-change-user-name-in-history-commits/"/>
    <id>https://talenhao.github.io/2019/07/26/git-change-user-name-in-history-commits/</id>
    <published>2019-07-26T07:45:14.000Z</published>
    <updated>2019-07-26T07:45:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-修改历史提交记录中的用户名"><a href="#Git-修改历史提交记录中的用户名" class="headerlink" title="Git 修改历史提交记录中的用户名"></a>Git 修改历史提交记录中的用户名</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>之间git提交时的用户名不对,但已经提交了4个commit了,所以需要修改历史记录中的用户名.</p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>使用git rebase</p><p>git rebase会把基于 rebase的版本后的commit取消掉,并临时保存为path到.git/reabase目录中,然后把当前分支更新到rebase的分支,最后把你修改的成为path的版本以补丁的形式应用到rebase的版本上.<br><img src="/images/1564128143617.png" alt="1564128143617"></p><a id="more"></a><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>这里把要rebase到4个commit之前的一个版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[Fri Jul 26 talen@tp-arch-tianfei capacity]$ git rebase -i HEAD~5</span><br><span class="line">pick 7e1b101 X0</span><br><span class="line">pick 983d257 X1</span><br><span class="line">pick 17c4a0e X2</span><br><span class="line">pick 41e90ef X3</span><br><span class="line">pick 822104d X4</span><br><span class="line"><span class="meta">#</span><span class="bash"> Rebase 5131eea..822104d onto 41e90ef (5 commands)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Commands:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> p, pick &lt;commit&gt; = use commit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> e, edit &lt;commit&gt; = use commit, but stop <span class="keyword">for</span> amending</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> f, fixup &lt;commit&gt; = like <span class="string">"squash"</span>, but discard this commit<span class="string">'s log message</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> x, <span class="built_in">exec</span> &lt;<span class="built_in">command</span>&gt; = run <span class="built_in">command</span> (the rest of the line) using shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> b, <span class="built_in">break</span> = stop here (<span class="built_in">continue</span> rebase later with <span class="string">'git rebase --continue'</span>)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> d, drop &lt;commit&gt; = remove commit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> l, label &lt;label&gt; = label current HEAD with a name</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> t, reset &lt;label&gt; = reset HEAD to a label</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [<span class="comment"># &lt;oneline&gt;]</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> .       create a merge commit using the original merge commit<span class="string">'s</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> .       message (or the oneline, <span class="keyword">if</span> no original merge commit was</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> However, <span class="keyword">if</span> you remove everything, the rebase will be aborted.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that empty commits are commented out</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Stopped at 4ac3916...  X0</span><br><span class="line">You can amend the commit now, with</span><br><span class="line">git commit --amend </span><br><span class="line">Once you are satisfied with your changes, run</span><br><span class="line">git rebase --continue</span><br></pre></td></tr></table></figure><p>vi修改X1-X4的pick为edit,X0是rebase的版本,wq:退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Fri Jul 26 talen@tp-arch-tianfei capacity]$ git commit --amend --author="tianfei.hao &lt;tianfei.hao@example.com&gt;" --no-edit</span><br></pre></td></tr></table></figure><p>修改正确的用户名及邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Fri Jul 26 talen@tp-arch-tianfei capacity]$ git rebase --continue</span><br><span class="line">[Fri Jul 26 talen@tp-arch-tianfei capacity]$ git push origin new_journey --force</span><br></pre></td></tr></table></figure><p>强制提交操作</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git-修改历史提交记录中的用户名&quot;&gt;&lt;a href=&quot;#Git-修改历史提交记录中的用户名&quot; class=&quot;headerlink&quot; title=&quot;Git 修改历史提交记录中的用户名&quot;&gt;&lt;/a&gt;Git 修改历史提交记录中的用户名&lt;/h1&gt;&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;之间git提交时的用户名不对,但已经提交了4个commit了,所以需要修改历史记录中的用户名.&lt;/p&gt;
&lt;h2 id=&quot;方案&quot;&gt;&lt;a href=&quot;#方案&quot; class=&quot;headerlink&quot; title=&quot;方案&quot;&gt;&lt;/a&gt;方案&lt;/h2&gt;&lt;p&gt;使用git rebase&lt;/p&gt;
&lt;p&gt;git rebase会把基于 rebase的版本后的commit取消掉,并临时保存为path到.git/reabase目录中,然后把当前分支更新到rebase的分支,最后把你修改的成为path的版本以补丁的形式应用到rebase的版本上.&lt;br&gt;&lt;img src=&quot;/images/1564128143617.png&quot; alt=&quot;1564128143617&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://talenhao.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://talenhao.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>python学习笔记</title>
    <link href="https://talenhao.github.io/2019/07/25/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://talenhao.github.io/2019/07/25/python学习笔记/</id>
    <published>2019-07-25T07:28:12.000Z</published>
    <updated>2019-07-25T07:28:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-笔记"><a href="#python-笔记" class="headerlink" title="python 笔记"></a>python 笔记</h1><h2 id="设计模型"><a href="#设计模型" class="headerlink" title="设计模型"></a>设计模型</h2><h3 id="1-装饰器-decorator-模式"><a href="#1-装饰器-decorator-模式" class="headerlink" title="1. 装饰器(decorator)模式"></a>1. 装饰器(decorator)模式</h3><p>(俄罗斯套娃封装)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@装饰器二</span></span><br><span class="line"><span class="meta">@装饰器一</span></span><br><span class="line">核心对象</span><br></pre></td></tr></table></figure><ol><li>创建一个装饰函数,内部定义一个wrapper新函数执行一些操作,将被装饰函数作为参数传入装饰函数,返回新函数</li><li>行为类似多重继承.</li><li>当在装饰器与继承之间选择时,只需要根据一些条件对对象进行动态修改时使用装饰器.<ol><li>日志装饰器,传递一些参数动态记录日志</li></ol></li><li>作用:<ol><li>增强核心对象的能力</li><li>让核心对象支持多种可选行为</li><li>编写判断执行不同的装饰器</li></ol></li></ol><h3 id="2-观察者模式"><a href="#2-观察者模式" class="headerlink" title="2.  观察者模式"></a>2.  观察者模式</h3><p>状态监测,事件处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">核心对象-&gt;update()-&gt;观察者们-&gt;各自处理自已的任务</span><br></pre></td></tr></table></figure><p><img src="/images/1564143774413.png" alt="1564143774413"></p><h3 id="3-策略模式"><a href="#3-策略模式" class="headerlink" title="3. 策略模式"></a>3. 策略模式</h3><p>每个策略类都包含同名方法,接收相同参数.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">核心对象-&gt;策略1</span><br><span class="line">核心对象-&gt;策略2</span><br></pre></td></tr></table></figure><h3 id="4-状态模式"><a href="#4-状态模式" class="headerlink" title="4.状态模式"></a>4.状态模式</h3><p>状态类的目的是实现状态转换,需要一个上下文类提供转换接口和指针指向状态类,状态类对前面的调用者是隐藏的.</p><figure class="highlight graph"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Context -&gt; state -&gt; [state1, state2, state3] -&gt; Parser</span><br><span class="line">OpenTag</span><br><span class="line">||</span><br><span class="line">FirstTag-&gt;ChildNode&lt;=&gt;Text</span><br><span class="line">||</span><br><span class="line">CloseTag</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>策略模式用于运行时选择一种算法</strong>,如一张图片根据不同的情况处理成不同的状态</p><p><strong>状态模式用于允许在不同状态之间进行动态切换,</strong>如解析XML文件,context上下文切换</p><h3 id="5-单件模式"><a href="#5-单件模式" class="headerlink" title="5.单件模式"></a>5.单件模式</h3><p>只有一个实例的对象类.</p><p><strong>模块级实例变量能够模仿单件实例</strong></p><h3 id="6-模板模式"><a href="#6-模板模式" class="headerlink" title="6.模板模式"></a>6.模板模式</h3><h3 id="7-适配模式-adapter"><a href="#7-适配模式-adapter" class="headerlink" title="7.适配模式(adapter)"></a>7.适配模式(adapter)</h3><p>接口适配转换</p><h3 id="8-外观模式-facade"><a href="#8-外观模式-facade" class="headerlink" title="8.外观模式(facade)"></a>8.外观模式(facade)</h3><p>为复杂的组件提供典型用途的简单接口,如requests为urllib,编写发送邮件的类为smtplib,samplib等</p><h3 id="9-享元模式"><a href="#9-享元模式" class="headerlink" title="9.享元模式"></a>9.享元模式</h3><p>专为节省内存而设计的,如果有成百上千的相同对象,将相同特性整合进一个享元可极大减少内存消耗.</p><h3 id="10-命令模式"><a href="#10-命令模式" class="headerlink" title="10.命令模式"></a>10.命令模式</h3><h3 id="11-抽象工厂模式"><a href="#11-抽象工厂模式" class="headerlink" title="11.抽象工厂模式"></a>11.抽象工厂模式</h3><h3 id="12-组合模式"><a href="#12-组合模式" class="headerlink" title="12.组合模式"></a>12.组合模式</h3><p>简单的组件构成复杂的树状结构</p><h2 id="迭代器iterator-amp-递归器"><a href="#迭代器iterator-amp-递归器" class="headerlink" title="迭代器iterator&amp;递归器"></a>迭代器<strong>iterator</strong>&amp;递归器</h2><ol><li>迭代器<ol><li>字符串(有时需要将字符串视为原子的.否则有时有可能导致无穷递归.)</li><li>每次只取一个对象,不会对内存造成巨大开销.</li></ol></li><li>递归器</li></ol><h2 id="表达式-amp-语句"><a href="#表达式-amp-语句" class="headerlink" title="表达式 &amp; 语句"></a>表达式 &amp; 语句</h2><ol><li>表达式有返回值<ol><li>yield是表达式,所以调用生成器需要next()来执行表达式</li><li>send是传递值给yield表达式</li></ol></li></ol><h2 id="python-运算符"><a href="#python-运算符" class="headerlink" title="python 运算符"></a>python 运算符</h2><h3 id="Python逻辑运算符"><a href="#Python逻辑运算符" class="headerlink" title="Python逻辑运算符"></a>Python逻辑运算符</h3><p>Python语言支持逻辑运算符，以下假设变量 a 为 10, b为 20:</p><table><thead><tr><th align="left">运算符</th><th align="left">逻辑表达式</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">and</td><td align="left">x and y</td><td align="left">布尔”与” - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</td><td align="left">(a and b) 返回 20。</td></tr><tr><td align="left">or</td><td align="left">x or y</td><td align="left">布尔”或”    - 如果 x 是非 0，它返回 x 的值，否则它返回 y 的计算值。</td><td align="left">(a or b) 返回 10。</td></tr><tr><td align="left">not</td><td align="left">not x</td><td align="left">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td align="left">not(a and b) 返回 False</td></tr></tbody></table><h3 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ plus</span><br><span class="line">- minus</span><br><span class="line">/ slash</span><br><span class="line">* asterisk</span><br><span class="line">% percent</span><br><span class="line">&lt; less-than</span><br><span class="line">&gt; greater-than</span><br><span class="line">&lt;= less-than-equal</span><br><span class="line">&gt;= greater-than-equal</span><br></pre></td></tr></table></figure><h2 id="print"><a href="#print" class="headerlink" title="print"></a>print</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"If I add %d, %r, and %d I get %d."</span> % (my_age, my_height, my_weight, my_age + my_height + my_weight)</span><br></pre></td></tr></table></figure><p>标识符  %s, %r, %d</p><h2 id="byte-amp-string"><a href="#byte-amp-string" class="headerlink" title="byte &amp; string"></a>byte &amp; string</h2><p>Unicode<br>字符串和二进制数据流</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bytes object</span></span><br><span class="line">b = <span class="string">b"example"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># str object</span></span><br><span class="line">s = <span class="string">"example"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># str to bytes</span></span><br><span class="line">bytes(s, encoding = <span class="string">"utf8"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bytes to str</span></span><br><span class="line">str(b, encoding = <span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># an alternative method</span></span><br><span class="line"><span class="comment"># str to bytes</span></span><br><span class="line">str.encode(s)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bytes to str</span></span><br><span class="line">bytes.decode(b)</span><br></pre></td></tr></table></figure><p>编码就是把一个字符用一个二进制来表示。<br>字符串类str里有一个encode()方法，它是从字符串向比特流的编码过程。而bytes类型恰好有个decode()方法，它是从比特流向字符串解码的过程。<br>ASCII码，一种8位即1个字节的编码规范，它可以涵盖整个英语系的编码需要。<br><strong>python 中编码print后会以ascii编码方式显示,所以中文会显示16进制,英文会直接显示ascii后的原文.</strong></p><p>世界标准:</p><p>ASCII(en:1byte,8bits) =&gt;</p><p>unicode(en:2bytes,16bits; cn:3bytes,24bits) =&gt;</p><p>utf-8(en:1byte,8bits; cn:3bytes,24bits)</p><p>中国标准</p><p>GBK 2bytes, 16bits</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p><code>raw_input()</code></p><h2 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h2><p>argument 命令行参数<br>Parameters</p><h2 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h2><p>close – Closes the file. Like File-&gt;Save.. in your editor.<br>read – Reads the contents of the file. You can assign the result to a variable.<br>readline – Reads just one line of a text file.<br>truncate – Empties the file. Watch out if you care about the file.<br>write(‘stuff’) – Writes “stuff” to the file.  </p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li><p>匿名函数</p><p>  lambda x: x * 8</p></li><li><p>回调函数</p><p>作为参数传入中间函数的函数</p><p>回调实际上有两种：阻塞式回调和延迟式回调。两者的区别在于：阻塞式回调里，回调函数的调用一定发生在起始函数返回之前；而延迟式回调里，回调函数的调用有可能是在起始函数返回之后。</p></li><li><p>中间函数</p><p>  需要传入回调函数的函数</p></li><li><p>起始函数</p><p>  调用中间函数的函数</p></li><li><p>装饰函数</p><p>  ​    代码风格</p><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logging_tool</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*arg, **kwargs)</span>:</span></span><br><span class="line">        logging.info(<span class="string">'%s is running...'</span> % func.__name__)</span><br><span class="line">        <span class="comment"># 把today当作参数传递进来，执行func()就相当于执行today()</span></span><br><span class="line">        func()</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">    @logging_tool</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">today</span><span class="params">()</span>:</span></span><br><span class="line">        print(<span class="string">'2018-05-25'</span>)</span><br><span class="line"></span><br><span class="line">        today()</span><br></pre></td></tr></table></figure></code></pre></li></ul><h2 id="多进程-多线程"><a href="#多进程-多线程" class="headerlink" title="多进程,多线程"></a>多进程,多线程</h2><p>What is a process? A process is just an instance of an executing program.<br>sbla(socket, bind, listen, accept)<br>process -&gt; UNIX fork()</p><blockquote><p>进程&gt;线程&gt;协程 </p><p>Python对协程的支持是通过generator实现的。</p></blockquote><blockquote><p>子程序顺序栈式调用,不可乱序</p><p>协程(Coroutine)中断式调用,可乱序</p></blockquote><p>子程序，或者称为函数，在所有语言中都是层级调用(栈式调用)，比如A调用B，B在执行过程中又调用了C，C执行完毕返回，B执行完毕返回，最后是A执行完毕。</p><p>子程序调用总是一个入口，一次返回，调用顺序是明确的。而协程的调用和子程序不同。</p><blockquote><p>Python中的协程大概经历了如下三个阶段： </p><ol><li>最初的生成器变形yield/send </li><li>引入@asyncio.coroutine和yield from </li><li>在最近的Python3.5版本中引入async/await关键字</li></ol></blockquote><h2 id="生成器-generator-协程-yield-需要多次调用-执行先中断-返回变量-再执行"><a href="#生成器-generator-协程-yield-需要多次调用-执行先中断-返回变量-再执行" class="headerlink" title="生成器(generator)(协程)(yield,需要多次调用:执行先中断,返回变量,再执行.)"></a>生成器(generator)(协程)(yield,需要多次调用:执行先中断,返回变量,再执行.)</h2><p>函数是顺序执行,生成器也是顺序计算的.</p><p>协程看上去也是子程序，但执行过程中，在子程序内部可中断，然后转而执行别的子程序，在适当的时候再返回来接着执行。</p><p>注意，在一个子程序中中断，去执行其他子程序，不是函数调用，有点类似CPU的中断。</p><ol><li><p>列表推导式 -&gt; []</p><ol><li>直接打印</li></ol></li><li><p>生成器推导式 -&gt; ()</p><ol><li>next(generator)激活,最后一个返回StopIteration error</li><li>generator保存的是算法,调用才开始计算</li><li>可迭代对象</li><li>生成器并没有将所有值放入内存中，而是实时地生成这些值，并且不会保存上一次迭代生成的值，因而，在迭代一个比较大的数据的时候，使用迭代器更好</li><li>yield 的作用就是返回迭代器</li><li>python直到遇到关键字yield之后，中断代码执行，返回yield变量值</li><li>send 函数就是给yield语句赋值<ol><li>先调用,返回原值(send并不会改变yield的返回值)</li><li>发送send,修改变量,并返回next值</li><li>因为当send方法的参数为None时，它与next方法完全等价(不规范,慎用)</li></ol></li><li>close可以关闭生成器</li></ol></li><li><p>生成器使用场景</p><ol><li>项目中如何使用yield，使用的思路就是，中断代码执行，在yield之前打开一个资源，然后在yield之后关闭这个资源，这样可以很好地保证每次只有一个资源被打开，同时执行完成之后资源会被关闭</li><li>第二个思路，就是节约内存，不要一下子加载所有的资源</li></ol></li></ol><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><p>if 语句的判断条件可以用&gt;（大于）、&lt;(小于)、==（等于）、&gt;=（大于等于）、&lt;=（小于等于）来表示其关系。</p><h4 id="True-amp-False"><a href="#True-amp-False" class="headerlink" title="True &amp; False"></a>True &amp; False</h4><p>针对Python中的True和False的定义，在不同版本的Python中是这样定义的：</p><ul><li>Python 2：None, 0, 和空字符串都被算作 False，其他的均为 True</li><li>Python 3：None，0，空字符串，空列表，空字典都算是False，所有其他值都是True</li></ul><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><ol><li><p>编写代码首要考虑它的可读性(DRY不要让自己重复)</p><ol><li>继承(超类里也可定义子类才有的方法,使得自己成为通用类)</li><li>组合(大部分继承关系都可以建模替代为组合关系,反之大部分组合都不能建模为继承)<ol start="3"><li>关联</li></ol></li></ol></li></ol><p><img src="/images/1564058294189.png" alt="1564058294189"></p><ol><li><p>如果只对数据操作-&gt;使用python数据结构</p></li><li><p>如果只关注行为不存储数据-&gt;使用函数</p></li></ol><p><strong>如果同时包含数据和行为</strong> -&gt;使用对象-&gt;代码更易读而不关心长短,对象之间的继承,关联,组合.</p><ul><li><p>随着程序的进一步扩展,需要把一组相关的变量传递到不同的函数中,这是一个将变量函数组合成类的好场景.(数据与行为的分离)</p><ul><li>存储数据(名词)<ul><li>数据对象CRUD操作行为使用property</li><li>参数也是另一种对象类型(自身就是文档)</li></ul></li><li>数据行为操作(动词)<ul><li>为了看起来像函数一样更易用,可以在<strong>init</strong>构造函数中接收参数而不是在方法中.</li></ul></li><li>管理对象(有点类似之前自己使用main实现的函数,保证步骤顺序)</li></ul><p>python不像java语言,类私有变量可以直接访问,所以变量可以直接访问,无需访问方法.</p></li></ul><blockquote><p><strong>使用property优雅的处理对象属性</strong>:可以直接访问name-&gt;property构造函数-&gt;调用方法,看起来跟直接访问属性一样.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, rgb_value, name)</span>:</span></span><br><span class="line">        self.rgb_value = rgb_value</span><br><span class="line">        self._name = name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_set_name</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"Invalid Name"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line">    name = property(_get_name, _set_name)</span><br><span class="line"><span class="comment"># or 另一种风格</span></span><br><span class="line"><span class="meta"> @property</span></span><br><span class="line">    <span class="comment"># foo.getter 对于长消耗的操作,可以只取一次然后缓存起来.</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._foo</span><br><span class="line"><span class="meta">    @foo.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self._foo = value</span><br></pre></td></tr></table></figure><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line">*** 忽略当前包下的模块,导入系统模块.</span><br><span class="line">相对导入：在不指明 package 名的情况下导入自己这个 package 的模块，比如一个 package 下有 a.py 和 b.py 两个文件，在 a.py 里 <span class="keyword">from</span> . <span class="keyword">import</span> b 即是相对导入 b.py。</span><br><span class="line"></span><br><span class="line">绝对导入：指明顶层 package 名。比如 <span class="keyword">import</span> a，Python 会在 sys.path 里寻找所有名为 a 的顶层模块。</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import: 在 <span class="number">3.0</span> 以前的旧版本中启用相对导入等特性所必须的 future 语句。</span><br><span class="line">如果你在main.py中写<span class="keyword">import</span> string,那么在Python <span class="number">2.4</span>或之前, Python会先查找当前目录下有没有string.py, 若找到了，则引入该模块，然后你在main.py中可以直接用string了。如果你是真的想用同目录下的string.py那就好，但是如果你是想用系统自带的标准string.py呢？那其实没有什么好的简洁的方式可以忽略掉同目录的string.py而引入系统自带的标准string.py。这时候你就需要<span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import了。</span><br><span class="line">---------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">相同缩进</span><br><span class="line">：开始缩进，短语句可以直接跟在：后面</span><br><span class="line">;可以连接多个操作语句</span><br><span class="line">＃注释</span><br><span class="line"><span class="string">'''大段注释'''</span></span><br><span class="line"><span class="string">"""大段注释"""</span></span><br><span class="line">基本输入：raw_input()</span><br><span class="line">基本输出：print()</span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*- 解决中文乱码</span></span><br><span class="line">print(var.decode(<span class="string">'utf-8'</span>).encode(<span class="string">'cp936'</span>))</span><br><span class="line">交互命令下可以当计算器使用。</span><br><span class="line"><span class="keyword">import</span> math基本的数学模块</span><br><span class="line">数据类型是程序的基础。程序设计的本质就是对数据进行处理。</span><br><span class="line">使用python数据结构基本不用考虑自己重新定义数据结构。</span><br><span class="line">数字,python中可以使用任意大的数字。</span><br><span class="line">基本类型：（整数，长整数，浮点数，复数），使用前无需声明其类型。</span><br><span class="line">运算符：**,*,/,%,+,-,|,^,&amp;,&lt;&lt;,&gt;&gt;按优先级下降</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2.30</span><span class="number">-1.30</span></span><br><span class="line"><span class="number">0.9999999999999998</span>由于浮点数精度问题。</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span>^<span class="number">3</span><span class="number">101</span>^<span class="number">011</span>=<span class="number">110</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">11</span>|<span class="number">5</span><span class="number">1011</span>|<span class="number">0101</span>=<span class="number">1111</span></span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4</span>&lt;&lt;<span class="number">2</span><span class="number">100</span>&lt;&lt;<span class="number">2</span>=<span class="number">10000</span> 等同于<span class="number">4</span>*<span class="number">2</span>**<span class="number">2</span></span><br><span class="line"><span class="number">16</span></span><br><span class="line">字符串：<span class="string">''</span>,<span class="string">""</span>,<span class="string">""" """</span>,<span class="string">''' '''</span></span><br><span class="line">转义符：\n,\t,\r,\\,\<span class="string">',\"</span></span><br><span class="line"><span class="string">原始字符串：R或r开头</span></span><br><span class="line"><span class="string">str操作方法：https://docs.python.org/3.5/library/stdtypes.html#string-methods</span></span><br><span class="line"><span class="string">字符串索引，分片 []</span></span><br><span class="line"><span class="string">字符串格式化：%c单字符,%d十进制数,%o八进制数,%s字符串,%x十六进制数，字母小写,%X十六进制数，字母大写</span></span><br><span class="line"><span class="string">%c%s%d % ('</span>a<span class="string">','</span>talen<span class="string">',5)</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print( "%c%s%d" % ('</span>a<span class="string">','</span>talen<span class="string">',5))</span></span><br><span class="line"><span class="string">atalen5</span></span><br><span class="line"><span class="string">字符串与数字的相互转换</span></span><br><span class="line"><span class="string">int(str),str(int)</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; int("10") +4</span></span><br><span class="line"><span class="string">14</span></span><br><span class="line"><span class="string">列表list[]</span></span><br><span class="line"><span class="string">字典dict&#123;key:value&#125;</span></span><br><span class="line"><span class="string">file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if,else</span></span><br><span class="line"><span class="string">for</span></span><br><span class="line"><span class="string">while</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">函数：def name(args):</span></span><br><span class="line"><span class="string">return</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">python</span></span><br><span class="line"><span class="string">  对象</span></span><br><span class="line"><span class="string">    元素</span></span><br><span class="line"><span class="string">  数据结构</span></span><br><span class="line"><span class="string">    自定义类</span></span><br><span class="line"><span class="string">    容器</span></span><br><span class="line"><span class="string">      序列    （迭代，索引，分片，加，乘，成员资格，最大，最小，长度）</span></span><br><span class="line"><span class="string">        列表</span></span><br><span class="line"><span class="string">        元组</span></span><br><span class="line"><span class="string">        字符串</span></span><br><span class="line"><span class="string">        Ｕnicode对象</span></span><br><span class="line"><span class="string">        buffer对象</span></span><br><span class="line"><span class="string">        xrange对象</span></span><br><span class="line"><span class="string">      映射</span></span><br><span class="line"><span class="string">        字典（python惟一内置映射类型）</span></span><br><span class="line"><span class="string">      集合</span></span><br><span class="line"><span class="string">  语句</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">包</span></span><br><span class="line"><span class="string">import 模块</span></span><br><span class="line"><span class="string">    函数（参数），函数可嵌套函数</span></span><br><span class="line"><span class="string">        内置函数</span></span><br><span class="line"><span class="string">        外置导入，from 模块名 import 函数，可以使用变量引用函数，效果等同函数操作。</span></span><br><span class="line"><span class="string">            类型对象</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">模块名.函数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">多态：操作的意义取决于操作对象的类型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">第4章：python的核心对象类型</span></span><br><span class="line"><span class="string">  数字、列表、字典、元组、</span></span><br><span class="line"><span class="string">第5章：数字</span></span><br><span class="line"><span class="string">  对象是python中最基本的概念，python编程的基础是对象。</span></span><br><span class="line"><span class="string">  python完整数字类型工具：</span></span><br><span class="line"><span class="string">    整数与浮点数</span></span><br><span class="line"><span class="string">    复数</span></span><br><span class="line"><span class="string">    固定精度的十进制数</span></span><br><span class="line"><span class="string">    有理分数</span></span><br><span class="line"><span class="string">    集合</span></span><br><span class="line"><span class="string">    布尔类型</span></span><br><span class="line"><span class="string">    无穷的整数精度</span></span><br><span class="line"><span class="string">    各种数字内置函数和模块</span></span><br><span class="line"><span class="string">  内置表达式操作符： + - * / &gt;&gt; ** &amp;等。</span></span><br><span class="line"><span class="string">    表达式是处理数字的最基本工具。</span></span><br><span class="line"><span class="string">    混合操作符表达式的优先级P120表5.2.越向后优先级越高。</span></span><br><span class="line"><span class="string">    使用（）分组子表达式改变优先级。</span></span><br><span class="line"><span class="string">    混合数字类型操作会将简单类型升级为复杂类型再计算。复杂度：整型&lt;浮点&lt;复数</span></span><br><span class="line"><span class="string">  内置数学函数：     pow, abs, round, int, hex, bin等</span></span><br><span class="line"><span class="string">  公用模块：        random, math等</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  变量：</span></span><br><span class="line"><span class="string">    变量在它第一次赋值时创建。</span></span><br><span class="line"><span class="string">    变量在表达式中使用将被替换为它们的值。</span></span><br><span class="line"><span class="string">    变量在表达式中使用前必须赋值。</span></span><br><span class="line"><span class="string">    变量像对象一样不需要一开始进行声明。</span></span><br><span class="line"><span class="string">  数字的显示格式：</span></span><br><span class="line"><span class="string">  　　repr代码交互式</span></span><br><span class="line"><span class="string">  　　str用户友好式</span></span><br><span class="line"><span class="string">  比较：一般比较与连续的长比较</span></span><br><span class="line"><span class="string">    对数字启作用，比较结果是一个布尔类型</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">python基础教程</span></span><br><span class="line"><span class="string">  第１章　基础知识</span></span><br><span class="line"><span class="string">    列表，字符串，字典是python中最重要的三种数据类型。</span></span><br><span class="line"><span class="string">  第２章 列表(可变)与元组（不可变）</span></span><br><span class="line"><span class="string">    数据结构：是通过方式对元素的集合</span></span><br><span class="line"><span class="string">    容器数据结构：包含其它对象的任意对象。主要有序列（列表，元组等）与映射（字典等），集合。</span></span><br><span class="line"><span class="string">    序列中的每个元素都有一个编号，映射每个元素都有一个键。</span></span><br><span class="line"><span class="string">      python中最基本的数据结构是序列（内置６种，重点包括元组与列表，其它有字符串，Unicode字符串，buffer对象，xrange对象），元素序号是索引。</span></span><br><span class="line"><span class="string">      操作一组数值时，使用序列。</span></span><br><span class="line"><span class="string">      序列中可以包含序列。</span></span><br><span class="line"><span class="string">      序列操作：</span></span><br><span class="line"><span class="string">        索引</span></span><br><span class="line"><span class="string">          &gt;&gt;&gt; getting = '</span>hello<span class="string">'</span></span><br><span class="line"><span class="string">          &gt;&gt;&gt; getting[1]</span></span><br><span class="line"><span class="string">          '</span>e<span class="string">'</span></span><br><span class="line"><span class="string">          &gt;&gt;&gt; getting[-1]</span></span><br><span class="line"><span class="string">          '</span>o<span class="string">'</span></span><br><span class="line"><span class="string">          &gt;&gt;&gt; '</span>hello<span class="string">'[1]</span></span><br><span class="line"><span class="string">          '</span>e<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        分片</span></span><br><span class="line"><span class="string">          冒号分割，２个索引作为边界，每１个索引在分片内，第２个在分片外。</span></span><br><span class="line"><span class="string">          使用捷径</span></span><br><span class="line"><span class="string">          更大的步长，使用负数做为步长时，必须让开始点大于结束点。</span></span><br><span class="line"><span class="string">        加</span></span><br><span class="line"><span class="string">          相同类型的序列才可以连接。</span></span><br><span class="line"><span class="string">        乘</span></span><br><span class="line"><span class="string">          None内置代表空 *</span></span><br><span class="line"><span class="string">        成员资格</span></span><br><span class="line"><span class="string">          in  返回True False</span></span><br><span class="line"><span class="string">        长度，最大元素，最小元素。</span></span><br><span class="line"><span class="string">        迭代(interation)：   依次对序列中的元素重复执行操作。</span></span><br><span class="line"><span class="string">    列表　[a,b,n...]</span></span><br><span class="line"><span class="string">      list()</span></span><br><span class="line"><span class="string">      元素赋值，元素删除，分片赋值，列表方法。</span></span><br><span class="line"><span class="string">    列表方法：</span></span><br><span class="line"><span class="string">      方法是函数,但只对特定对象进行操作，如序列，字典等。</span></span><br><span class="line"><span class="string">      对象.方法（参数）</span></span><br><span class="line"><span class="string">        append  入𣏾</span></span><br><span class="line"><span class="string">        count</span></span><br><span class="line"><span class="string">        extend</span></span><br><span class="line"><span class="string">        index</span></span><br><span class="line"><span class="string">        insert</span></span><br><span class="line"><span class="string">        pop 惟一一个修改列表并返回值的方法。出𣏾</span></span><br><span class="line"><span class="string">        remove 移出但不返回值，跟pop不同。</span></span><br><span class="line"><span class="string">        reverse　反序</span></span><br><span class="line"><span class="string">        sort</span></span><br><span class="line"><span class="string">        高级排序  cmp,key,reverse</span></span><br><span class="line"><span class="string">    元组：不可变序列  (a,n...)</span></span><br><span class="line"><span class="string">      tuple</span></span><br><span class="line"><span class="string">  第３章　使用字符串</span></span><br><span class="line"><span class="string">    基本字符串操作</span></span><br><span class="line"><span class="string">      适用所有标准序列操作，如上一章</span></span><br><span class="line"><span class="string">      字符串如元组一样不可修改</span></span><br><span class="line"><span class="string">      字符串操作符%</span></span><br><span class="line"><span class="string">        format % values values一般是元组，字典可格式多个值。如果使用列表，只能格式为一个值。</span></span><br><span class="line"><span class="string">        %.3f %s</span></span><br><span class="line"><span class="string">        模板字符串</span></span><br><span class="line"><span class="string">          from string import Template</span></span><br><span class="line"><span class="string">          变量.substitute()</span></span><br><span class="line"><span class="string">        字段宽度和精度</span></span><br><span class="line"><span class="string">          转换说明符可以包括字段宽度与精度。</span></span><br><span class="line"><span class="string">          可以使用＊号作为字体宽度或精度，这个值可以从后面的元组中读取。</span></span><br><span class="line"><span class="string">        标表</span></span><br><span class="line"><span class="string">          0,-,+,'</span> <span class="string">'，放置在宽度或精度字段。 对齐，０填充。</span></span><br><span class="line"><span class="string">      字符串方法：</span></span><br><span class="line"><span class="string">       　find  返回最左端的索引  字符串.find('</span>内容<span class="string">',起点，终点)</span></span><br><span class="line"><span class="string">       　split join相反的操作。分割，合并字符串</span></span><br><span class="line"><span class="string">       　  join添加的队列必须是字符串。</span></span><br><span class="line"><span class="string">       　lower</span></span><br><span class="line"><span class="string">       　replace</span></span><br><span class="line"><span class="string">       　strip 去除两侧空格。</span></span><br><span class="line"><span class="string">       　translate 只替换单个字符。</span></span><br><span class="line"><span class="string">  第４章 字典：当索引不好用时</span></span><br><span class="line"><span class="string">    ４.１字典的使用</span></span><br><span class="line"><span class="string">      &#123;k键:v值&#125;</span></span><br><span class="line"><span class="string">    4.2　创建与使用字典</span></span><br><span class="line"><span class="string">    　　4.2.1 dict函数</span></span><br><span class="line"><span class="string">    　　4.2.2 基本字典操作</span></span><br><span class="line"><span class="string">    　　  键类型：更多类型</span></span><br><span class="line"><span class="string">    　　  自动添加：列表不能不使用append的方法外自动建立。</span></span><br><span class="line"><span class="string">    　　  成员资格：字典比列表检查成员资格更高效。</span></span><br><span class="line"><span class="string">  第５章 条件、循环、其它语句</span></span><br><span class="line"><span class="string">    5.1 print,import</span></span><br><span class="line"><span class="string">      print 逗号输出多个表达式</span></span><br><span class="line"><span class="string">      +链接字符没有空格输出，逗号有空格输出。</span></span><br><span class="line"><span class="string">      from module import function as name </span></span><br><span class="line"><span class="string">    5.2 赋值魔法</span></span><br><span class="line"><span class="string">      序列解包</span></span><br><span class="line"><span class="string">      链式赋值</span></span><br><span class="line"><span class="string">      增量赋值  +=,*=,/=,%=</span></span><br><span class="line"><span class="string">    5.3 语句块：缩排的乐趣</span></span><br><span class="line"><span class="string">      布尔变量：假：false  None  0 "" () [] &#123;&#125;</span></span><br><span class="line"><span class="string">      布尔函数：bool</span></span><br><span class="line"><span class="string">    5.4 条件</span></span><br><span class="line"><span class="string">      if :</span></span><br><span class="line"><span class="string">      elif:</span></span><br><span class="line"><span class="string">      else:</span></span><br><span class="line"><span class="string">      使用==判断两个对象是否相等，使用is判断两者是否等同。</span></span><br><span class="line"><span class="string">      多重if可以用布尔判断代替。</span></span><br><span class="line"><span class="string">    命名空间：作用域：in scope ,调用使用scope()函数</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">  第６章　抽象abstraction</span></span><br><span class="line"><span class="string">    抽象结构：组织可读性程序，细节在其它地方定义。</span></span><br><span class="line"><span class="string">    函数：</span></span><br><span class="line"><span class="string">      调用（）中的参数或值，执行一系列操作，返回一个值。</span></span><br><span class="line"><span class="string">      创建函数是组织程序的关键。</span></span><br><span class="line"><span class="string">        def 函数名（参数）</span></span><br><span class="line"><span class="string">          操作</span></span><br><span class="line"><span class="string">          return result</span></span><br><span class="line"><span class="string">      记录函数：文档字符串,在函数开头写，使用函数.__doc__访问。</span></span><br><span class="line"><span class="string">    形参,实参</span></span><br><span class="line"><span class="string">      def 形参</span></span><br><span class="line"><span class="string">      调用 实参 </span></span><br><span class="line"><span class="string">    函数内的局部作用域</span></span><br><span class="line"><span class="string">      使用关键字参数忘记顺序</span></span><br><span class="line"><span class="string">      使用多个参数  *是生成元组，**生成字典</span></span><br><span class="line"><span class="string">    python 命令空间，作用域，变量是不可见的字典　vars()</span></span><br><span class="line"><span class="string">      local variable</span></span><br><span class="line"><span class="string">      globals 变量名可以在函数作用域内定义全局变量。</span></span><br><span class="line"><span class="string">    递归：引用自身，调用自身的意思。＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝</span></span><br><span class="line"><span class="string">    二元搜索</span></span><br><span class="line"><span class="string">  第７章 更加抽象，创建自己的数据类型自定义类。</span></span><br><span class="line"><span class="string">    面向对象的编程。</span></span><br><span class="line"><span class="string">    核心概念。</span></span><br><span class="line"><span class="string">    object.method()对象.方法()</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">baseexcept(SystemExit , KeyboardInterrupt , and GeneratorExit (these three derive directly from BaseException instead).</span><br><span class="line">exception</span><br><span class="line">arithmeticerror(the superclass of Over flowError , ZeroDivisionError , and FloatingPointError ,</span><br><span class="line">and a subclass of Exception .)</span><br><span class="line">buffererror</span><br><span class="line"></span><br><span class="line">类:</span><br><span class="line">动:方法</span><br><span class="line">静:数据</span><br><span class="line">带访问控制的数据属性(property)(getter,setter,deleter,text)(自动调用一些自定义动作)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第三节:</span><br><span class="line">没有self的类变量会被所有类实例共享,作用域是类;self变量作用域是类实例,只有类实例可以使用.</span><br><span class="line"></span><br><span class="line">新式父类调用</span><br><span class="line">super().__init__(name, email)</span><br><span class="line">旧式父类调用</span><br><span class="line">super(subclass_name).__init__(name, email)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">多态:调用不同的子类实现不同的行为.</span><br><span class="line">different behaviors happen depending on which subclass is being used, without having to explicitly know what the subclass actually is.</span><br><span class="line">python的动态特性让其它编程中的多态变得不太重要.</span><br><span class="line">class AudioFile:</span><br><span class="line">def __init__(self, filename):</span><br><span class="line">if not filename.endswith(self.ext):# 父类并没有定义ext变量,但可以访问子类中的变量</span><br><span class="line">raise Exception(&quot;Invalid file format&quot;)</span><br><span class="line">self.filename = filename</span><br><span class="line"></span><br><span class="line">class MP3File(AudioFile):</span><br><span class="line">ext = &quot;mp3&quot;</span><br><span class="line">def play(self):</span><br><span class="line">print(&quot;playing &#123;&#125; as mp3&quot;.format(self.filename))</span><br><span class="line"></span><br><span class="line">类静态方法(staticmethod)与类关联,被所有类实例共享</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">异常:</span><br><span class="line">BaseException</span><br><span class="line">SystemExist</span><br><span class="line">KeyboardInterrupt</span><br><span class="line">Exception</span><br><span class="line">Most other Exceptions</span><br><span class="line">except:或except BaseException:将捕捉所有异常</span><br><span class="line">except Exception:只捕捉Exception类</span><br><span class="line"></span><br><span class="line">对于一些使用if else的语句,也可以使用异常来做程序流控,会更简洁.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">property声明</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python-笔记&quot;&gt;&lt;a href=&quot;#python-笔记&quot; class=&quot;headerlink&quot; title=&quot;python 笔记&quot;&gt;&lt;/a&gt;python 笔记&lt;/h1&gt;&lt;h2 id=&quot;设计模型&quot;&gt;&lt;a href=&quot;#设计模型&quot; class=&quot;headerlink&quot; title=&quot;设计模型&quot;&gt;&lt;/a&gt;设计模型&lt;/h2&gt;&lt;h3 id=&quot;1-装饰器-decorator-模式&quot;&gt;&lt;a href=&quot;#1-装饰器-decorator-模式&quot; class=&quot;headerlink&quot; title=&quot;1. 装饰器(decorator)模式&quot;&gt;&lt;/a&gt;1. 装饰器(decorator)模式&lt;/h3&gt;&lt;p&gt;(俄罗斯套娃封装)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@装饰器二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;	@装饰器一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		核心对象&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;创建一个装饰函数,内部定义一个wrapper新函数执行一些操作,将被装饰函数作为参数传入装饰函数,返回新函数&lt;/li&gt;
&lt;li&gt;行为类似多重继承.&lt;/li&gt;
&lt;li&gt;当在装饰器与继承之间选择时,只需要根据一些条件对对象进行动态修改时使用装饰器.&lt;ol&gt;
&lt;li&gt;日志装饰器,传递一些参数动态记录日志&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;作用:&lt;ol&gt;
&lt;li&gt;增强核心对象的能力&lt;/li&gt;
&lt;li&gt;让核心对象支持多种可选行为&lt;/li&gt;
&lt;li&gt;编写判断执行不同的装饰器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;2-观察者模式&quot;&gt;&lt;a href=&quot;#2-观察者模式&quot; class=&quot;headerlink&quot; title=&quot;2.  观察者模式&quot;&gt;&lt;/a&gt;2.  观察者模式&lt;/h3&gt;&lt;p&gt;状态监测,事件处理&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;核心对象-&amp;gt;update()-&amp;gt;观察者们-&amp;gt;各自处理自已的任务&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/1564143774413.png&quot; alt=&quot;1564143774413&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-策略模式&quot;&gt;&lt;a href=&quot;#3-策略模式&quot; class=&quot;headerlink&quot; title=&quot;3. 策略模式&quot;&gt;&lt;/a&gt;3. 策略模式&lt;/h3&gt;&lt;p&gt;每个策略类都包含同名方法,接收相同参数.&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;核心对象-&amp;gt;策略1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;核心对象-&amp;gt;策略2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;4-状态模式&quot;&gt;&lt;a href=&quot;#4-状态模式&quot; class=&quot;headerlink&quot; title=&quot;4.状态模式&quot;&gt;&lt;/a&gt;4.状态模式&lt;/h3&gt;&lt;p&gt;状态类的目的是实现状态转换,需要一个上下文类提供转换接口和指针指向状态类,状态类对前面的调用者是隐藏的.&lt;/p&gt;
&lt;figure class=&quot;highlight graph&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Context -&amp;gt; state -&amp;gt; [state1, state2, state3] -&amp;gt; Parser&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				OpenTag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FirstTag	-&amp;gt;	ChildNode	&amp;lt;=&amp;gt;	Text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				CloseTag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="https://talenhao.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://talenhao.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>使用nvm管理node版本</title>
    <link href="https://talenhao.github.io/2019/07/25/%E4%BD%BF%E7%94%A8nvm%E7%AE%A1%E7%90%86node%E7%89%88%E6%9C%AC/"/>
    <id>https://talenhao.github.io/2019/07/25/使用nvm管理node版本/</id>
    <published>2019-07-25T07:03:58.000Z</published>
    <updated>2019-07-25T07:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nvm管理node版本"><a href="#nvm管理node版本" class="headerlink" title="nvm管理node版本"></a>nvm管理node版本</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>curl -o- <a href="https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh|bash" target="_blank" rel="noopener">https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh|bash</a></p><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ vim  ~/.bashrc</span><br><span class="line"><span class="meta">#</span><span class="bash"> nvm</span></span><br><span class="line">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">source</span> /usr/share/nvm/init-nvm.sh</span></span><br><span class="line">export NVM_DIR="$HOME/.nvm"</span><br><span class="line">[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; \. "$NVM_DIR/nvm.sh"  # This loads nvm</span><br><span class="line">[ -s "$NVM_DIR/bash_completion" ] &amp;&amp; \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure><h3 id="查看lts版本"><a href="#查看lts版本" class="headerlink" title="查看lts版本"></a>查看lts版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm ls-remote --lts</span><br><span class="line">v4.2.0   (LTS: Argon)</span><br><span class="line">...</span><br><span class="line">v10.15.2   (LTS: Dubnium)</span><br><span class="line"><span class="meta">-&gt;</span><span class="bash">  v10.15.3   (LTS: Dubnium)</span></span><br><span class="line">v10.16.0   (Latest LTS: Dubnium)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm install v10.16.0</span><br><span class="line">Downloading and installing node v10.16.0...</span><br><span class="line">Downloading https://npm.taobao.org/mirrors/node/v10.16.0/node-v10.16.0-linux-x64.tar.xz...</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################################################################################# 100.0%</span></span></span><br><span class="line">Computing checksum with sha256sum</span><br><span class="line">Checksums matched!</span><br><span class="line">Now using node v10.16.0 (npm v6.9.0)</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ node -v</span><br><span class="line">v10.16.0</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm ls</span><br><span class="line">v10.15.3</span><br><span class="line"><span class="meta">-&gt;</span><span class="bash">     v10.16.0</span></span><br><span class="line">v12.2.0</span><br><span class="line">system</span><br><span class="line">default -&gt; lts/* (-&gt; v10.16.0)</span><br><span class="line">node -&gt; stable (-&gt; v12.2.0) (default)</span><br><span class="line">stable -&gt; 12.2 (-&gt; v12.2.0) (default)</span><br><span class="line">iojs -&gt; N/A (default)</span><br><span class="line">lts/* -&gt; lts/dubnium (-&gt; v10.16.0)</span><br><span class="line">lts/argon -&gt; v4.9.1 (-&gt; N/A)</span><br><span class="line">lts/boron -&gt; v6.17.1 (-&gt; N/A)</span><br><span class="line">lts/carbon -&gt; v8.16.0 (-&gt; N/A)</span><br><span class="line">lts/dubnium -&gt; v10.16.0</span><br></pre></td></tr></table></figure><h3 id="切换版本"><a href="#切换版本" class="headerlink" title="切换版本"></a>切换版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm use v10.16.0</span><br><span class="line">Now using node v10.16.0 (npm v6.9.0)</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm current</span><br><span class="line">v10.16.0</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ which npm</span><br><span class="line">/home/talen/.nvm/versions/node/v10.16.0/bin/npm</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ which node</span><br><span class="line">/home/talen/.nvm/versions/node/v10.16.0/bin/node</span><br><span class="line"></span><br><span class="line">[Thu Jul 25 talen@tp-arch-tianfei github]$ nvm use lts/*</span><br><span class="line">Now using node v10.16.0 (npm v6.9.0)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;nvm管理node版本&quot;&gt;&lt;a href=&quot;#nvm管理node版本&quot; class=&quot;headerlink&quot; title=&quot;nvm管理node版本&quot;&gt;&lt;/a&gt;nvm管理node版本&lt;/h2&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;curl -o- &lt;a href=&quot;https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh|bash&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh|bash&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置环境&quot;&gt;&lt;a href=&quot;#配置环境&quot; class=&quot;headerlink&quot; title=&quot;配置环境&quot;&gt;&lt;/a&gt;配置环境&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Wed Jul 24 talen@tp-arch-tianfei ~]$ vim  ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; nvm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; /usr/share/nvm/init-nvm.sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;查看lts版本&quot;&gt;&lt;a href=&quot;#查看lts版本&quot; class=&quot;headerlink&quot; title=&quot;查看lts版本&quot;&gt;&lt;/a&gt;查看lts版本&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm ls-remote --lts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v4.2.0   (LTS: Argon)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v10.15.2   (LTS: Dubnium)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;  v10.15.3   (LTS: Dubnium)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v10.16.0   (Latest LTS: Dubnium)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://talenhao.github.io/categories/front-end/"/>
    
    
      <category term="nodejs" scheme="https://talenhao.github.io/tags/nodejs/"/>
    
      <category term="npm" scheme="https://talenhao.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Django2.2 url path error</title>
    <link href="https://talenhao.github.io/2019/04/30/Django2-2-url-path-error/"/>
    <id>https://talenhao.github.io/2019/04/30/Django2-2-url-path-error/</id>
    <published>2019-04-30T08:45:10.000Z</published>
    <updated>2019-07-25T08:07:40.527Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WARNINGS:</span><br><span class="line">?: (2_0.W001) Your URL pattern &apos;nagios/alert/(?P&lt;pk&gt;\d+)/delete/&apos; [name=&apos;nagios-alert-delete&apos;] has a route that contains &apos;(?P&lt;&apos;, begins with a &apos;^&apos;, or ends with a &apos;$&apos;. This was likely an oversight when migrating to django.urls.path().</span><br><span class="line">?: (2_0.W001) Your URL pattern &apos;nagios/alert/(?P&lt;pk&gt;\d+)/update/&apos; [name=&apos;nagios-alert-edit&apos;] has a route that contains &apos;(?P&lt;&apos;, begins with a &apos;^&apos;, or ends with a &apos;$&apos;. This was likely an oversight when migrating to django.urls.path().</span><br></pre></td></tr></table></figure><p>搜索了一下,URL中有正则表达式的需要使用re_path代替path,修改后修复</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">re_path(&apos;nagios/alert/(?P&lt;pk&gt;\d+)/update/&apos;, views.AlertEditView.as_view(), name=&apos;nagios-alert-edit&apos;),</span><br><span class="line">re_path(&apos;nagios/alert/(?P&lt;pk&gt;\d+)/delete/&apos;, views.AlertDeleteView.as_view(), name=&apos;nagios-alert-delete&apos;),</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(study-xiaofanzhuo) [tianfei@tianfei-pc xiaofanzhuo]$ python manage.py runserver</span><br><span class="line">Watching for file changes with StatReloader</span><br><span class="line">Performing system checks...</span><br><span class="line"></span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line">April 30, 2019 - 16:40:40</span><br><span class="line">Django version 2.2, using settings &apos;xiaofanzhuo.settings&apos;</span><br><span class="line">Starting development server at http://127.0.0.1:8000/</span><br><span class="line">Quit the server with CONTROL-C.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WARNINGS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?: (2_0.W001) Your URL pattern &amp;apos;nagios/alert/(?P&amp;lt;pk&amp;gt;\d+)/delete/&amp;apos; [name=&amp;apos;nagios-alert-delete&amp;apos;] has a route that contains &amp;apos;(?P&amp;lt;&amp;apos;, begins with a &amp;apos;^&amp;apos;, or ends with a &amp;apos;$&amp;apos;. This was likely an oversight when migrating to django.urls.path().&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?: (2_0.W001) Your URL pattern &amp;apos;nagios/alert/(?P&amp;lt;pk&amp;gt;\d+)/update/&amp;apos; [name=&amp;apos;nagios-alert-edit&amp;apos;] has a route that contains &amp;apos;(?P&amp;lt;&amp;apos;, begins with a &amp;apos;^&amp;apos;, or ends with a &amp;apos;$&amp;apos;. This was likely an oversight when migrating to django.urls.path().&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;搜索了一下,URL中有正则表达式的需要使用re_path代替path,修改后修复&lt;/p&gt;
    
    </summary>
    
      <category term="django" scheme="https://talenhao.github.io/categories/django/"/>
    
    
      <category term="django" scheme="https://talenhao.github.io/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>运维常用术语</title>
    <link href="https://talenhao.github.io/2019/04/12/%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD/"/>
    <id>https://talenhao.github.io/2019/04/12/运维常用术语/</id>
    <published>2019-04-12T02:18:41.000Z</published>
    <updated>2019-08-12T02:58:56.163Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TCO（总体拥有成本）</span><br><span class="line">黑石物理服务器2.0:  基于腾讯云最新虚拟化技术研发的一款拥有极致性能裸金属云服务器</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">云盾Web应用防火墙（Web Application Firewall，简称 WAF）基于云安全大数据能力，用于防御SQL注入、XSS跨站脚本、常见Web服务器插件漏洞、木马上传、非授权核心资源访问等OWASP常见攻击，并过滤海量恶意CC攻击，避免您的网站资产数据泄露，保障网站的安全与可用性。</span><br><span class="line"></span><br><span class="line">如何使用WAF</span><br><span class="line">您购买Web应用防火墙后，把域名解析到Web应用防火墙提供的CNAME地址上，并配置源站服务器IP，即可启用Web应用防火墙。启用之后，您网站所有的公网流量都会先经过Web应用防火墙，恶意攻击流量在Web应用防火墙上被检测过滤，而正常流量返回给源站IP，从而确保源站IP安全、稳定、可用。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
      <category term="uncategorized" scheme="https://talenhao.github.io/categories/uncategorized/"/>
    
    
      <category term="untags" scheme="https://talenhao.github.io/tags/untags/"/>
    
  </entry>
  
  <entry>
    <title>use /sbin/netconfig 命令更新/etc/resolv.conf文件</title>
    <link href="https://talenhao.github.io/2019/04/01/use-sbin-netconfig-%E5%91%BD%E4%BB%A4%E6%9B%B4%E6%96%B0-etc-resolv-conf%E6%96%87%E4%BB%B6/"/>
    <id>https://talenhao.github.io/2019/04/01/use-sbin-netconfig-命令更新-etc-resolv-conf文件/</id>
    <published>2019-04-01T01:57:05.000Z</published>
    <updated>2019-07-25T08:08:08.937Z</updated>
    
    <content type="html"><![CDATA[<p>netconfig是用于设置网络环境的命令</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:/etc/sysconfig&gt; sudo netconfig --help</span><br><span class="line">Usage:</span><br><span class="line"> netconfig &lt;global options&gt;</span><br><span class="line"> netconfig &lt;action&gt; &lt;action options&gt;</span><br><span class="line"></span><br><span class="line"> actions:</span><br><span class="line">  modify    Requires an interface and service specific settings via STDIN</span><br><span class="line">            or as file using the --input-file or --lease-file option.</span><br><span class="line">            Already existing settings for this interface and service will</span><br><span class="line">            be replaced with the new one, otherwise netconfig creates a</span><br><span class="line">            new state file. Finaly, netconfig updates the managed files.</span><br><span class="line">  remove    Removes the interface and service specific settings and</span><br><span class="line">            updates the managed files.</span><br><span class="line">  update    Updates the managed files with the current set of settings.</span><br><span class="line">  batch     Executes a batch file with modify,remove,update action lines.</span><br><span class="line">            Unlike in regular actions, modify and remove do not call update.</span><br><span class="line"> modify options:</span><br><span class="line">  &lt; -s|--service &lt;service name&gt; &gt;       service providing settings</span><br><span class="line">  [ -i|--interface &lt;interface name&gt; ]   interface providing settings</span><br><span class="line">  [ -F|--input-format &lt;input format&gt; ]  currently &apos;dhcpcd&apos; supported only</span><br><span class="line">  [ -I|--input-file &lt;file name&gt; ]       file name to read, stdin by default</span><br><span class="line">  [ -l|--lease-file &lt;file name&gt; ]       alias for --input-file</span><br><span class="line">  [ -m|--module-only &lt;name | prefix&gt; ]  module or module group updates only</span><br><span class="line">  [ -f|--force-replace ]                generate files, even user modified</span><br><span class="line">  [ -v|--verbose ]                      enable debug and be verbose</span><br><span class="line"></span><br><span class="line"> remove options:</span><br><span class="line">  &lt; -s|--service &lt;service name&gt; &gt;       service providing settings</span><br><span class="line">  [ -i|--interface &lt;interface name&gt; ]   interface providing settings</span><br><span class="line">  [ -m|--module-only &lt;name | prefix&gt; ]  module or module group updates only</span><br><span class="line">  [ -f|--force-replace ]                generate files, even user modified</span><br><span class="line">  [ -v|--verbose ]                      enable debug and be verbose</span><br><span class="line"></span><br><span class="line"> update options:</span><br><span class="line">  [ -m|--module-only &lt;name | prefix&gt; ]  module or module group updates only</span><br><span class="line">  [ -f|--force-replace ]                generate files, even user modified</span><br><span class="line">  [ -v|--verbose ]                      enable debug and be verbose</span><br><span class="line"></span><br><span class="line"> batch options:</span><br><span class="line">  [ -B|--batch-file &lt;file name&gt; ]       file name to read, stdin by default</span><br><span class="line">  [ -v|--verbose ]                      enable debug and be verbose</span><br><span class="line"></span><br><span class="line"> global options:</span><br><span class="line">  &lt;-h|--help&gt;                           show this help text</span><br><span class="line"></span><br><span class="line">Active modules: dns-resolver dns-bind dns-dnsmasq nis ntp-runtime</span><br><span class="line">Module groups : dns nis ntp</span><br></pre></td></tr></table></figure><p>注意help中的update,如果网络配置不正常,可以使用netconfig update -f强制修复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:/etc/sysconfig&gt; sudo netconfig update</span><br><span class="line">&lt;13&gt;Apr  1 09:53:46 dns-resolver: ATTENTION: You have modified /etc/resolv.conf. Leaving it untouched...</span><br><span class="line">&lt;13&gt;Apr  1 09:53:46 dns-resolver: You can find my version in /etc/resolv.conf.netconfig</span><br><span class="line">ATTENTION: You have modified /etc/resolv.conf.  Leaving it untouched...</span><br><span class="line">You can find my version in /etc/resolv.conf.netconfig ...</span><br><span class="line">haotianfei@tianfei-opensuse:/etc/sysconfig&gt; sudo netconfig update -f</span><br><span class="line">&lt;13&gt;Apr  1 09:54:03 dns-resolver: force replace set: backup created as /etc/resolv.conf.20190401-095403</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;netconfig是用于设置网络环境的命令&lt;/p&gt;
    
    </summary>
    
      <category term="opensuse" scheme="https://talenhao.github.io/categories/opensuse/"/>
    
    
      <category term="opensuse" scheme="https://talenhao.github.io/tags/opensuse/"/>
    
  </entry>
  
  <entry>
    <title>use imagemagick convert命令批量resize图片</title>
    <link href="https://talenhao.github.io/2019/03/30/use%20imagemagick%20convert%20%E5%91%BD%E4%BB%A4%E6%89%B9%E9%87%8Fresize%E5%9B%BE%E7%89%87/"/>
    <id>https://talenhao.github.io/2019/03/30/use imagemagick convert 命令批量resize图片/</id>
    <published>2019-03-30T09:30:59.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for img in $(ls);do convert -resize 40%x40% -quality 80 $img convert_$img;done</span><br></pre></td></tr></table></figure><p>图片质量还是可以的,对于3M左右的图片,压缩到40%,质量80差不多300多K的样子,只需要1/10的存储空间</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="uncategorized" scheme="https://talenhao.github.io/categories/uncategorized/"/>
    
    
      <category term="untags" scheme="https://talenhao.github.io/tags/untags/"/>
    
  </entry>
  
  <entry>
    <title>zabbix always in progress problem</title>
    <link href="https://talenhao.github.io/2019/02/28/zabbix-always-in-progress-problem/"/>
    <id>https://talenhao.github.io/2019/02/28/zabbix-always-in-progress-problem/</id>
    <published>2019-02-28T03:32:18.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix告警触发时一直显示in progress状态,查询了许多资料都没有解决.后来发现media脚本是pyc,更换成py后解决.这个有点太无语了.</p><p><img src="/img/20190228/progress.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;zabbix告警触发时一直显示in progress状态,查询了许多资料都没有解决.后来发现media脚本是pyc,更换成py后解决.这个有点太无语了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/20190228/progress.png&quot; alt&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="zabbix" scheme="https://talenhao.github.io/categories/zabbix/"/>
    
    
      <category term="zabbix" scheme="https://talenhao.github.io/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>15 zabbix 自动发现discover</title>
    <link href="https://talenhao.github.io/2019/02/19/15-zabbix-%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0discover/"/>
    <id>https://talenhao.github.io/2019/02/19/15-zabbix-自动发现discover/</id>
    <published>2019-02-19T06:39:40.000Z</published>
    <updated>2019-07-25T08:08:24.476Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络发现"><a href="#网络发现" class="headerlink" title="网络发现"></a>网络发现</h2><p>zabbix提供自动网络发现功能是非常高效灵活的.<br>使用网络发现</p><ul><li>提高部署效率</li><li>简化管理</li><li>自动管理</li></ul><p>自动发现基于以下信息:</p><ul><li>IP段</li><li>可用的外部服务访问(FTP,SSH,WEB,POP3,IMAP,TCP,etc)</li><li>非加密的zabbix agent信息</li><li>snmp agent信息</li></ul><p>目前还不具有的功能:</p><ul><li>网络拓扑</li></ul><p>网络发现主要有两个部分:discovery-&gt; action</p><a id="more"></a><h3 id="discover"><a href="#discover" class="headerlink" title="discover"></a>discover</h3><p>周期性的扫描在network discovery rules 中定义的IP段.频率在每个规则下分别设置.<br>每个rule只会被一个process处理.一个网段不会被分配到多个process.<br>discovery checks 分别独立处理,一个check失败并不影响其它check的执行.<br>每个check生成一个discovery event.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix   24712  0.0  0.1 300100  5908 ?        S    Feb05   1:02  \_ /usr/sbin/zabbix_server: discoverer #1 [processed 0 rules in 0.001094 sec, idle 60 sec]</span><br></pre></td></tr></table></figure><h3 id="action"><a href="#action" class="headerlink" title="action"></a>action</h3><p>discovery event是actions的基础.<br>action可以执行以下操作:</p><ul><li>发送信息</li><li>Adding/removing hosts</li><li>Enabling/disabling hosts</li><li>Adding/removing hosts to/from a group</li><li>Linking hosts to/unlinking from a template</li><li>Executing remote scripts</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;网络发现&quot;&gt;&lt;a href=&quot;#网络发现&quot; class=&quot;headerlink&quot; title=&quot;网络发现&quot;&gt;&lt;/a&gt;网络发现&lt;/h2&gt;&lt;p&gt;zabbix提供自动网络发现功能是非常高效灵活的.&lt;br&gt;使用网络发现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提高部署效率&lt;/li&gt;
&lt;li&gt;简化管理&lt;/li&gt;
&lt;li&gt;自动管理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动发现基于以下信息:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP段&lt;/li&gt;
&lt;li&gt;可用的外部服务访问(FTP,SSH,WEB,POP3,IMAP,TCP,etc)&lt;/li&gt;
&lt;li&gt;非加密的zabbix agent信息&lt;/li&gt;
&lt;li&gt;snmp agent信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前还不具有的功能:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络拓扑&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络发现主要有两个部分:discovery-&amp;gt; action&lt;/p&gt;
    
    </summary>
    
      <category term="zabbix" scheme="https://talenhao.github.io/categories/zabbix/"/>
    
    
      <category term="zabbix" scheme="https://talenhao.github.io/tags/zabbix/"/>
    
  </entry>
  
</feed>
