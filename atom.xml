<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>天飞 技术随笔</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://talenhao.github.io/"/>
  <updated>2019-09-19T09:11:18.000Z</updated>
  <id>https://talenhao.github.io/</id>
  
  <author>
    <name>天飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>英语历史</title>
    <link href="https://talenhao.github.io/2019/09/19/%E8%8B%B1%E8%AF%AD%E5%8E%86%E5%8F%B2/"/>
    <id>https://talenhao.github.io/2019/09/19/英语历史/</id>
    <published>2019-09-19T09:11:18.000Z</published>
    <updated>2019-09-19T09:11:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="英语历史"><a href="#英语历史" class="headerlink" title="英语历史"></a>英语历史</h1><pre class="mermaid">graph TB腓尼基字母-->希腊字母希腊字母-->拉丁字母拉丁字母-->英文字母</pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;英语历史&quot;&gt;&lt;a href=&quot;#英语历史&quot; class=&quot;headerlink&quot; title=&quot;英语历史&quot;&gt;&lt;/a&gt;英语历史&lt;/h1&gt;&lt;pre class=&quot;mermaid&quot;&gt;graph TB
腓尼基字母--&gt;希腊字母
希腊字母--&gt;拉丁字母
拉丁字母--&gt;英文字
      
    
    </summary>
    
      <category term="english" scheme="https://talenhao.github.io/categories/english/"/>
    
    
      <category term="english" scheme="https://talenhao.github.io/tags/english/"/>
    
  </entry>
  
  <entry>
    <title>浏览器攻击</title>
    <link href="https://talenhao.github.io/2019/09/11/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%BB%E5%87%BB/"/>
    <id>https://talenhao.github.io/2019/09/11/浏览器攻击/</id>
    <published>2019-09-11T01:51:49.000Z</published>
    <updated>2019-09-11T01:51:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浏览器跨域"><a href="#浏览器跨域" class="headerlink" title="浏览器跨域"></a>浏览器跨域</h2><p>JavaScript出于<em>安全</em>方面的考虑做的<em>同源</em>策略的<em>限制</em>，不允许<em>跨域</em>访问其他资源。跨域请求成功后，浏览器会拦截服务器端返回的结果</p><p>同源:<code>域名、协议、端口均相同。举例来说，`http://www.example.com/dir/page.html`这个网址，协议是`http://`，域名是`www.example.com`，端口是`80`（默认端口可以省略）</code></p><a id="more"></a><h3 id="CSRF攻击"><a href="#CSRF攻击" class="headerlink" title="CSRF攻击"></a>CSRF攻击</h3><p>攻击者指挥用户攻击目标网站</p><pre class="mermaid">graph LRuser-->|1,username&password|target(目标网站)target-->|2,OK&set cookie|useruser-.->|3,目标cookie存在,访问攻击者站点|tacker[攻击者站点]tacker-.->|4,让用户请求目标网站执行特定操作|useruser-.->|5,利用自己的权限做攻击操作|target</pre><pre class="mermaid">sequenceDiagramparticipant attacker as 攻击者站点participant user as 用户participant target as 目标站点user->>+target:1,request,username&passwordtarget-->>user:2,response,set-cookieuser->>+attacker:3,request,请求攻击者站点attacker-->>-user:4,response,指挥用户访问目标站点user->>-target:5,request,利用自己的权限发起攻击操作</pre><h3 id="XSS攻击"><a href="#XSS攻击" class="headerlink" title="XSS攻击"></a>XSS攻击</h3><p>伪装用户自己发起攻击</p><pre class="mermaid">sequenceDiagramparticipant attacker as 攻击者站点participant user as 用户participant target as 目标站点attacker-->>user:1,request,发送含有攻击代码的目标站点链接user->>+target:2,request,携带攻击代码,请求目标站点target-->>user:3,response,目标站点执行后返回用户数据user->>attacker:4,request,在用户不知情时将cookie,session发送给攻击者attacker->>-target:5,request,伪装用户访问目标站点</pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浏览器跨域&quot;&gt;&lt;a href=&quot;#浏览器跨域&quot; class=&quot;headerlink&quot; title=&quot;浏览器跨域&quot;&gt;&lt;/a&gt;浏览器跨域&lt;/h2&gt;&lt;p&gt;JavaScript出于&lt;em&gt;安全&lt;/em&gt;方面的考虑做的&lt;em&gt;同源&lt;/em&gt;策略的&lt;em&gt;限制&lt;/em&gt;，不允许&lt;em&gt;跨域&lt;/em&gt;访问其他资源。跨域请求成功后，浏览器会拦截服务器端返回的结果&lt;/p&gt;
&lt;p&gt;同源:&lt;code&gt;域名、协议、端口均相同。举例来说，`http://www.example.com/dir/page.html`这个网址，协议是`http://`，域名是`www.example.com`，端口是`80`（默认端口可以省略）&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="safe" scheme="https://talenhao.github.io/categories/safe/"/>
    
    
      <category term="safe" scheme="https://talenhao.github.io/tags/safe/"/>
    
  </entry>
  
  <entry>
    <title>监控系统预测和异常判断</title>
    <link href="https://talenhao.github.io/2019/09/06/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E9%A2%84%E6%B5%8B%E5%92%8C%E5%BC%82%E5%B8%B8%E5%88%A4%E6%96%AD/"/>
    <id>https://talenhao.github.io/2019/09/06/监控系统预测和异常判断/</id>
    <published>2019-09-06T07:08:23.000Z</published>
    <updated>2019-09-06T07:08:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="监控系统预测和异常判断"><a href="#监控系统预测和异常判断" class="headerlink" title="监控系统预测和异常判断"></a>监控系统预测和异常判断</h1><p>基于算法的 IT 运维平台(Algorithmic IT operations platforms)</p><ol><li>机器学习</li><li>数学统计<ol><li>方差分析可以用来判断几组观察到的数据或者处理的结果是否存在显著差异。</li><li>在方差分析中，我们把要考察其均值是否存在显著差异的指标变量称为响应变量，对响应变量取值有影响的其他变量称为因素。例如，信用卡消费水平和治疗效果为响应变量，地区和药品则为因素。在方差分析中，因素的取值应为离散型的，其不同的取值称为水平。例如，每一个具体地区或者每一种药品都对应着一个水平。根据因素的个数，方差分析可以分为单因素方差分析和多因素方差分析</li><li><strong>正态分布像一只倒扣的钟。两头低，中间高，左右对称。大部分数据集中在平均值，小部分在两端。</strong></li></ol></li></ol><h2 id="异常判断"><a href="#异常判断" class="headerlink" title="异常判断"></a>异常判断</h2><p>指数平滑法是一种特殊的加权平均法，加权的特点是对离预测值较近的历史数据给予较大的权数，对离预测期较远的历史数据给予较小的权数，权数由近到远按指数规律递减，所以，这种预测方法被称为指数平滑法。它可分为一次指数平滑法、二次指数平滑法及更高次指数平滑法。</p><a id="more"></a><h3 id="异常算法"><a href="#异常算法" class="headerlink" title="异常算法"></a>异常算法</h3><p>skyline 一共提供了 7 个异常检测算法，如果有 5 个以上认为是异常，那么 skyline就认为这个序列异常了.</p><p>异常检测算法实际写在了 <code>src/analyzer/algorithms.py</code></p><ol><li>first_hour_average、</li><li>simple_stddev_from_moving_average、</li><li>stddev_from_moving_average、</li><li>mean_subtraction_cumulation、</li><li>least_squares</li><li>histogram_bins、</li><li>grubbs、</li><li>median_absolute_deviation、</li><li>Kolmogorov-Smirnov_test</li></ol><h3 id="first-hour-average"><a href="#first-hour-average" class="headerlink" title="first_hour_average"></a>first_hour_average</h3><p>这是最简单的。先求本周期内最前面的第一个小时的平均值和标准差，然后和最新的三个值的平均值(tail_avg()，这是后面多数算法都通用的做法)做比较。如果 tail_avg 和 第一小时平均值的差距大于 3 倍的标准差，那么认定为异常。</p><h3 id="simple-stddev-from-moving-average"><a href="#simple-stddev-from-moving-average" class="headerlink" title="simple_stddev_from_moving_average"></a>simple_stddev_from_moving_average</h3><p>把上面算法的范围扩大化，求的是整个周期内全部数据的平均值和标准差。</p><h3 id="stddev-from-moving-average"><a href="#stddev-from-moving-average" class="headerlink" title="stddev_from_moving_average"></a>stddev_from_moving_average</h3><p>在上面算法的基础上，采用指数加权移动平均值。对周期内采点数量较少的情况更好一些。</p><h3 id="mean-subtraction-cumulation"><a href="#mean-subtraction-cumulation" class="headerlink" title="mean_subtraction_cumulation"></a>mean_subtraction_cumulation</h3><p>做法是这样的：</p><ol><li>排除最后一个值；</li><li>求剩余序列的平均值；</li><li>全序列减去上面这个平均值；</li><li>求剩余序列的标准差；</li><li>判断全序列最后一个值是否大于 3 倍的标准差</li></ol><p>在代码中本来还计算了一次序列的指数加权移动平均值，但是算完了却没用，感觉怪怪的。</p><h3 id="least-squares"><a href="#least-squares" class="headerlink" title="least_squares"></a>least_squares</h3><p>采用最小二乘法拟近时间序列，然后用实际值减去拟近值得到新序列。然后判断新序列的最后三个值的平均值是否大于 3 倍的新序列标准差。</p><p>所谓最小二乘法，简单说就是对一个 [x, y] 序列，会有一对常数 [m, c]，让 Y = mx + c 等式中的 Y 和 y 在全序列上最接近。</p><h3 id="histogram-bins"><a href="#histogram-bins" class="headerlink" title="histogram_bins"></a>histogram_bins</h3><p>将整个周期序列的数据按照直方图统计法归入 15 个直方中，然后看最后三个值的平均值属于这 15 个直方的具体哪个。如果这个直方中包含的数据小于 20 个，判断为异常。</p><p>从算法中可以知道，如果周期内数据量不够，很容易被判断为异常的。</p><h3 id="grubbs"><a href="#grubbs" class="headerlink" title="grubbs"></a>grubbs</h3><p>将整个周期序列的数据按照格拉布斯法求异常值。</p><p>标准的格拉布斯法是这样的：</p><ol><li>从小到大排序；</li><li>求序列的平均值和标准差；</li><li>计算最小值和最大值与平均值的差距，更大的那个为可疑值；</li><li>可疑值减去平均值，再除以标准差，如果大于格拉布斯临界值，那么就是异常值；</li><li>排除异常值，对剩余序列循环做 1-5 步骤。</li></ol><p>这里只用判断时间序列的最后是否异常，所以直接将最后三个值的平均值作为可疑值判断是否异常即可。</p><p><strong>2013 年 07 月 23 日更新</strong></p><p>新增了一个异常算法，现在有 8 个了，要通过 6 个才算真异常。</p><p>新增的是”绝对中值偏差法”</p><h3 id="median-absolute-deviation"><a href="#median-absolute-deviation" class="headerlink" title="median_absolute_deviation"></a>median_absolute_deviation</h3><p>具体实现是：序列的最后一个值，比该序列的绝对中值大 6 倍以上，即判断为异常。</p><p>注意这里是中值，不是平均值。</p><p><strong>2013 年 08 月 14 日更新</strong></p><p>新增一个异常算法，现在有 9 个了。</p><p>新增的是”柯尔莫诺夫-斯米尔诺夫检验法”</p><h3 id="Kolmogorov-Smirnov-test"><a href="#Kolmogorov-Smirnov-test" class="headerlink" title="Kolmogorov-Smirnov_test"></a>Kolmogorov-Smirnov_test</h3><p>具体实现是：计算序列内最近十分钟的数值的ks测试分布，然后计算序列中最近一个小时前到十分钟前这 50 分钟的数值的ks测试分布；如果两个分布相差较大，即判断为异常。</p><h2 id="预测"><a href="#预测" class="headerlink" title="预测"></a>预测</h2><h3 id="预测算法"><a href="#预测算法" class="headerlink" title="预测算法"></a>预测算法</h3><p>时序存储</p><p> rrdtool 和 graphite</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;监控系统预测和异常判断&quot;&gt;&lt;a href=&quot;#监控系统预测和异常判断&quot; class=&quot;headerlink&quot; title=&quot;监控系统预测和异常判断&quot;&gt;&lt;/a&gt;监控系统预测和异常判断&lt;/h1&gt;&lt;p&gt;基于算法的 IT 运维平台(Algorithmic IT operations platforms)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;机器学习&lt;/li&gt;
&lt;li&gt;数学统计&lt;ol&gt;
&lt;li&gt;方差分析可以用来判断几组观察到的数据或者处理的结果是否存在显著差异。&lt;/li&gt;
&lt;li&gt;在方差分析中，我们把要考察其均值是否存在显著差异的指标变量称为响应变量，对响应变量取值有影响的其他变量称为因素。例如，信用卡消费水平和治疗效果为响应变量，地区和药品则为因素。在方差分析中，因素的取值应为离散型的，其不同的取值称为水平。例如，每一个具体地区或者每一种药品都对应着一个水平。根据因素的个数，方差分析可以分为单因素方差分析和多因素方差分析&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;正态分布像一只倒扣的钟。两头低，中间高，左右对称。大部分数据集中在平均值，小部分在两端。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;异常判断&quot;&gt;&lt;a href=&quot;#异常判断&quot; class=&quot;headerlink&quot; title=&quot;异常判断&quot;&gt;&lt;/a&gt;异常判断&lt;/h2&gt;&lt;p&gt;指数平滑法是一种特殊的加权平均法，加权的特点是对离预测值较近的历史数据给予较大的权数，对离预测期较远的历史数据给予较小的权数，权数由近到远按指数规律递减，所以，这种预测方法被称为指数平滑法。它可分为一次指数平滑法、二次指数平滑法及更高次指数平滑法。&lt;/p&gt;
    
    </summary>
    
      <category term="monitor" scheme="https://talenhao.github.io/categories/monitor/"/>
    
    
      <category term="monitor,alert" scheme="https://talenhao.github.io/tags/monitor-alert/"/>
    
  </entry>
  
  <entry>
    <title>keepalived</title>
    <link href="https://talenhao.github.io/2019/09/04/keepalived/"/>
    <id>https://talenhao.github.io/2019/09/04/keepalived/</id>
    <published>2019-09-04T03:01:41.000Z</published>
    <updated>2019-09-04T03:01:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="keepalived"><a href="#keepalived" class="headerlink" title="keepalived"></a>keepalived</h1><pre class="mermaid">graph TBkeepalived_module-->corekeepalived_module-->checkkeepalived_module-->vrrp</pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;keepalived&quot;&gt;&lt;a href=&quot;#keepalived&quot; class=&quot;headerlink&quot; title=&quot;keepalived&quot;&gt;&lt;/a&gt;keepalived&lt;/h1&gt;&lt;pre class=&quot;mermaid&quot;&gt;graph TB
keepalived_
      
    
    </summary>
    
      <category term="lb" scheme="https://talenhao.github.io/categories/lb/"/>
    
    
      <category term="lb,keepalived" scheme="https://talenhao.github.io/tags/lb-keepalived/"/>
    
  </entry>
  
  <entry>
    <title>VRRP协议</title>
    <link href="https://talenhao.github.io/2019/09/04/VRRP%E5%8D%8F%E8%AE%AE/"/>
    <id>https://talenhao.github.io/2019/09/04/VRRP协议/</id>
    <published>2019-09-04T01:42:41.000Z</published>
    <updated>2019-09-04T01:42:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VRRP协议"><a href="#VRRP协议" class="headerlink" title="VRRP协议"></a>VRRP协议</h1><p>Skew time(秒)=(256－Backup路由器的优先级)/256</p><p>Master_Down_Interval(秒)=(3×VRRP报文的发送时间间隔)+Skew time</p><pre class="mermaid">sequenceDiagramparticipant up as 上层路由器participant m as master routerNote left of m: 00-00-5E-00-01-{VRID} & VIP & 优先级participant s as backup routerloop intervalm-->>s: vrrp 通告报文 I'm alive!endloop intervals-->>m:BFD检测快速切换endloop intervalm-->>up:NQA检测调整自身优先级end</pre><a id="more"></a><pre class="mermaid">graph TBvr((virtual_router))-->rr0((real_router_0))vr-->rr1((real_router_1))vr-->rr2((real_router_2))</pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;VRRP协议&quot;&gt;&lt;a href=&quot;#VRRP协议&quot; class=&quot;headerlink&quot; title=&quot;VRRP协议&quot;&gt;&lt;/a&gt;VRRP协议&lt;/h1&gt;&lt;p&gt;Skew time(秒)=(256－Backup路由器的优先级)/256&lt;/p&gt;
&lt;p&gt;Master_Down_Interval(秒)=(3×VRRP报文的发送时间间隔)+Skew time&lt;/p&gt;
&lt;pre class=&quot;mermaid&quot;&gt;sequenceDiagram
participant up as 上层路由器
participant m as master router
Note left of m: 00-00-5E-00-01-{VRID} &amp; VIP &amp; 优先级
participant s as backup router

loop interval
m--&gt;&gt;s: vrrp 通告报文 I&#39;m alive!
end
loop interval
s--&gt;&gt;m:BFD检测快速切换
end
loop interval
m--&gt;&gt;up:NQA检测调整自身优先级
end&lt;/pre&gt;
    
    </summary>
    
      <category term="network" scheme="https://talenhao.github.io/categories/network/"/>
    
    
      <category term="network,vrrp" scheme="https://talenhao.github.io/tags/network-vrrp/"/>
    
  </entry>
  
  <entry>
    <title>pgp加密</title>
    <link href="https://talenhao.github.io/2019/09/01/pgp%E5%8A%A0%E5%AF%86/"/>
    <id>https://talenhao.github.io/2019/09/01/pgp加密/</id>
    <published>2019-09-01T04:28:35.000Z</published>
    <updated>2019-09-01T04:28:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pgp加密"><a href="#pgp加密" class="headerlink" title="pgp加密"></a>pgp加密</h1><p>GnuPG 是一个用来进行非对称加密(PGP)的免费软件，简称GPG</p><p>PGP是一个基于RSA公匙加密体系的邮件加密软件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;pgp加密&quot;&gt;&lt;a href=&quot;#pgp加密&quot; class=&quot;headerlink&quot; title=&quot;pgp加密&quot;&gt;&lt;/a&gt;pgp加密&lt;/h1&gt;&lt;p&gt;GnuPG 是一个用来进行非对称加密(PGP)的免费软件，简称GPG&lt;/p&gt;
&lt;p&gt;PGP是一个基于RSA公匙加密体
      
    
    </summary>
    
      <category term="pgp,gpg" scheme="https://talenhao.github.io/categories/pgp-gpg/"/>
    
    
      <category term="pgp,gpg" scheme="https://talenhao.github.io/tags/pgp-gpg/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch_dsl使用</title>
    <link href="https://talenhao.github.io/2019/08/30/elasticsearch-dsl%E4%BD%BF%E7%94%A8/"/>
    <id>https://talenhao.github.io/2019/08/30/elasticsearch-dsl使用/</id>
    <published>2019-08-30T07:59:40.000Z</published>
    <updated>2019-08-30T07:59:40.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">POST /_search</span><br><span class="line">&#123;</span><br><span class="line">&quot;size&quot;: 0,</span><br><span class="line">&quot;aggs&quot;: &#123;</span><br><span class="line">    &quot;by_grp&quot; : &#123;</span><br><span class="line">        &quot;terms&quot;: &#123;</span><br><span class="line">            &quot;field&quot;: &quot;grpId&quot;,</span><br><span class="line">            &quot;size&quot;: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;aggs&quot;: &#123;</span><br><span class="line">            &quot;twitter_count&quot;: &#123;</span><br><span class="line">                &quot;range&quot;: &#123;</span><br><span class="line">                    &quot;field&quot;: &quot;twitter.followers&quot;,</span><br><span class="line">                    &quot;ranges&quot;: [</span><br><span class="line">                        &#123; &quot;to&quot; : 501&#125;,</span><br><span class="line">                        &#123; &quot;from&quot; : 501, &quot;to&quot; : 1001&#125;,</span><br><span class="line">                        &#123; &quot;from&quot; : 1001, &quot;to&quot; : 5001&#125;,</span><br><span class="line">                        &#123; &quot;from&quot; : 5001&#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;aggs&quot; : &#123;</span><br><span class="line">                    &quot;email_addy&quot;: &#123;</span><br><span class="line">                        &quot;terms&quot; : &#123;</span><br><span class="line">                            &quot;field&quot;: &quot;email.value&quot;,</span><br><span class="line">                            &quot;size&quot;: 0</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">s.aggs.bucket(<span class="string">'by_grp'</span>, <span class="string">'terms'</span>, field=<span class="string">'grpId'</span>, size=<span class="number">0</span>) \</span><br><span class="line">.bucket(<span class="string">'twitter_count'</span>, <span class="string">'range'</span>, field=<span class="string">'twitter.followers'</span>,</span><br><span class="line">    ranges=[</span><br><span class="line">        &#123;<span class="string">'to'</span>: <span class="number">5001</span>&#125;,</span><br><span class="line">        &#123;<span class="string">'from'</span>: <span class="number">5001</span>, <span class="string">'to'</span>: <span class="number">10001</span>&#125;,</span><br><span class="line">        &#123;<span class="string">'from'</span>: <span class="number">10001</span>, <span class="string">'to'</span>: <span class="number">50001</span>&#125;,</span><br><span class="line">        &#123;<span class="string">'from'</span>: <span class="number">50001</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">) \</span><br><span class="line">.bucket(<span class="string">'email_addy'</span>, <span class="string">'terms'</span>, field=<span class="string">'email.value'</span>, size=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="elasticsearch" scheme="https://talenhao.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="https://talenhao.github.io/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>消息队列</title>
    <link href="https://talenhao.github.io/2019/08/28/mq/"/>
    <id>https://talenhao.github.io/2019/08/28/mq/</id>
    <published>2019-08-28T02:00:41.000Z</published>
    <updated>2019-08-28T02:00:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="消息传输模型"><a href="#消息传输模型" class="headerlink" title="消息传输模型"></a>消息传输模型</h2><ol><li>[1to1]点对点(point-to-point)</li><li>[MtoM]生产消费(produce-queue-consumer)</li><li>[1toM]发布订阅(PUBSUB)<ol><li>广播(subscriber拿相同的消息)</li><li>request-reply应答</li><li>队列分发(每个subscriber拿到的不一样)</li></ol></li></ol><h2 id="考量标准"><a href="#考量标准" class="headerlink" title="考量标准"></a>考量标准</h2><p>三个维度上去考量，吞吐量、时延、可靠性</p><ol><li>nats本身没有实现存储,可靠性要客户端服务端实现</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;消息传输模型&quot;&gt;&lt;a href=&quot;#消息传输模型&quot; class=&quot;headerlink&quot; title=&quot;消息传输模型&quot;&gt;&lt;/a&gt;消息传输模型&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;[1to1]点对点(point-to-point)&lt;/li&gt;
&lt;li&gt;[MtoM]生产消费(pr
      
    
    </summary>
    
      <category term="mq" scheme="https://talenhao.github.io/categories/mq/"/>
    
    
      <category term="mq" scheme="https://talenhao.github.io/tags/mq/"/>
    
  </entry>
  
  <entry>
    <title>nginx优化</title>
    <link href="https://talenhao.github.io/2019/08/28/nginx%E4%BC%98%E5%8C%96/"/>
    <id>https://talenhao.github.io/2019/08/28/nginx优化/</id>
    <published>2019-08-28T01:58:30.000Z</published>
    <updated>2019-08-28T01:58:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx信号："><a href="#nginx信号：" class="headerlink" title="nginx信号："></a>nginx信号：</h2><ol><li>TERM,INT快速关闭</li><li>HUP     平滑重启，加载配置(重启旧进程)</li><li>USR1    重新打开日志，切日志</li><li>USR2    平滑升级<ol><li>-&gt;  WINCH   从容关闭worker</li><li>-&gt;  QUIT    从容关闭master</li></ol></li></ol><p>config:<br>    worker_rlimit_nofile 51200;<br>    worker_connections   51200;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-server modules]# rpm -ql nginx</span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/etc/nginx</span><br><span class="line">/etc/nginx/conf.d</span><br><span class="line">/etc/nginx/conf.d/default.conf</span><br><span class="line">/etc/nginx/fastcgi_params</span><br><span class="line">/etc/nginx/koi-utf</span><br><span class="line">/etc/nginx/koi-win</span><br><span class="line">/etc/nginx/mime.types</span><br><span class="line">/etc/nginx/modules</span><br><span class="line">/etc/nginx/nginx.conf</span><br><span class="line">/etc/nginx/scgi_params</span><br><span class="line">/etc/nginx/uwsgi_params</span><br><span class="line">/etc/nginx/win-utf</span><br><span class="line">/etc/sysconfig/nginx</span><br><span class="line">/etc/sysconfig/nginx-debug</span><br><span class="line">/usr/lib/systemd/system/nginx-debug.service</span><br><span class="line">/usr/lib/systemd/system/nginx.service</span><br><span class="line">/usr/lib64/nginx</span><br><span class="line">/usr/lib64/nginx/modules</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/nginx</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/nginx/check-reload</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/nginx/upgrade</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line">/usr/sbin/nginx-debug</span><br><span class="line">/usr/share/doc/nginx-1.16.0</span><br><span class="line">/usr/share/doc/nginx-1.16.0/COPYRIGHT</span><br><span class="line">/usr/share/man/man8/nginx.8.gz</span><br><span class="line">/usr/share/nginx</span><br><span class="line">/usr/share/nginx/html</span><br><span class="line">/usr/share/nginx/html/50x.html</span><br><span class="line">/usr/share/nginx/html/index.html</span><br><span class="line">/var/cache/nginx</span><br><span class="line">/var/log/nginx</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-server nginx]# nginx -V</span><br><span class="line">nginx version: nginx/1.16.0</span><br><span class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC)</span><br><span class="line">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module--with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC' --with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie'</span><br></pre></td></tr></table></figure><p>Nginx 监控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#netstat -n | awk &apos;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&apos;</span><br></pre></td></tr></table></figure><p>上面是一个实际网站的配置实例，其中灰色文字为配置说明。上述配置中，首先我们定义了一个 location ~ ^/NginxStatus/，这样通过 <a href="http://localhost/NginxStatus/" target="_blank" rel="noopener">http://localhost/NginxStatus/</a> 就可以监控到 Nginx 的运行信息，显示的内容如下：</p><p>Active connections: 70<br>server accepts handled requests<br> 14553819 14553819 19239266<br>Reading: 0 Writing: 3 Waiting: 67</p><p>NginxStatus 显示的内容意思如下：</p><pre><code>active connections – 当前 Nginx 正处理的活动连接数。server accepts handled requests -- 总共处理了 14553819 个连接 , 成功创建 14553819 次握手 ( 证明中间没有失败的 ), 总共处理了 19239266 个请求 ( 平均每次握手处理了 1.3 个数据请求 )。reading -- nginx 读取到客户端的 Header 信息数。writing -- nginx 返回给客户端的 Header 信息数。waiting -- 开启 keep-alive 的情况下，这个值等于 active - (reading + writing)，意思就是 Nginx 已经处理完正在等候下一次请求指令的驻留连接。</code></pre><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> 1  0  22720 2010244 169688 2594920    0    0     0     0 33433 16822  2 21 77  0  0</span><br><span class="line"> 2  0  22720 2010492 169688 2594952    0    0     0   412 34205 17057  3 21 76  0  0</span><br><span class="line"> 1  0  22720 2010864 169688 2593692    0    0     0     0 33576 16732  3 21 77  0  0</span><br><span class="line"> 1  0  22720 2009624 169696 2595632    0    0     0   404 33831 16805  3 20 77  0  0</span><br><span class="line"> 1  0  22720 2009500 169696 2594784    0    0     0     0 33843 16680  3 21 77  0  0</span><br><span class="line">[root@192-168-171-146 nginx]# vmstat 5</span><br><span class="line">procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----</span><br><span class="line"> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"> 0  0  22420 2207684  70400 2497512    0    0     7    56    2    1  1  5 93  0  0</span><br><span class="line"> 1  0  22420 2205872  70416 2500324    0    0     0   130 31450 15395  2  7 92  0  0</span><br><span class="line"> 1  0  22420 2203248  70432 2504292    0    0     0   110 31637 15802  2  7 91  0  0</span><br><span class="line"> 0  0  22420 2202296  70448 2506236    0    0     0   134 31459 15605  2  7 91  0  0</span><br><span class="line"> 0  0  22420 2202064  70460 2505480    0    0     0   447 31511 15458  2  7 91  1  0</span><br></pre></td></tr></table></figure><p>worker_cpu_affinity配置是写在/etc/nginx/nginx.conf里面的。</p><p>2核是 01，四核是0001，8核是00000001，有多少个核，就有几位数，1表示该内核开启，0表示该内核关闭。</p><ol start="5"><li>8核CPU，开户8个进程</li></ol><p>worker_processes     8;<br>worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;<br>0001表示启用第一个CPU内核，0010表示启用第二个CPU内核，依此类推<br>worker_processes最多开启8个，8个以上性能提升不会再提升了，而且稳定性变得更低，所以8个进程够用了。</p><p>优化TCP/IP连接，减少TIME-WAIT的命令<br>（一）TCP/IP连接的状态和对应的个数：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | awk <span class="string">'/^tcp/ &#123;++s[$NF]&#125; END &#123;for(a in s) print a, s[a]&#125;'</span></span><br></pre></td></tr></table></figure><p>（二）提升服务器的负载能力：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysctl.conf</span></span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line">net.ipv4.tcp_fin_timeout = 5</span><br></pre></td></tr></table></figure><p>参数说明：{<br>net.ipv4.tcp_syncookies = 1 表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；<br>net.ipv4.tcp_tw_reuse = 1 表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；<br>net.ipv4.tcp_tw_recycle = 1 表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭；<br>net.ipv4.tcp_fin_timeout 修改系统默认的 TIMEOUT 时间。<br>}<br>（三）优化TCP/IP的可使用端口范围，进一步提升服务器的并发能力（针对tcp流量比较大的服务器）<br>net.ipv4.tcp_keepalive_time = 1200<br>net.ipv4.ip_local_port_range = 10000 65000<br>net.ipv4.tcp_max_syn_backlog = 8192<br>net.ipv4.tcp_max_tw_buckets = 5000</p><p>参数说明：{<br>net.ipv4.tcp_keepalive_time = 1200 表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。</p><p>net.ipv4.ip_local_port_range = 10000 65000 表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为10000到65000。(注意：这里不要将最低值设的太低，否则可能会占用掉正常的端口！)<br>net.ipv4.tcp_max_syn_backlog = 8192 表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。</p><p>net.ipv4.tcp_max_tw_buckets = 5000 表示系统同时保持TIME_WAIT的最大数量，如果超过这个数字，TIME_WAIT将立刻被清除并打印警告信息。默认为180000，改为5000。对于Apache、Nginx等服务器，上几行的参数可以很好地减少TIME_WAIT套接字数量，但是对于 Squid，效果却不大。此项参数可以控制TIME_WAIT的最大数量，避免Squid服务器被大量的TIME_WAIT拖死。<br>}<br>（四）修改 linux kernel 的 tcp time wait的时间（适用于大量短连接的情况）<br>在 $KERNEL/include/net/tcp.h里面，有下面的行：<br>    　　#define TCP_TIMEWAIT_LEN (60<em>HZ) /</em> how long to wait to destroy TIME-WAIT<br>    　　* state, about 60 seconds */<br>    　　而这个宏是真正控制 TCP TIME_WAIT 状态的超时时间的。如果我们希望减少 TIME_WAIT 状态的数目(从而节省一点点内核操作时间)，那么可以把这个数值设置低一些，根据我们的测试，设置为 10 秒比较合适，也就是把上面的修改为：</p><pre><code>　　#define TCP_TIMEWAIT_LEN (10*HZ) /* how long to wait to destroy TIME-WAIT　　* state, about 60 seconds */</code></pre><p>　　然后重新编译内核，重启系统即可发现短连接造成的TIME_WAIT状态大大减少：<br>　　netstat -ant | grep -i time_wait |wc -l<br>　　一般情况都可以至少减少2/3。也能相应提高系统应对短连接的速度</p><p>net.ipv4.tcp_syncookies = 1<br>net.ipv4.tcp_tw_reuse = 1<br>net.ipv4.tcp_tw_recycle = 1<br>net.ipv4.tcp_fin_timeout = 5<br>参数说明：{<br>net.ipv4.tcp_syncookies = 1 表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；<br>net.ipv4.tcp_tw_reuse = 1 表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；<br>net.ipv4.tcp_tw_recycle = 1 表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭；<br>net.ipv4.tcp_fin_timeout 修改系统默认的 TIMEOUT 时间。<br>}</p><p>Nginx做web服务器linux内核参数优化</p><p>Nginx提供web服务时Linux内核参数调整是必不可少的，其中在优化方面就需要我们格外的注意。在下面就是对Linux内核参数优化的详细介绍，希望大家有所收获。</p><p>关于Linux内核参数的优化：</p><p>net.ipv4.tcp_max_tw_buckets = 6000</p><p>timewait的数量，默认是180000。</p><p>net.ipv4.ip_local_port_range = 1024 65000</p><p>允许系统打开的端口范围。</p><p>net.ipv4.tcp_tw_recycle = 1</p><p>启用timewait快速回收。</p><p>net.ipv4.tcp_tw_reuse = 1</p><p>开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接。</p><p>net.ipv4.tcp_syncookies = 1</p><p>开启SYN Cookies，当出现SYN等待队列溢出时，启用cookies来处理。</p><p>net.core.somaxconn = 262144</p><p>web应用中listen函数的backlog默认会给我们内核参数的net.core.somaxconn限制到128，而Nginx内核参数定义的NGX_LISTEN_BACKLOG默认为511，所以有必要调整这个值。</p><p>net.core.netdev_max_backlog = 262144</p><p>每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。</p><p>net.ipv4.tcp_max_orphans = 262144</p><p>系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上。如果超过这个数字，孤儿连接将即刻被复位并打印出警告信息。这个限制仅仅是为了防止简单的DoS攻击，不能过分依靠它或者人为地减小这个值，更应该增加这个值(如果增加了内存之后)。</p><p>net.ipv4.tcp_max_syn_backlog = 262144</p><p>记录的那些尚未收到客户端确认信息的连接请求的最大值。对于有128M内存的系统而言，缺省值是1024，小内存的系统则是128。</p><p>net.ipv4.tcp_timestamps = 0</p><p>时间戳可以避免序列号的卷绕。一个1Gbps的链路肯定会遇到以前用过的序列号。时间戳能够让内核接受这种“异常”的数据包。这里需要将其关掉。</p><p>net.ipv4.tcp_synack_retries = 1</p><p>为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。</p><p>net.ipv4.tcp_syn_retries = 1</p><p>在内核放弃建立连接之前发送SYN包的数量。</p><p>net.ipv4.tcp_fin_timeout = 1</p><p>如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。对端可以出错并永远不关闭连接，甚至意外当机。缺省值是60秒。2.2 内核的通常值是180秒，你可以按这个设置，但要记住的是，即使你的机器是一个轻载的WEB服务器，也有因为大量的死套接字而内存溢出的风险，FIN- WAIT-2的危险性比FIN-WAIT-1要小，因为它最多只能吃掉1.5K内存，但是它们的生存期长些。</p><p>net.ipv4.tcp_keepalive_time = 30</p><p>当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@192-168-171-146 conf]<span class="comment"># ss -s</span></span><br><span class="line">Total: 12814 (kernel 12920)</span><br><span class="line">TCP:   16857 (estab 12572, closed 4096, orphaned 153, synrecv 0, timewait 4096/0), ports 1300</span><br><span class="line"></span><br><span class="line">Transport Total     IP        IPv6</span><br><span class="line"></span><br><span class="line">- 12920     -         -</span><br><span class="line">  RAW       0         0         0</span><br><span class="line">  UDP       9         6         3</span><br><span class="line">  TCP       12761     12757     4</span><br><span class="line">  INET      12770     12763     7</span><br><span class="line">  FRAG      0         0         0</span><br><span class="line"></span><br><span class="line">[root@192-168-171-146 conf]<span class="comment"># ss -s</span></span><br><span class="line">Total: 44751 (kernel 44980)</span><br><span class="line">TCP:   48780 (estab 44533, closed 4096, orphaned 139, synrecv 0, timewait 4096/0), ports 2188</span><br><span class="line"></span><br><span class="line">Transport Total     IP        IPv6</span><br><span class="line"></span><br><span class="line">- 44980     -         -</span><br><span class="line">  RAW       0         0         0</span><br><span class="line">  UDP       9         6         3</span><br><span class="line">  TCP       44684     44680     4</span><br><span class="line">  INET      44693     44686     7</span><br><span class="line">  FRAG      0         0         0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nginx信号：&quot;&gt;&lt;a href=&quot;#nginx信号：&quot; class=&quot;headerlink&quot; title=&quot;nginx信号：&quot;&gt;&lt;/a&gt;nginx信号：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;TERM,INT快速关闭&lt;/li&gt;
&lt;li&gt;HUP     平滑重启，加载配置(
      
    
    </summary>
    
      <category term="nginx" scheme="https://talenhao.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://talenhao.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>kernel参数</title>
    <link href="https://talenhao.github.io/2019/08/27/kernel%E5%8F%82%E6%95%B0/"/>
    <id>https://talenhao.github.io/2019/08/27/kernel参数/</id>
    <published>2019-08-27T07:38:40.000Z</published>
    <updated>2019-08-27T07:38:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内核参数"><a href="#内核参数" class="headerlink" title="内核参数"></a>内核参数</h1><h2 id="vm-max-map-count"><a href="#vm-max-map-count" class="headerlink" title="vm.max_map_count"></a>vm.max_map_count</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>Elasticsearch uses a <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-store.html#mmapfs" target="_blank" rel="noopener"><code>mmapfs</code></a> directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions.</p><p><strong><code>mmapfs</code></strong></p><p>The MMap FS type stores the shard index on the file system (maps to Lucene <code>MMapDirectory</code>) by mapping a file into memory (mmap). Memory mapping uses up a portion of the virtual memory address space in your process equal to the size of the file being mapped. Before using this class, be sure you have allowed plenty of <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html" target="_blank" rel="noopener">virtual address space</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;内核参数&quot;&gt;&lt;a href=&quot;#内核参数&quot; class=&quot;headerlink&quot; title=&quot;内核参数&quot;&gt;&lt;/a&gt;内核参数&lt;/h1&gt;&lt;h2 id=&quot;vm-max-map-count&quot;&gt;&lt;a href=&quot;#vm-max-map-count&quot; class=&quot;head
      
    
    </summary>
    
      <category term="kernel" scheme="https://talenhao.github.io/categories/kernel/"/>
    
    
      <category term="linux,kernel" scheme="https://talenhao.github.io/tags/linux-kernel/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 笔记</title>
    <link href="https://talenhao.github.io/2019/08/26/elasticsearch-%E7%AC%94%E8%AE%B0/"/>
    <id>https://talenhao.github.io/2019/08/26/elasticsearch-笔记/</id>
    <published>2019-08-26T10:00:17.000Z</published>
    <updated>2019-08-26T10:00:17.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ELASTICSEARCH官方文档笔记"><a href="#ELASTICSEARCH官方文档笔记" class="headerlink" title="ELASTICSEARCH官方文档笔记"></a>ELASTICSEARCH官方文档笔记</h1><p>分布式文档存储</p><p>序列化json文档,KV包含数据</p><p>full-text searche全文索引实时搜索(An inverted index lists every unique word that appears in any document and identifies all of the documents each word occurs in.)</p><p>When dynamic mapping is enabled, Elasticsearch automatically detects and adds new fields to the index.</p><p>相同的字段可以标记为多个类型以便不同的分析方法</p><p>aggregations operate 和 search requests可并行执行</p><h3 id="搜索数据"><a href="#搜索数据" class="headerlink" title="搜索数据"></a>搜索数据</h3><p>REST API接口管理集群,索引和搜索数据(<a href="https://www.elastic.co/guide/en/elasticsearch/client/index.html" target="_blank" rel="noopener">Elasticsearch client</a>,kibana developer console, command line)</p><p>​    The Elasticsearch REST APIs support structured queries, full text queries, and complex queries that combine the two. </p><p>全文索引将按关联性返回搜索结果</p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html" target="_blank" rel="noopener">Query DSL</a> </p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-overview.html" target="_blank" rel="noopener">SQL-style queries</a></p><h3 id="分析数据"><a href="#分析数据" class="headerlink" title="分析数据"></a>分析数据</h3><p>聚合功能</p><p>key metrics, patterns, and trends</p><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><h2 id="弹性调度"><a href="#弹性调度" class="headerlink" title="弹性调度"></a>弹性调度</h2><p>cluster</p><p>node</p><p>shard</p><p>自由添加node,自动平衡As the cluster grows (or shrinks), Elasticsearch automatically migrates shards to rebalance the cluster.</p><p>index(逻辑组)-&gt;shards(物理)-&gt;nodes</p><pre class="mermaid">graph LRindex(Index逻辑组)-->shardsshards-->primary_shardsprimary_shards-->replicas_shards(replicas shards只读)primary_cluster-->CCR(Cross-cluster replication)CCR-->replicated_cluster(replicated cluster只读)</pre><p>## </p><h3 id="CAT-API"><a href="#CAT-API" class="headerlink" title="CAT API"></a>CAT API</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -X GET <span class="string">"127.0.0.1:9200/_cat/health?v&amp;pretty"</span></span></span><br><span class="line">epoch      timestamp cluster        status node.total node.data shards  pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line">1566820997 12:03:17  cluster-name   green          15         9   6073 6039    0    0        0             0                  -                100.0%</span><br><span class="line"><span class="meta">$</span><span class="bash"> curl -X GET <span class="string">"127.0.0.1:9200/_cat/indices?v&amp;pretty"</span> |more</span></span><br><span class="line">health status index                                                        uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">green  open   logstash-xxx-2019.08.22            1NcDlWKNQxKK529JwuQxFg   5   0     308686            0    548.3mb        548.3mb</span><br><span class="line">green  open   bbbb-2019.07.02                                            NTzO-PQESb2YrrUPzs0fVA   5   0     161398            0       99mb           99mb</span><br><span class="line">green  open   logstash-cccc-2019.08.26                               -1DGNXaFRiqcowhhQ4Y2Tg   5   0    1364938            0    178.4mb        178.4mb</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> GET /customer/_doc/1单个文档获取</span></span><br></pre></td></tr></table></figure><h3 id="bluk-api-batch-document-operations-批量操作"><a href="#bluk-api-batch-document-operations-批量操作" class="headerlink" title="bluk api  (batch document operations)批量操作"></a>bluk api  (batch document operations)批量操作</h3><p>上传数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> https://github.com/elastic/elasticsearch/blob/master/docs/src/<span class="built_in">test</span>/resources/accounts.json?raw=<span class="literal">true</span></span></span><br><span class="line">curl -H "Content-Type: application/json" -XPOST "localhost:9200/bank/_bulk?pretty&amp;refresh" --data-binary "@accounts.json"</span><br><span class="line">curl "localhost:9200/_cat/indices?v"</span><br></pre></td></tr></table></figure><h2 id="search-analyze-and-machine-learning"><a href="#search-analyze-and-machine-learning" class="headerlink" title="search,analyze and machine learning"></a>search,analyze and machine learning</h2><h3 id="search"><a href="#search" class="headerlink" title="search"></a>search</h3><p>跟sql不同,这里没有游标等概念,查询完就结束了</p><ol><li><strong>REST request url</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search?q=*&amp;sort=account_number:asc&amp;pretty</span><br><span class="line">&#123;</span><br><span class="line">  "took" : 63,//查询使用的时间(微秒)</span><br><span class="line">  "timed_out" : false, //是否超时</span><br><span class="line">  "_shards" : &#123;//返回查询的shard信息</span><br><span class="line">    "total" : 5,</span><br><span class="line">    "successful" : 5,</span><br><span class="line">    "skipped" : 0,</span><br><span class="line">    "failed" : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  "hits" : &#123; //查询结果</span><br><span class="line">    "total" : &#123; //查询匹配</span><br><span class="line">        "value": 1000, //总数</span><br><span class="line">        "relation": "eq" //关联</span><br><span class="line">    &#125;,</span><br><span class="line">    "max_score" : null,</span><br><span class="line">    "hits" : [ &#123;  //实际结果列表</span><br><span class="line">      "_index" : "bank",</span><br><span class="line">      "_type" : "_doc",</span><br><span class="line">      "_id" : "0",</span><br><span class="line">      "sort": [0],</span><br><span class="line">      "_score" : null,</span><br><span class="line">      "_source" : &#123;"account_number":0,"balance":16623,"firstname":"Bradshaw","lastname":"Mckenzie","age":29,"gender":"F","address":"244 Columbus Place","employer":"Euron","email":"bradshawmckenzie@euron.com","city":"Hobucken","state":"CO"&#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      "_index" : "bank",</span><br><span class="line">      "_type" : "_doc",</span><br><span class="line">      "_id" : "1",</span><br><span class="line">      "sort": [1],</span><br><span class="line">      "_score" : null,</span><br><span class="line">      "_source" : &#123;"account_number":1,"balance":39225,"firstname":"Amber","lastname":"Duke","age":32,"gender":"M","address":"880 Holmes Lane","employer":"Pyrami","email":"amberduke@pyrami.com","city":"Brogan","state":"IL"&#125;</span><br><span class="line">    &#125;, ...</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>REST request body</strong></p><ol><li><p>match_all</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;//使用QUERY DSL</span><br><span class="line">    "query": &#123; "match_all": &#123;&#125; &#125;,</span><br><span class="line">    "sort": [</span><br><span class="line">    &#123; "account_number": "asc" &#125;</span><br><span class="line">    ],</span><br><span class="line">    // "sort": &#123; "balance": &#123; "order": "desc" &#125; &#125;</span><br><span class="line">    "size": 1, //默认为10</span><br><span class="line">    "from": 10, //指定开始的结果,默认为0,对于分布显示结果很有用</span><br><span class="line">    "_source": ["account_number", "balance"],//代替默认的_source返回字段</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>match</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match": &#123; "account_number": 20 &#125; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>match_phrase匹配短语</p><ol><li><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match_phrase": &#123; "address": "mill lane" &#125; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><ol start="4"><li><p>bool</p><ol><li>must(and)</li><li>should(or)</li><li>must_not(not)</li><li>filter<ol><li>range</li></ol></li></ol></li></ol><h3 id="analyze"><a href="#analyze" class="headerlink" title="analyze"></a>analyze</h3><p>term是代表完全匹配，即不进行分词器分析，文档中必须包含整个搜索的词汇</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  "size": 0, //不显示搜索结果</span><br><span class="line">  "aggs": &#123;</span><br><span class="line">    "group_by_state": &#123;</span><br><span class="line">      "terms": &#123; //terms aggregation聚合方式</span><br><span class="line">        "field": "state.keyword",</span><br><span class="line">        "size": 5 //默认显示10条记录</span><br><span class="line">        "order": &#123; //指定排序</span><br><span class="line">            "average_balance": "desc"</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      "aggs":&#123; //嵌套</span><br><span class="line">      "average_balance": &#123;</span><br><span class="line">      "avg": &#123;</span><br><span class="line">      "field": "balance"</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"took"</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"skipped"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"hits"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: &#123;</span><br><span class="line">            <span class="attr">"value"</span>: <span class="number">1000</span>,</span><br><span class="line">            <span class="attr">"relation"</span>: <span class="string">"eq"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"max_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">        <span class="attr">"hits"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"_index"</span>: <span class="string">"bank"</span>,</span><br><span class="line">                <span class="attr">"_type"</span>: <span class="string">"_doc"</span>,</span><br><span class="line">                <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="attr">"_score"</span>: <span class="number">1.0</span>,</span><br><span class="line">                <span class="attr">"_source"</span>: &#123;</span><br><span class="line">                    <span class="attr">"account_number"</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">"balance"</span>: <span class="number">39225</span>,</span><br><span class="line">                    <span class="attr">"firstname"</span>: <span class="string">"Amber"</span>,</span><br><span class="line">                    <span class="attr">"lastname"</span>: <span class="string">"Duke"</span>,</span><br><span class="line">                    <span class="attr">"age"</span>: <span class="number">32</span>,</span><br><span class="line">                    <span class="attr">"gender"</span>: <span class="string">"M"</span>,</span><br><span class="line">                    <span class="attr">"address"</span>: <span class="string">"880 Holmes Lane"</span>,</span><br><span class="line">                    <span class="attr">"employer"</span>: <span class="string">"Pyrami"</span>,</span><br><span class="line">                    <span class="attr">"email"</span>: <span class="string">"amberduke@pyrami.com"</span>,</span><br><span class="line">                    <span class="attr">"city"</span>: <span class="string">"Brogan"</span>,</span><br><span class="line">                    <span class="attr">"state"</span>: <span class="string">"IL"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"aggregations"</span>: &#123;</span><br><span class="line">        <span class="attr">"group_by_state"</span>: &#123;</span><br><span class="line">            <span class="attr">"doc_count_error_upper_bound"</span>: <span class="number">-1</span>,</span><br><span class="line">            <span class="attr">"sum_other_doc_count"</span>: <span class="number">923</span>,</span><br><span class="line">            <span class="attr">"buckets"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"CO"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">14</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">32460.35714285714</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"NE"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">16</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">32041.5625</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"AZ"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">14</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">31634.785714285714</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"MT"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">17</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">31147.41176470588</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"key"</span>: <span class="string">"VA"</span>,</span><br><span class="line">                    <span class="attr">"doc_count"</span>: <span class="number">16</span>,</span><br><span class="line">                    <span class="attr">"average_balance"</span>: &#123;</span><br><span class="line">                        <span class="attr">"value"</span>: <span class="number">30600.0625</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安装ELASTICSEARCH"><a href="#安装ELASTICSEARCH" class="headerlink" title="安装ELASTICSEARCH"></a>安装ELASTICSEARCH</h2><p>自带一个openjdk,可能过JAVA_HOME变量修改成自部署JAVA版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@dab238b13031 elasticsearch]# ls -1</span><br><span class="line">LICENSE.txt</span><br><span class="line">NOTICE.txt</span><br><span class="line">README.textile</span><br><span class="line">bin//执行文件</span><br><span class="line">config//配置文件</span><br><span class="line">data//shard数据目录</span><br><span class="line">jdk//自带jdk版本</span><br><span class="line">lib</span><br><span class="line">logs//日志</span><br><span class="line">modules</span><br><span class="line">plugins//插件,每个插件都有一个子目录</span><br><span class="line">[root@dab238b13031 elasticsearch]# ls jdk/</span><br><span class="line">bin  conf  include  jmods  legal  lib  release</span><br></pre></td></tr></table></figure><p>docker版本基础镜像基于centos7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.3.1</span><br><span class="line"><span class="meta">$</span><span class="bash"> grep vm.max_map_count /etc/sysctl.conf</span></span><br><span class="line">vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 后台,添加命令行配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置文件 config/elasticsearch.yml</span></span><br><span class="line">./bin/elasticsearch -d -Ecluster.name=my_cluster -Enode.name=node_1</span><br></pre></td></tr></table></figure><p>检测是否在运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET "localhost:9200/?pretty"</span><br><span class="line">&#123;</span><br><span class="line">  "name": "dab238b13031",</span><br><span class="line">  "cluster_name": "docker-cluster",</span><br><span class="line">  "cluster_uuid": "mNH6fmV0RE2WVvavM-9bFA",</span><br><span class="line">  "version": &#123;</span><br><span class="line">    "number": "7.3.1",</span><br><span class="line">    "build_flavor": "default",</span><br><span class="line">    "build_type": "docker",</span><br><span class="line">    "build_hash": "4749ba6",</span><br><span class="line">    "build_date": "2019-08-19T20:19:25.651794Z",</span><br><span class="line">    "build_snapshot": false,</span><br><span class="line">    "lucene_version": "8.1.0",</span><br><span class="line">    "minimum_wire_compatibility_version": "6.8.0",</span><br><span class="line">    "minimum_index_compatibility_version": "6.0.0-beta1"</span><br><span class="line">  &#125;,</span><br><span class="line">  "tagline": "You Know, for Search"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><strong>配置文件和敏感配置后需要重启</strong></p><p>三个配置文件:默认在config目录下,可ES_PATH_CONF=/path/to/my/config修改</p><ul><li><code>elasticsearch.yml</code> for configuring Elasticsearch</li><li><code>jvm.options</code> for configuring Elasticsearch JVM settings<ul><li>7-9:-Xmx2g 冒号前是java版本范围</li></ul></li><li><code>log4j2.properties</code> Log4j 2 for configuring Elasticsearch logging </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@dab238b13031 elasticsearch]# ls -1 bin/</span><br><span class="line">elasticsearch</span><br><span class="line">elasticsearch-certgen</span><br><span class="line">elasticsearch-certutil</span><br><span class="line">elasticsearch-cli</span><br><span class="line">elasticsearch-croneval</span><br><span class="line">elasticsearch-env</span><br><span class="line">elasticsearch-enve</span><br><span class="line">elasticsearch-keystore//用于创建敏感配置</span><br><span class="line">elasticsearch-migrate</span><br><span class="line">elasticsearch-node</span><br><span class="line">elasticsearch-plugin</span><br><span class="line">elasticsearch-saml-metadata</span><br><span class="line">elasticsearch-setup-passwords</span><br><span class="line">elasticsearch-shard</span><br><span class="line">elasticsearch-sql-cli</span><br><span class="line">elasticsearch-sql-cli-7.3.1.jar</span><br><span class="line">elasticsearch-syskeygen</span><br><span class="line">elasticsearch-users</span><br><span class="line">x-pack-env</span><br><span class="line">x-pack-security-env</span><br><span class="line">x-pack-watcher-env</span><br></pre></td></tr></table></figure><h4 id="敏感配置-POST-nodes-reload-secure-settings加载"><a href="#敏感配置-POST-nodes-reload-secure-settings加载" class="headerlink" title="敏感配置(POST _nodes/reload_secure_settings加载)"></a>敏感配置(POST _nodes/reload_secure_settings加载)</h4><p>添加string</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /file/containing/setting/value | bin/elasticsearch-keystore add --stdin the.setting.name.to.set</span><br></pre></td></tr></table></figure><p>添加文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-keystore add-file the.setting.name.to.set /path/example-file.json</span><br></pre></td></tr></table></figure><p>删除</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-keystore remove the.setting.name.to.remove</span><br></pre></td></tr></table></figure><h4 id="INDEX生命周期策略管理"><a href="#INDEX生命周期策略管理" class="headerlink" title="INDEX生命周期策略管理"></a>INDEX生命周期策略管理</h4><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/using-policies-rollover.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/reference/current/using-policies-rollover.html</a></p><h4 id="机器学习-默认是开启听"><a href="#机器学习-默认是开启听" class="headerlink" title="机器学习(默认是开启听)"></a>机器学习(默认是开启听)</h4><p>xpack.ml.enabled</p><h4 id="heap-size"><a href="#heap-size" class="headerlink" title="heap size"></a>heap size</h4><p>默认1G</p><p><code>Xms</code> (minimum heap size) and <code>Xmx</code> (maximum heap size) </p><p>Set <code>Xmx</code> and <code>Xms</code> to no more than 50% of your physical RAM</p><p>大heap利于内部缓存,但会带来长GC暂停.</p><p>系统内存太小影响文件缓存</p><h4 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch  -  nofile  65535</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapoff -a //禁用swap</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure><p>ulimit -u 4096</p><p>JVM会缓存解析10秒,ES覆盖为60秒,反向解析10秒</p><h2 id="Aggregations"><a href="#Aggregations" class="headerlink" title="Aggregations"></a>Aggregations</h2><p>四类</p><ol><li>bucketing分组<ol><li>terms<ol><li>size<ol><li>先收集所有shard上的一定数量的响应,然后再汇总一起,结果不是很精准</li><li>Numeric value (1000000000000000000000) out of range of int (-2147483648 - 2147483647)\n at [Source: org.elasticsearch.transport.netty4.ByteBufStreamInput@4af5e4f0; line: 16, column: 54]”</li></ol></li></ol></li><li>composite<ol><li>[composite] aggregation cannot be used with a parent aggregation</li></ol></li></ol></li><li>metric度量<ol><li>avg/加权avg</li></ol></li><li>matrix矩阵(在多个字段基础上产生矩阵)</li><li>pipeline管道(在其它聚合基础上再次聚合)<ol><li>Each bucket may be sorted based on its <code>_key</code>, <code>_count</code> or its sub-aggregations. </li></ol></li></ol><p>聚合嵌套功能十分强大</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 语法结构 aggregations或aggs</span></span><br><span class="line"><span class="string">"aggregations"</span> : &#123;</span><br><span class="line">    <span class="string">"&lt;aggregation_name&gt;"</span> : &#123;</span><br><span class="line">        <span class="string">"&lt;aggregation_type&gt;"</span> : &#123;</span><br><span class="line">            &lt;aggregation_body&gt;</span><br><span class="line">        &#125;</span><br><span class="line">        [,<span class="string">"meta"</span> : &#123;  [&lt;meta_data_body&gt;] &#125; ]?</span><br><span class="line">        [,"aggregations" : &#123; [&lt;sub_aggregation&gt;]+ &#125; ]?</span><br><span class="line">    &#125;</span><br><span class="line">    [,"&lt;aggregation_name_2&gt;" : &#123; ... &#125; ]*</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ELASTICSEARCH官方文档笔记&quot;&gt;&lt;a href=&quot;#ELASTICSEARCH官方文档笔记&quot; class=&quot;headerlink&quot; title=&quot;ELASTICSEARCH官方文档笔记&quot;&gt;&lt;/a&gt;ELASTICSEARCH官方文档笔记&lt;/h1&gt;&lt;p&gt;分布
      
    
    </summary>
    
      <category term="elastic" scheme="https://talenhao.github.io/categories/elastic/"/>
    
    
      <category term="elastic,elasticsearch" scheme="https://talenhao.github.io/tags/elastic-elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://talenhao.github.io/2019/08/26/nginx%E5%AE%9E%E8%B7%B5/"/>
    <id>https://talenhao.github.io/2019/08/26/nginx实践/</id>
    <published>2019-08-26T05:48:23.000Z</published>
    <updated>2019-08-26T05:48:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx笔记"><a href="#nginx笔记" class="headerlink" title="nginx笔记"></a>nginx笔记</h1><h2 id="第三章-场景实践篇"><a href="#第三章-场景实践篇" class="headerlink" title="第三章 场景实践篇"></a>第三章 场景实践篇</h2><h3 id="静态web服务"><a href="#静态web服务" class="headerlink" title="静态web服务"></a>静态web服务</h3><h4 id="跨域访问"><a href="#跨域访问" class="headerlink" title="跨域访问"></a>跨域访问</h4><p>服务器允许网站请求其它域名的内容.</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">add_header</span> Access-Control-Allow-Orgin http://example.com;</span><br><span class="line"><span class="attribute">add_header</span> Access-Control-Allow-Methods POST,GET,PUT,DELETE,OPTIONS;</span><br></pre></td></tr></table></figure><h4 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h4><p>nginx支持简单方式</p><ul><li><p>http Referer(<strong>Module ngx_http_referer_module</strong>)</p><ul><li><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">referer_hash_bucket_size</span> <span class="number">64</span>;</span><br><span class="line"><span class="attribute">referer_hash_max_size</span> <span class="number">2048</span>;</span><br><span class="line"><span class="attribute">valid_referers</span> <span class="literal">none</span> | <span class="literal">blocked</span> | server_names | string ...;</span><br><span class="line"><span class="comment"># 匹配为empty string,不匹配为1</span></span><br><span class="line"><span class="comment"># none为空</span></span><br><span class="line"><span class="comment"># blocked是被代理或防火墙删除了http://或https://后剩余的url</span></span><br><span class="line"><span class="comment"># server_names其中之一</span></span><br><span class="line"><span class="comment"># string ... 其它匹配字符串</span></span><br></pre></td></tr></table></figure></li><li><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意:valid_referers and $valid_referer单复数格式</span></span><br><span class="line"><span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> server_names</span><br><span class="line">               <span class="regexp">*.example.com</span> <span class="regexp">example.*</span> www.example.org/galleries/</span><br><span class="line">               ~\.google\.;</span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$valid_referer</span>)&#123;</span><br><span class="line"><span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="代理服务"><a href="#代理服务" class="headerlink" title="代理服务"></a>代理服务</h4><p><code>http</code></p><p><code>https</code></p><p><code>rtmp</code></p><p><code>icmp/pop/smtp</code></p><h5 id="正向代理-客户端"><a href="#正向代理-客户端" class="headerlink" title="正向代理(客户端)"></a>正向代理(客户端)</h5><h5 id="反向代理-服务端"><a href="#反向代理-服务端" class="headerlink" title="反向代理(服务端)"></a>反向代理(服务端)</h5><p>ngx_http_proxy_module</p><table><thead><tr><th align="left">Syntax:</th><th><code>proxy_pass URL;</code>  //http,https,socket</th></tr></thead><tbody><tr><td align="left">Default:</td><td>—</td></tr><tr><td align="left">Context:</td><td><code>location</code>, <code>if in location</code>, <code>limit_except</code></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;nginx笔记&quot;&gt;&lt;a href=&quot;#nginx笔记&quot; class=&quot;headerlink&quot; title=&quot;nginx笔记&quot;&gt;&lt;/a&gt;nginx笔记&lt;/h1&gt;&lt;h2 id=&quot;第三章-场景实践篇&quot;&gt;&lt;a href=&quot;#第三章-场景实践篇&quot; class=&quot;header
      
    
    </summary>
    
      <category term="nginx" scheme="https://talenhao.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://talenhao.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>LINUX常用工具集</title>
    <link href="https://talenhao.github.io/2019/08/23/LINUX%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E9%9B%86/"/>
    <id>https://talenhao.github.io/2019/08/23/LINUX常用工具集/</id>
    <published>2019-08-23T05:57:00.000Z</published>
    <updated>2019-08-23T05:57:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>网络监控:</p><p><strong>NetHogs</strong>是一个开源的命令行工具（类似于Linux的top命令），用来按进程或程序实时统计网络带宽使用率。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;网络监控:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NetHogs&lt;/strong&gt;是一个开源的命令行工具（类似于Linux的top命令），用来按进程或程序实时统计网络带宽使用率。&lt;/p&gt;

      
    
    </summary>
    
      <category term="linux" scheme="https://talenhao.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://talenhao.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>c primer plus 学习笔记</title>
    <link href="https://talenhao.github.io/2019/08/20/c-primer-plus-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://talenhao.github.io/2019/08/20/c-primer-plus-学习笔记/</id>
    <published>2019-08-20T06:48:09.000Z</published>
    <updated>2019-08-20T06:48:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="c-primer-plus-学习笔记"><a href="#c-primer-plus-学习笔记" class="headerlink" title="c primer plus 学习笔记"></a>c primer plus 学习笔记</h1><h2 id="第一章-认识C语言"><a href="#第一章-认识C语言" class="headerlink" title="第一章 认识C语言"></a>第一章 认识C语言</h2><a id="more"></a><h2 id="第二章-C语言概述"><a href="#第二章-C语言概述" class="headerlink" title="第二章 C语言概述"></a>第二章 C语言概述</h2><h3 id="C语言的基本模块"><a href="#C语言的基本模块" class="headerlink" title="C语言的基本模块:"></a>C语言的基本模块:</h3><ul><li>函数<ul><li>形参:变量</li><li>实参:值</li></ul></li></ul><h3 id="C语言重要特性"><a href="#C语言重要特性" class="headerlink" title="C语言重要特性"></a>C语言重要特性</h3><ul><li>转义序列<em>escape sequence</em></li><li>占位符</li></ul><p><img src="/images/1566283720167.png" alt="1566283720167"></p><h3 id="C语言的结构"><a href="#C语言的结构" class="headerlink" title="C语言的结构"></a>C语言的结构</h3><ul><li><p>程序(由多个函数组成)</p><ul><li><p>头文件</p><ul><li><code>#include&lt;stdio.h&gt;</code>包含一个文件,C编译器的预处理指令#(头文件可定义一些常量,函数名,实际代码在另一个库文件中,头文件相当于组织程序)</li></ul></li><li><p><code>/*注释*/</code> <code>//注释</code></p></li><li><p>分号结尾;</p></li><li><p>函数</p><ul><li><p>函数头 <code>int main(void)</code>int返回类型,main是主函数,void表示空参数</p><ul><li>返回类型</li><li>函数名</li><li>形式参数</li></ul></li><li><p>函数体</p><ul><li><p>声明 <code>int num;</code>变量(<em>variable</em>)标识符(<em>identifer</em>)声明(<em>declaration</em>) -&gt;mem位置,数据类型</p><ul><li><p>关键字</p><p><img src="/images/1566369369759.png" alt="1566369369759"></p></li><li><p>变量名: </p><ul><li>C99/C11变量标识符最长63个字符,外部标识符最长31个字符</li><li>大小写字母,数字,_,不能以数字开头</li><li>所有变量必须先声明才能使用</li></ul></li></ul></li><li><p>语句</p><ul><li>跳转语句<ul><li>赋值表达式(存储值到内存空间)</li><li>return语句 返回值</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="第三章-数据和C"><a href="#第三章-数据和C" class="headerlink" title="第三章 数据和C"></a>第三章 数据和C</h2><h3 id="数据-承载信息的数字和符号"><a href="#数据-承载信息的数字和符号" class="headerlink" title="数据 承载信息的数字和符号"></a>数据 <code>承载信息的数字和符号</code></h3><ul><li>常量<em>constant</em><ul><li>程序运行过程中不改变;</li><li>编译器根据书写形态自动判断数据类型</li></ul></li><li>变量<em>variable</em><ul><li>可变或被赋值</li><li>声明时需要指定类型</li></ul></li></ul><h3 id="基本类型关键字"><a href="#基本类型关键字" class="headerlink" title="基本类型关键字:"></a>基本类型关键字:</h3><p><img src="/images/1566380575708.png" alt="1566380575708"></p><p>数据类型按存储方式分两大数据类型: 浮点数范围&gt;整数</p><ul><li><p>整数类型<code>没有小数位的数</code></p><ul><li><pre class="mermaid">    graph TBchar(char: '4', 'ABC')-->encode(encode:ASCII,EBCDIC,CJK字符集,Unicode,UTF-8...)encode-->intint-->进制(进制:16,8,2..)进制-->bit</pre></li><li><p>int</p></li><li><p>char</p></li><li><p>_Bool<code>1 bit. 1为true,0为false</code></p></li></ul></li><li><p>浮点数类型<code>类似实数</code> 分两部分存储 7.0=0.7E1</p><ul><li>指数部分1</li><li>小数部分0.7</li><li>任何区间实数无穷多,计算机无法存储所有值,只存储近似值,会损失精度</li></ul></li></ul><p>字节byte=8bit</p><p>字:计算机寻址单位</p><table><thead><tr><th>整数类型</th><th>占位长度</th></tr></thead><tbody><tr><td>short</td><td>16bit</td></tr><tr><td>int</td><td>16bit/32bit</td></tr><tr><td>long</td><td>32bit</td></tr><tr><td>long long</td><td>64bit</td></tr></tbody></table><p>程序中超出最大值会重新开始计算,类似汽车里程表</p><h3 id="C语言数据类型-分配合适内存空间"><a href="#C语言数据类型-分配合适内存空间" class="headerlink" title="C语言数据类型(分配合适内存空间)"></a>C语言数据类型(分配合适内存空间)</h3><p><img src="/images/1566381311465.png" alt="1566381311465"></p><p><img src="/images/1566383417472.png" alt="1566383417472"></p><p>scanf(“%f”, &amp;indentifer)将输入的值赋值给标识符indentifer</p><p>&amp; 找到指定变量标识符的地址</p><p>printf中转换说明决定了数据的显示方式,而不是存储方式.</p><h4 id="char"><a href="#char" class="headerlink" title="char"></a>char</h4><ul><li>字符常量:使用‘ ’引起来表示字符,编译器会识别并根据编码转换成整数值;<code>也可以直接把编码赋值给变量标记符</code><ul><li>不带引号是变量标识符</li><li>“ ”表示字符串</li><li>转义序列</li></ul></li></ul><h2 id="第四章-字符串和格式化输入-输出-数据表示"><a href="#第四章-字符串和格式化输入-输出-数据表示" class="headerlink" title="第四章 字符串和格式化输入/输出(数据表示)"></a>第四章 字符串和格式化输入/输出(数据表示)</h2><p>数组<em>array</em>存储字符串,占用连续的字节空间.</p><h3 id="4-2字符串-字符序列-双引号"><a href="#4-2字符串-字符序列-双引号" class="headerlink" title="4.2字符串(字符序列)(双引号)"></a>4.2字符串(字符序列)(双引号)</h3><p>存储:</p><p><code>char</code>类型的<code>array</code>中</p><p><img src="/images/1566479127445.png" alt="1566479127445"></p><p>数组:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> id[<span class="number">40</span>] <span class="comment">//40字节空间的char类型array</span></span><br></pre></td></tr></table></figure><p>sizeof():<code>以字节为单位给出对象大小</code></p><p>strlen():<code>计算字符串的字符长度</code></p><h3 id="4-3常量和C预处理器"><a href="#4-3常量和C预处理器" class="headerlink" title="4.3常量和C预处理器"></a>4.3常量和C预处理器</h3><p>符号常量<em>symbolic constant</em>(编译时替换compile-time subsitution=明示常量manifest constant)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NAME value <span class="comment">// 一般大写或c_/k_开头</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi 3.1415926</span></span><br></pre></td></tr></table></figure><p>const限定符,表示变量为只读</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NAME = value; <span class="comment">//NAME不可更改, 用起来比define灵活</span></span><br></pre></td></tr></table></figure><p>printf()/scanf() <code>I/O函数</code></p><p>使用转换说明符(<em>conversion specification</em>)转换成可显示的形式.</p><p><img src="/images/1566480422167.png" alt="1566480422167"></p><h2 id="第五章-运算符-表达式expression和语句statement-数据处理"><a href="#第五章-运算符-表达式expression和语句statement-数据处理" class="headerlink" title="第五章 运算符,表达式expression和语句statement(数据处理)"></a>第五章 运算符,表达式expression和语句statement(数据处理)</h2><p>数据处理:</p><ul><li>算术运算</li><li>数值比较</li><li>修改变量</li><li>逻辑组合关系</li></ul><p>大多语句由表达式构成;表达式可能包含子表达式;</p><p>一条语句是一条完整的计算机指令.带(;)号</p><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(condition)&#123;</span><br><span class="line">  block</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h3><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符="></a>赋值运算符=</h4><ul><li><code>使用赋值的思想才能解释 i = i + 1</code></li><li>对象定位值(可修改的左值)variable = value</li><li>目的:把值(数据对象)存储到内存位置上</li></ul><h4 id="加法运算符"><a href="#加法运算符" class="headerlink" title="加法运算符+"></a>加法运算符+</h4><ul><li>二元运算符<code>需要两个运算对象</code></li><li>一元运算符<code>正号+</code></li></ul><h4 id="减法运算符"><a href="#减法运算符" class="headerlink" title="减法运算符-"></a>减法运算符-</h4><ul><li>二元运算符`需要两个运算对象</li><li>一元运算符<code>负号-</code></li></ul><h3 id="乘法运算符"><a href="#乘法运算符" class="headerlink" title="乘法运算符*"></a>乘法运算符*</h3><h3 id="除法运算符"><a href="#除法运算符" class="headerlink" title="除法运算符/"></a>除法运算符/</h3><p>截断:整数除法的小数位被丢弃</p><p>C99使用趋零截断,-3.8转换成-3</p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src="/images/1566546550631.png" alt="1566546550631"></p><h3 id="其它运算符"><a href="#其它运算符" class="headerlink" title="其它运算符"></a>其它运算符</h3><p><strong>sizeof(type/variable) 返回size_t(无符号整数类型)类型的值</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> real; <span class="comment">//typedef 为double创建别名real</span></span><br></pre></td></tr></table></figure><p><strong>求模运算符 %</strong> <code>常用于根据求模结果是否为0控制流程</code></p><p>​    负数使用趋零截断,以每个对象的符号为正负取结果为正负</p><p><strong>递增运算符++/递减运算符 - -</strong></p><p>前后辍只有自身没有运算符或赋值运算符时结果都是一样的,但复合运算时会影响结果.</p><ul><li><p>前辍模式: </p><ul><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a_post = <span class="number">2</span> * a++ <span class="comment">// a_post = 2a, a = a + 1</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>后辍模式:</p><ul><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pre_b = <span class="number">2</span> * ++b <span class="comment">// b = b + 1, pre_b = 2b</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="/images/1566554717693.png" alt="1566554717693"></p><h2 id="第六章-C控制语句-循环-嵌套循环"><a href="#第六章-C控制语句-循环-嵌套循环" class="headerlink" title="第六章 C控制语句:循环,嵌套循环"></a>第六章 C控制语句:循环,嵌套循环</h2><p>程序流:</p><ol><li>语句序列</li><li>循环</li><li>分支</li></ol><p>三种循环:(入口循环:for/while;出口循环:do while)</p><ul><li><p>for</p><ul><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(initialize；test；update)&#123; <span class="comment">//使用分号分割,支持使用逗号一次处理多个变量</span></span><br><span class="line">  statement</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><pre class="mermaid">    graph TBinit-->testtest-->成功成功-->for_bodytest-->失败失败-->updateupdate-->test</pre></li><li></li></ul></li><li><p>while</p><ul><li><p>每次迭代都会调用判断循环条件</p></li><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">expression<span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">while</span> (entry condition)<span class="comment">//测试</span></span><br><span class="line">&#123;</span><br><span class="line">  statement(简单/&#123;复合&#125;)</span><br><span class="line">  expression<span class="comment">//更新</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>第一次循环称为一次迭代</p></li></ul></li><li><p>do while</p><ul><li><p>当while循环前需要执行循环体的逻辑时,出口循环可以更简洁.</p></li><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">  statement</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (expression);</span><br></pre></td></tr></table></figure></li><li></li></ul></li></ul><p>condition:</p><ul><li>非0为真</li><li>0为假</li></ul><h4 id="赋值运算符-1"><a href="#赋值运算符-1" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p><code>=,+=,-=,*=,/=,%=</code></p><h4 id="数组array-列表list"><a href="#数组array-列表list" class="headerlink" title="数组array/列表list"></a>数组array/列表list</h4><p>C编译器不检查数组索引的合理性,可能会将赋值超过索引的值存储在其它位置,可能破坏其它数据并导致程序出错.</p><p>数组可以使用下标subscript,索引indice,偏移量offset表示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> ary[<span class="number">15</span>];声明数组,含有<span class="number">15</span>个<span class="keyword">float</span>元素</span><br></pre></td></tr></table></figure><h2 id="第九章-函数"><a href="#第九章-函数" class="headerlink" title="第九章 函数"></a>第九章 函数</h2><p>函数声明(函数原型funcation prototype)-&gt;函数定义</p><p>函数的返回值类型若与声明函数的类型不一致将转换成声明类型</p><pre class="mermaid">sequenceDiagramparticipant main as 主调函数participant call as 被调函数opt 驱动程序main->>call:实参endopt 栈stackmain->>main:参数main->>call:被调函数从stack中读取参数值endcall-->>call:形参call-->>main:return</pre><h3 id="递归recursion"><a href="#递归recursion" class="headerlink" title="递归recursion"></a>递归recursion</h3><p>函数调用自身,关键点是终止条件.</p><p>可以循环的一般都可以递归.</p><p>递归简洁,循环效高.</p><ul><li>每次递归都创建新的变量(放入栈中)和作用域,占用更多的内存</li><li>每次递归都调用函数,初始化需要一定时间成本</li></ul><p><strong>递归要点:</strong></p><ol><li>每级函数调用都有自己的变量作用域.</li><li>每级函数调用到终止条件后逐级return.(套娃)</li><li>终止条件前的依次顺序执行,后面的逆序执行.</li><li>必须要终止条件</li><li>适用倒序计算(如计算一个整数的二进制)</li></ol><p><strong>尾递归</strong>:<code>将递归调用放置在return前,相当于一个循环</code></p><h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><p>指针(pointer)用于存储变量的地址</p><p>一元&amp;地址运算符给出变量的存储地址,var是变量,&amp;var是变量var在内存的地址.printf 使用%p打印16进制地址</p><p><em>*</em>间接运算符,找出存储在指针上的值</p><p>使用指针可以改变主调函数的值.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> * pointer <span class="comment">//声明指针的类型</span></span><br></pre></td></tr></table></figure><p><img src="../../../../images/1569241425447.png" alt="1569241425447"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;c-primer-plus-学习笔记&quot;&gt;&lt;a href=&quot;#c-primer-plus-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;c primer plus 学习笔记&quot;&gt;&lt;/a&gt;c primer plus 学习笔记&lt;/h1&gt;&lt;h2 id=&quot;第一章-认识C语言&quot;&gt;&lt;a href=&quot;#第一章-认识C语言&quot; class=&quot;headerlink&quot; title=&quot;第一章 认识C语言&quot;&gt;&lt;/a&gt;第一章 认识C语言&lt;/h2&gt;
    
    </summary>
    
      <category term="c" scheme="https://talenhao.github.io/categories/c/"/>
    
    
      <category term="c" scheme="https://talenhao.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>centos 7 关闭笔记本合盖挂起功能</title>
    <link href="https://talenhao.github.io/2019/08/13/centos-7-%E5%85%B3%E9%97%AD%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%90%88%E7%9B%96%E6%8C%82%E8%B5%B7%E5%8A%9F%E8%83%BD/"/>
    <id>https://talenhao.github.io/2019/08/13/centos-7-关闭笔记本合盖挂起功能/</id>
    <published>2019-08-13T12:22:34.000Z</published>
    <updated>2019-08-13T12:22:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>centos 7 关闭笔记本合盖挂起功能<br>家里有一台dell的老笔记本，安装了centos7系统使用。<br>默认系统配置把笔记本电脑屏合上后会造成挂起，网络断开。笔记本不能合盖，放置占位，也会造成灰尘进入键盘等总之不是很方便。<br>systemd可以处理ACPI事件，这个默认配置可以通过修改systemd-logind.service的行为修改。</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@server ~]# vi /etc/systemd/logind.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">  This file is part of systemd.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">  systemd is free software; you can redistribute it and/or modify it</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  under the terms of the GNU Lesser General Public License as published by</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  the Free Software Foundation; either version 2.1 of the License, or</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  (at your option) any later version.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Entries <span class="keyword">in</span> this file show the compile time defaults.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You can change settings by editing this file.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Defaults can be restored by simply deleting this file.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See logind.conf(5) <span class="keyword">for</span> details.</span></span><br><span class="line"></span><br><span class="line">[Login]</span><br><span class="line"><span class="meta">#</span><span class="bash">NAutoVTs=6</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ReserveVT=6</span></span><br><span class="line"><span class="meta">#</span><span class="bash">KillUserProcesses=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">KillOnlyUsers=</span></span><br><span class="line"><span class="meta">#</span><span class="bash">KillExcludeUsers=root</span></span><br><span class="line"><span class="meta">#</span><span class="bash">InhibitDelayMaxSec=5</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HandlePowerKey=poweroff</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HandleSuspendKey=<span class="built_in">suspend</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">HandleHibernateKey=hibernate</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HandleLidSwitch=<span class="built_in">suspend</span></span></span><br><span class="line">HandleLidSwitch=ignore              #这个合盖操作修改为ignore，合盖时不做任务操作。</span><br><span class="line"><span class="meta">#</span><span class="bash">HandleLidSwitchDocked=ignore</span></span><br><span class="line"><span class="meta">#</span><span class="bash">PowerKeyIgnoreInhibited=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">SuspendKeyIgnoreInhibited=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">HibernateKeyIgnoreInhibited=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">LidSwitchIgnoreInhibited=yes</span></span><br><span class="line"><span class="meta">#</span><span class="bash">IdleAction=ignore</span></span><br><span class="line"><span class="meta">#</span><span class="bash">IdleActionSec=30min</span></span><br><span class="line"><span class="meta">#</span><span class="bash">RuntimeDirectorySize=10%</span></span><br><span class="line"><span class="meta">#</span><span class="bash">RemoveIPC=no</span></span><br><span class="line"><span class="meta">#</span><span class="bash">UserTasksMax=</span></span><br></pre></td></tr></table></figure><p>行为可以是 ignore、poweroff、reboot、halt、suspend、hibernate、hybrid-sleep、lock 或 kexec。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@server ~]# systemctl list-units |grep logind</span><br><span class="line">systemd-logind.service    loaded active running   Login Service</span><br><span class="line">[root@server ~]# systemctl restart systemd-logind</span><br></pre></td></tr></table></figure><p>重启服务后合上笔记本，网络不受影响。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@server ~]# ping 192.168.3.1</span><br><span class="line">PING 192.168.3.1 (192.168.3.1) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.3.1: icmp_seq=1 ttl=64 time=0.557 ms</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;centos 7 关闭笔记本合盖挂起功能&lt;br&gt;家里有一台dell的老笔记本，安装了centos7系统使用。&lt;br&gt;默认系统配置把笔记本电脑屏合上后会造成挂起，网络断开。笔记本不能合盖，放置占位，也会造成灰尘进入键盘等总之不是很方便。&lt;br&gt;systemd可以处理ACPI事件，这个默认配置可以通过修改systemd-logind.service的行为修改。&lt;/p&gt;
    
    </summary>
    
      <category term="centos" scheme="https://talenhao.github.io/categories/centos/"/>
    
    
      <category term="centos" scheme="https://talenhao.github.io/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>git study</title>
    <link href="https://talenhao.github.io/2019/08/12/git-study/"/>
    <id>https://talenhao.github.io/2019/08/12/git-study/</id>
    <published>2019-08-12T06:49:17.000Z</published>
    <updated>2019-08-12T06:49:17.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git-study"><a href="#git-study" class="headerlink" title="git study"></a>git study</h1><p> Git 对待数据的方法:</p><ol><li><p>Git 对待数据更像是一个快照流,没有更改的直接保留一个链接到原来的文件</p><p>subversion存储每个版本与初始文件的差异</p></li><li><p>git近乎所有操作都在本地执行,所以速度很快.其它CCVS离线后基本做不了什么</p></li><li><p>git存储sha-1校验和( 40 个十六进制字符),并以此做索引引用.</p></li></ol><h2 id="GIT三种状态"><a href="#GIT三种状态" class="headerlink" title="GIT三种状态"></a>GIT三种状态</h2><ol><li>已修改 modified    -&gt; 工作目录</li><li>已暂存 staged(版本标记)  -&gt; 暂存区</li><li>已提交 commited(存储到数据库) -&gt; 仓库</li></ol><p><img src="/images/1565675036087.png" alt="1565675036087"></p><a id="more"></a><h2 id="GIT三个工作区"><a href="#GIT三个工作区" class="headerlink" title="GIT三个工作区"></a>GIT三个工作区</h2><p>工作目录,暂存区,仓库</p><h2 id="GIT安装"><a href="#GIT安装" class="headerlink" title="GIT安装"></a>GIT安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Mon Aug 12 talen@tp-arch-tianfei ~]$ sudo pacman -S git</span><br></pre></td></tr></table></figure><h2 id="GIT-配置"><a href="#GIT-配置" class="headerlink" title="GIT 配置"></a>GIT 配置</h2><h3 id="配置路径"><a href="#配置路径" class="headerlink" title="配置路径"></a>配置路径</h3><p>git config 有三个配置文件路径</p><p>系统配置/etc/gitconfig </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --system</span><br></pre></td></tr></table></figure><p>当前用户配置 ~/.gitconfig 或 ~/config/git/config</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global</span><br></pre></td></tr></table></figure><p>当前仓库配置 .git/config</p><h3 id="配置用户信息"><a href="#配置用户信息" class="headerlink" title="配置用户信息"></a>配置用户信息</h3><p>如要配置当前用户或系统层配置,添加–global或–system参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config  user.name <span class="string">"Tianfei hao"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config  user.email haotianfei@example.com</span></span><br></pre></td></tr></table></figure><h3 id="检查配置"><a href="#检查配置" class="headerlink" title="检查配置"></a>检查配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --list</span></span><br></pre></td></tr></table></figure><h2 id="GIT基础"><a href="#GIT基础" class="headerlink" title="GIT基础"></a>GIT基础</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add</span><br><span class="line">git rm 删除工作区的文件</span><br><span class="line">--cached只删除staged中的文件</span><br><span class="line">--force适用于已经删除工作区文件,但已经提交到staged中的文件</span><br><span class="line">git mv 重命名文件</span><br><span class="line">git commit</span><br><span class="line">-a //跳过add,将staged的文件暂存一并提交</span><br><span class="line">--amend</span><br><span class="line">git clone</span><br><span class="line">git status</span><br><span class="line">git diff // modified与staged对比</span><br><span class="line">git diff --cached/--staged //staged与commited对比</span><br><span class="line">git log</span><br><span class="line">-p 显示diff</span><br><span class="line">-数字 显示最近几次的提交</span><br><span class="line">--stat 每一次提交的统计信息</span><br></pre></td></tr></table></figure><h3 id="gitignore-文件忽略跟踪"><a href="#gitignore-文件忽略跟踪" class="headerlink" title=".gitignore 文件忽略跟踪"></a>.gitignore 文件忽略跟踪</h3><ol><li>空行,#开头会被忽略</li><li>使用标准glob模式匹配( shell 所使用的简化了的正则表达式)<ol><li>* 匹配任意字符</li><li>[abc] 方括号内任意字符</li><li>? 单个任意字符</li><li>[0-9] 范围</li><li>a/**/z 中间任意目录</li></ol></li><li>使用/开头防止递归,/结尾表示目录</li><li>!表示取反</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;git-study&quot;&gt;&lt;a href=&quot;#git-study&quot; class=&quot;headerlink&quot; title=&quot;git study&quot;&gt;&lt;/a&gt;git study&lt;/h1&gt;&lt;p&gt; Git 对待数据的方法:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Git 对待数据更像是一个快照流,没有更改的直接保留一个链接到原来的文件&lt;/p&gt;
&lt;p&gt;subversion存储每个版本与初始文件的差异&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git近乎所有操作都在本地执行,所以速度很快.其它CCVS离线后基本做不了什么&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git存储sha-1校验和( 40 个十六进制字符),并以此做索引引用.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;GIT三种状态&quot;&gt;&lt;a href=&quot;#GIT三种状态&quot; class=&quot;headerlink&quot; title=&quot;GIT三种状态&quot;&gt;&lt;/a&gt;GIT三种状态&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;已修改 modified    -&amp;gt; 工作目录&lt;/li&gt;
&lt;li&gt;已暂存 staged(版本标记)  -&amp;gt; 暂存区&lt;/li&gt;
&lt;li&gt;已提交 commited(存储到数据库) -&amp;gt; 仓库&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/images/1565675036087.png&quot; alt=&quot;1565675036087&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://talenhao.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://talenhao.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>arch linux pacman清理</title>
    <link href="https://talenhao.github.io/2019/08/06/arch-linux-pacman%E6%B8%85%E7%90%86/"/>
    <id>https://talenhao.github.io/2019/08/06/arch-linux-pacman清理/</id>
    <published>2019-08-06T09:37:36.000Z</published>
    <updated>2019-08-06T09:37:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pacman"><a href="#pacman" class="headerlink" title="pacman"></a>pacman</h1><p>清理已经安装的包缓存文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pacman -Scc</span><br><span class="line"></span><br><span class="line">[Tue Aug 06 talen@tp-arch-tianfei pkg]$ sudo pacman -Scc</span><br><span class="line">[sudo] password for talen:</span><br><span class="line">Cache directory: /var/cache/pacman/pkg/</span><br><span class="line">:: Do you want to remove ALL files from cache? [y/N] y</span><br><span class="line">removing all files from cache...</span><br><span class="line">Database directory: /var/lib/pacman/</span><br><span class="line">:: Do you want to remove unused repositories? [Y/n] y</span><br><span class="line">removing unused sync repositories...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;pacman&quot;&gt;&lt;a href=&quot;#pacman&quot; class=&quot;headerlink&quot; title=&quot;pacman&quot;&gt;&lt;/a&gt;pacman&lt;/h1&gt;&lt;p&gt;清理已经安装的包缓存文件&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;tabl
      
    
    </summary>
    
      <category term="arch" scheme="https://talenhao.github.io/categories/arch/"/>
    
    
      <category term="arch" scheme="https://talenhao.github.io/tags/arch/"/>
    
      <category term="pacman" scheme="https://talenhao.github.io/tags/pacman/"/>
    
  </entry>
  
  <entry>
    <title>linux终端中文显示问题修复</title>
    <link href="https://talenhao.github.io/2019/08/05/linux%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/"/>
    <id>https://talenhao.github.io/2019/08/05/linux终端中文显示问题修复/</id>
    <published>2019-08-05T02:32:58.000Z</published>
    <updated>2019-08-05T02:32:58.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[talen@tp-arch-tianfei nginx]$ ls</span><br><span class="line">'Mastering Nginx.pdf'</span><br><span class="line">'Nginx 1 Web Server Implementation Cookbook.pdf'</span><br><span class="line">'Nginx Essentials.pdf'</span><br><span class="line">'Nginx From Beginner to Pro.pdf'</span><br><span class="line">'Nginx HTTP Server, Third Edition.pdf'</span><br><span class="line">'Nginx Module Extension.pdf'</span><br><span class="line">'Nginx'$'\346\225\231\347\250\213\344\273\216\345\205\245\351\227\250\345\210\260\347\262\276\351\200\232''('$'\350\277\220\347\273\264\347\224\237\345\255\230\346\227\266\351\227\264''TTLSA'$'\345\207\272\345\223\201'').pdf'</span><br><span class="line"> nginx</span><br><span class="line"> nginx-kernel.txt</span><br><span class="line"> nginx-pdf</span><br><span class="line"> nginx.conf.info</span><br><span class="line"> nginx.dot</span><br><span class="line">'nginx: See Active connections _ Connections Per Seconds.html'</span><br><span class="line"> nginx__try_files</span><br><span class="line"> nginx_architecture.png</span><br><span class="line"> nginx_conf.dot</span><br><span class="line"> nginx_setup.dot</span><br><span class="line">'nginx'$'\347\254\254\344\270\211\346\226\271\346\250\241\345\235\227''.txt'</span><br><span class="line">'nginx'$'\347\274\226\350\257\221\345\217\202\346\225\260''.txt'</span><br><span class="line">''$'\345\206\263\346\210\230''Nginx'$'\357\274\232'' '$'\347\263\273\347\273\237\345\215\267'' - '$'\351\253\230\346\200\247\350\203\275''Web'$'\346\234\215\345\212\241\345\231\250\350\257\246\350\247\243\344\270\216\350\277\220\347\273\264''(jb51.net).pdf'</span><br><span class="line">''$'\345\256\236\346\210\230''Nginx_'$'\345\217\226\344\273\243''Apache'$'\347\232\204\351\253\230\346\200\247\350\203\275''Web'$'\346\234\215\345\212\241\345\231\250''.'$'\345\274\240\345\256\264''.'$'\346\211\253\346\217\217\347\211\210''.pdf'</span><br><span class="line">''$'\345\256\236\346\210\230''nginx'</span><br><span class="line">''$'\346\267\261\345\205\245\345\211\226\346\236\220''Nginx.pdf'</span><br><span class="line">''$'\346\267\261\345\205\245\347\220\206\350\247\243''Nginx'$'\346\250\241\345\235\227\345\274\200\345\217\221\344\270\216\346\236\266\346\236\204\350\247\243\346\236\220''.pdf'</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">[talen@tp-arch-tianfei nginx]$ locale</span><br><span class="line">LANG=C</span><br><span class="line">LC_CTYPE="C"</span><br><span class="line">LC_NUMERIC="C"</span><br><span class="line">LC_TIME="C"</span><br><span class="line">LC_COLLATE="C"</span><br><span class="line">LC_MONETARY="C"</span><br><span class="line">LC_MESSAGES="C"</span><br><span class="line">LC_PAPER="C"</span><br><span class="line">LC_NAME="C"</span><br><span class="line">LC_ADDRESS="C"</span><br><span class="line">LC_TELEPHONE="C"</span><br><span class="line">LC_MEASUREMENT="C"</span><br><span class="line">LC_IDENTIFICATION="C"</span><br><span class="line">LC_ALL=</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ locale -a</span><br><span class="line">C</span><br><span class="line">POSIX</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[talen@tp-arch-tianfei nginx]$ sudo vim /etc/locale.gen</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ cat /etc/locale.gen  |grep -v '#'</span><br><span class="line">en_US.UTF-8 UTF-8  </span><br><span class="line">zh_CN.GBK GBK  </span><br><span class="line">zh_CN.UTF-8 UTF-8  </span><br><span class="line">[talen@tp-arch-tianfei nginx]$ sudo locale-gen </span><br><span class="line">Generating locales...</span><br><span class="line">  en_US.UTF-8... done</span><br><span class="line">  zh_CN.GBK... done</span><br><span class="line">  zh_CN.UTF-8... done</span><br><span class="line">Generation complete.</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ locale -a</span><br><span class="line">C</span><br><span class="line">POSIX</span><br><span class="line">en_US.utf8</span><br><span class="line">zh_CN.gbk</span><br><span class="line">zh_CN.utf8</span><br><span class="line"></span><br><span class="line">[talen@tp-arch-tianfei nginx]$ sudo localectl set-locale LANG=en_US.UTF-8</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ locale &gt; ~/.config/locale.conf</span><br><span class="line">[talen@tp-arch-tianfei nginx]$ sed -i 's/=.*/="en_US.UTF-8"/' ~/.config/locale.conf </span><br><span class="line">[talen@tp-arch-tianfei ~]$ locale</span><br><span class="line">LANG=C</span><br><span class="line">LC_CTYPE="C"</span><br><span class="line">LC_NUMERIC="C"</span><br><span class="line">LC_TIME="C"</span><br><span class="line">LC_COLLATE="C"</span><br><span class="line">LC_MONETARY="C"</span><br><span class="line">LC_MESSAGES="C"</span><br><span class="line">LC_PAPER="C"</span><br><span class="line">LC_NAME="C"</span><br><span class="line">LC_ADDRESS="C"</span><br><span class="line">LC_TELEPHONE="C"</span><br><span class="line">LC_MEASUREMENT="C"</span><br><span class="line">LC_IDENTIFICATION="C"</span><br><span class="line">LC_ALL=</span><br><span class="line">[talen@tp-arch-tianfei ~]$ LANG= source /etc/profile.d/locale.sh</span><br><span class="line">[talen@tp-arch-tianfei ~]$ locale</span><br><span class="line">LANG=C</span><br><span class="line">LC_CTYPE=en_US.UTF-8</span><br><span class="line">LC_NUMERIC=en_US.UTF-8</span><br><span class="line">LC_TIME=en_US.UTF-8</span><br><span class="line">LC_COLLATE=en_US.UTF-8</span><br><span class="line">LC_MONETARY=en_US.UTF-8</span><br><span class="line">LC_MESSAGES=en_US.UTF-8</span><br><span class="line">LC_PAPER=en_US.UTF-8</span><br><span class="line">LC_NAME=en_US.UTF-8</span><br><span class="line">LC_ADDRESS=en_US.UTF-8</span><br><span class="line">LC_TELEPHONE=en_US.UTF-8</span><br><span class="line">LC_MEASUREMENT=en_US.UTF-8</span><br><span class="line">LC_IDENTIFICATION=en_US.UTF-8</span><br><span class="line">LC_ALL=</span><br><span class="line"></span><br><span class="line">[talen@tp-arch-tianfei t.web]$ ls</span><br><span class="line"> apache                             http401认证请求.png  'http method1.png'   http常见状态码.png   http状态码.png                 tomcat</span><br><span class="line"> apache整合tomcat多实例多网站.png   httpbase64.png       'http method.png'    http报文.png         http盲中继keep-alive挂起问题   代理与网关区别</span><br><span class="line"> http401认证请求                    httpbase65.png        http常用方法.png    http报文内容         nginx                          基本web服务器请求步骤</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[talen@tp-arch-tianfei nginx]$ ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Mastering Nginx.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx 1 Web Server Implementation Cookbook.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx Essentials.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx From Beginner to Pro.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx HTTP Server, Third Edition.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx Module Extension.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;Nginx&#39;$&#39;\346\225\231\347\250\213\344\273\216\345\205\245\351\227\250\345\210\260\347\262\276\351\200\232&#39;&#39;(&#39;$&#39;\350\277\220\347\273\264\347\224\237\345\255\230\346\227\266\351\227\264&#39;&#39;TTLSA&#39;$&#39;\345\207\272\345\223\201&#39;&#39;).pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx-kernel.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx-pdf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx.conf.info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx.dot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;nginx: See Active connections _ Connections Per Seconds.html&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx__try_files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx_architecture.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx_conf.dot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; nginx_setup.dot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;nginx&#39;$&#39;\347\254\254\344\270\211\346\226\271\346\250\241\345\235\227&#39;&#39;.txt&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;nginx&#39;$&#39;\347\274\226\350\257\221\345\217\202\346\225\260&#39;&#39;.txt&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\345\206\263\346\210\230&#39;&#39;Nginx&#39;$&#39;\357\274\232&#39;&#39; &#39;$&#39;\347\263\273\347\273\237\345\215\267&#39;&#39; - &#39;$&#39;\351\253\230\346\200\247\350\203\275&#39;&#39;Web&#39;$&#39;\346\234\215\345\212\241\345\231\250\350\257\246\350\247\243\344\270\216\350\277\220\347\273\264&#39;&#39;(jb51.net).pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\345\256\236\346\210\230&#39;&#39;Nginx_&#39;$&#39;\345\217\226\344\273\243&#39;&#39;Apache&#39;$&#39;\347\232\204\351\253\230\346\200\247\350\203\275&#39;&#39;Web&#39;$&#39;\346\234\215\345\212\241\345\231\250&#39;&#39;.&#39;$&#39;\345\274\240\345\256\264&#39;&#39;.&#39;$&#39;\346\211\253\346\217\217\347\211\210&#39;&#39;.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\345\256\236\346\210\230&#39;&#39;nginx&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\346\267\261\345\205\245\345\211\226\346\236\220&#39;&#39;Nginx.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;$&#39;\346\267\261\345\205\245\347\220\206\350\247\243&#39;&#39;Nginx&#39;$&#39;\346\250\241\345\235\227\345\274\200\345\217\221\344\270\216\346\236\266\346\236\204\350\247\243\346\236\220&#39;&#39;.pdf&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="https://talenhao.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://talenhao.github.io/tags/linux/"/>
    
      <category term="terminal" scheme="https://talenhao.github.io/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>react study</title>
    <link href="https://talenhao.github.io/2019/08/01/react-study/"/>
    <id>https://talenhao.github.io/2019/08/01/react-study/</id>
    <published>2019-08-01T09:00:31.000Z</published>
    <updated>2019-08-01T09:00:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React学习笔记"><a href="#React学习笔记" class="headerlink" title="React学习笔记"></a>React学习笔记</h1><pre class="mermaid">graph TBJavaScript-->JavaScript_runtimeJavaScript_runtime-->Node.jsJavaScript-->v8v8(Google Chrome V8 引擎)-->Node.jsNode.js-->webpack(npm package 管理器)webpack(webpack 打包器)-->npmJSX-->babel(babel编译器)npm-->create-react-app(create-react-app官方脚手架)create-react-app-->React(React framework)React_component(React 组件化三大基本要素)babel-->React_component(React)render-->React_componentReact_component-->ReactReact-->vdom(虚拟DOM)React-->diff(DIFF算法)out_data(外部数据)-->this.propsthis.props-->render(render方法)bindin(内部数据)-->this.statethis.state-->renderadd-dom(步骤 1 添加一个 DOM 容器到 HTML)-->script-tag(步骤 2 添加 Script 标签)script-tag-->create_react(步骤 3创建一个 React 组件)</pre><p>面向数据编程</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><a id="more"></a><ol><li>… 展开运算符</li></ol><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><ul><li>父组件通过属性向子组件传递参数</li><li>子组件通过this.props接收父组件传递过来的参数值</li><li>子组件如想和父组件通信,需要调用父组件传递过来的方法</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloMessage</span> <span class="keyword">extends</span> <span class="title">Reacts</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">    render()&#123;</span><br><span class="line">        <span class="keyword">return</span>(</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            hello, &#123;<span class="keyword">this</span>.props.name&#125;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;React学习笔记&quot;&gt;&lt;a href=&quot;#React学习笔记&quot; class=&quot;headerlink&quot; title=&quot;React学习笔记&quot;&gt;&lt;/a&gt;React学习笔记&lt;/h1&gt;&lt;pre class=&quot;mermaid&quot;&gt;graph TB
JavaScript--&gt;JavaScript_runtime
JavaScript_runtime--&gt;Node.js
JavaScript--&gt;v8
v8(Google Chrome V8 引擎)--&gt;Node.js
Node.js--&gt;webpack(npm package 管理器)
webpack(webpack 打包器)--&gt;npm
JSX--&gt;babel(babel编译器)
npm--&gt;create-react-app(create-react-app官方脚手架)
create-react-app--&gt;React(React framework)
React_component(React 组件化三大基本要素)
babel--&gt;React_component(React)
render--&gt;React_component
React_component--&gt;React
React--&gt;vdom(虚拟DOM)
React--&gt;diff(DIFF算法)

out_data(外部数据)--&gt;this.props
this.props--&gt;render(render方法)
bindin(内部数据)--&gt;this.state
this.state--&gt;render

add-dom(步骤 1 添加一个 DOM 容器到 HTML)--&gt;script-tag(步骤 2 添加 Script 标签)
script-tag--&gt;create_react(步骤 3创建一个 React 组件)&lt;/pre&gt;

&lt;p&gt;面向数据编程&lt;/p&gt;
&lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;
    
    </summary>
    
      <category term="react" scheme="https://talenhao.github.io/categories/react/"/>
    
      <category term="front-end" scheme="https://talenhao.github.io/categories/react/front-end/"/>
    
    
      <category term="react" scheme="https://talenhao.github.io/tags/react/"/>
    
      <category term="front-end" scheme="https://talenhao.github.io/tags/front-end/"/>
    
  </entry>
  
  <entry>
    <title>Python errors</title>
    <link href="https://talenhao.github.io/2019/07/31/Python-errors/"/>
    <id>https://talenhao.github.io/2019/07/31/Python-errors/</id>
    <published>2019-07-31T09:32:01.000Z</published>
    <updated>2019-07-31T09:32:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-Errors-原因"><a href="#python-Errors-原因" class="headerlink" title="python Errors 原因"></a>python Errors 原因</h1><h2 id="Q1"><a href="#Q1" class="headerlink" title="Q1"></a>Q1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2019-07-31 17:23:44,663 - jms_perm.py - INFO - perm_key: ([&apos;名字(zhi.ming)&apos;], [&apos;v-hostname.hx(10.10.100.100)&apos;])</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;jms_perm.py&quot;, line 338, in &lt;module&gt;</span><br><span class="line">    perm_args_list = perm_process()</span><br><span class="line">  File &quot;jms_perm.py&quot;, line 318, in perm_process</span><br><span class="line">    long_time_perms[perm_key] = perm</span><br><span class="line">TypeError: unhashable type: &apos;list&apos;</span><br></pre></td></tr></table></figure><h2 id="A1"><a href="#A1" class="headerlink" title="A1"></a>A1</h2><p>Python dict的key必须为hashable</p><a id="more"></a><p>问题中key中包含list或dict类型,所以报错.</p><p>可哈希的元素有：int, float, str, tuple<br> 不可哈希的元素有：list, set, dict</p><p>简单说在元素生命周期中,元素值会发布变动的为unhashable</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python-Errors-原因&quot;&gt;&lt;a href=&quot;#python-Errors-原因&quot; class=&quot;headerlink&quot; title=&quot;python Errors 原因&quot;&gt;&lt;/a&gt;python Errors 原因&lt;/h1&gt;&lt;h2 id=&quot;Q1&quot;&gt;&lt;a href=&quot;#Q1&quot; class=&quot;headerlink&quot; title=&quot;Q1&quot;&gt;&lt;/a&gt;Q1&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2019-07-31 17:23:44,663 - jms_perm.py - INFO - perm_key: ([&amp;apos;名字(zhi.ming)&amp;apos;], [&amp;apos;v-hostname.hx(10.10.100.100)&amp;apos;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;jms_perm.py&amp;quot;, line 338, in &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    perm_args_list = perm_process()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;jms_perm.py&amp;quot;, line 318, in perm_process&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    long_time_perms[perm_key] = perm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TypeError: unhashable type: &amp;apos;list&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;A1&quot;&gt;&lt;a href=&quot;#A1&quot; class=&quot;headerlink&quot; title=&quot;A1&quot;&gt;&lt;/a&gt;A1&lt;/h2&gt;&lt;p&gt;Python dict的key必须为hashable&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://talenhao.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://talenhao.github.io/tags/python/"/>
    
  </entry>
  
</feed>
