<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>天飞 技术随笔</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://talenhao.github.io/"/>
  <updated>2019-07-26T07:45:14.000Z</updated>
  <id>https://talenhao.github.io/</id>
  
  <author>
    <name>天飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git change user name in history commits</title>
    <link href="https://talenhao.github.io/2019/07/26/git-change-user-name-in-history-commits/"/>
    <id>https://talenhao.github.io/2019/07/26/git-change-user-name-in-history-commits/</id>
    <published>2019-07-26T07:45:14.000Z</published>
    <updated>2019-07-26T07:45:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-修改历史提交记录中的用户名"><a href="#Git-修改历史提交记录中的用户名" class="headerlink" title="Git 修改历史提交记录中的用户名"></a>Git 修改历史提交记录中的用户名</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>之间git提交时的用户名不对,但已经提交了4个commit了,所以需要修改历史记录中的用户名.</p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>使用git rebase</p><p>git rebase会把基于 rebase的版本后的commit取消掉,并临时保存为path到.git/reabase目录中,然后把当前分支更新到rebase的分支,最后把你修改的成为path的版本以补丁的形式应用到rebase的版本上.<br><img src="/images/1564128143617.png" alt="1564128143617"></p><a id="more"></a><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>这里把要rebase到4个commit之前的一个版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[Fri Jul 26 talen@tp-arch-tianfei capacity]$ git rebase -i HEAD~5</span><br><span class="line">pick 7e1b101 X0</span><br><span class="line">pick 983d257 X1</span><br><span class="line">pick 17c4a0e X2</span><br><span class="line">pick 41e90ef X3</span><br><span class="line">pick 822104d X4</span><br><span class="line"><span class="meta">#</span><span class="bash"> Rebase 5131eea..822104d onto 41e90ef (5 commands)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Commands:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> p, pick &lt;commit&gt; = use commit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> r, reword &lt;commit&gt; = use commit, but edit the commit message</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> e, edit &lt;commit&gt; = use commit, but stop <span class="keyword">for</span> amending</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> s, squash &lt;commit&gt; = use commit, but meld into previous commit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> f, fixup &lt;commit&gt; = like <span class="string">"squash"</span>, but discard this commit<span class="string">'s log message</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> x, <span class="built_in">exec</span> &lt;<span class="built_in">command</span>&gt; = run <span class="built_in">command</span> (the rest of the line) using shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> b, <span class="built_in">break</span> = stop here (<span class="built_in">continue</span> rebase later with <span class="string">'git rebase --continue'</span>)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> d, drop &lt;commit&gt; = remove commit</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> l, label &lt;label&gt; = label current HEAD with a name</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> t, reset &lt;label&gt; = reset HEAD to a label</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [<span class="comment"># &lt;oneline&gt;]</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> .       create a merge commit using the original merge commit<span class="string">'s</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> .       message (or the oneline, <span class="keyword">if</span> no original merge commit was</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> .       specified). Use -c &lt;commit&gt; to reword the commit message.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> These lines can be re-ordered; they are executed from top to bottom.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If you remove a line here THAT COMMIT WILL BE LOST.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> However, <span class="keyword">if</span> you remove everything, the rebase will be aborted.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that empty commits are commented out</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Stopped at 4ac3916...  X0</span><br><span class="line">You can amend the commit now, with</span><br><span class="line">git commit --amend </span><br><span class="line">Once you are satisfied with your changes, run</span><br><span class="line">git rebase --continue</span><br></pre></td></tr></table></figure><p>vi修改X1-X4的pick为edit,X0是rebase的版本,wq:退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Fri Jul 26 talen@tp-arch-tianfei capacity]$ git commit --amend --author="tianfei.hao &lt;tianfei.hao@example.com&gt;" --no-edit</span><br></pre></td></tr></table></figure><p>修改正确的用户名及邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Fri Jul 26 talen@tp-arch-tianfei capacity]$ git rebase --continue</span><br><span class="line">[Fri Jul 26 talen@tp-arch-tianfei capacity]$ git push origin new_journey --force</span><br></pre></td></tr></table></figure><p>强制提交操作</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git-修改历史提交记录中的用户名&quot;&gt;&lt;a href=&quot;#Git-修改历史提交记录中的用户名&quot; class=&quot;headerlink&quot; title=&quot;Git 修改历史提交记录中的用户名&quot;&gt;&lt;/a&gt;Git 修改历史提交记录中的用户名&lt;/h1&gt;&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;之间git提交时的用户名不对,但已经提交了4个commit了,所以需要修改历史记录中的用户名.&lt;/p&gt;
&lt;h2 id=&quot;方案&quot;&gt;&lt;a href=&quot;#方案&quot; class=&quot;headerlink&quot; title=&quot;方案&quot;&gt;&lt;/a&gt;方案&lt;/h2&gt;&lt;p&gt;使用git rebase&lt;/p&gt;
&lt;p&gt;git rebase会把基于 rebase的版本后的commit取消掉,并临时保存为path到.git/reabase目录中,然后把当前分支更新到rebase的分支,最后把你修改的成为path的版本以补丁的形式应用到rebase的版本上.&lt;br&gt;&lt;img src=&quot;/images/1564128143617.png&quot; alt=&quot;1564128143617&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://talenhao.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://talenhao.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>python学习笔记</title>
    <link href="https://talenhao.github.io/2019/07/25/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://talenhao.github.io/2019/07/25/python学习笔记/</id>
    <published>2019-07-25T07:28:12.000Z</published>
    <updated>2019-07-25T07:28:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-笔记"><a href="#python-笔记" class="headerlink" title="python 笔记"></a>python 笔记</h1><ol start="2"><li><h2 id="设计模型"><a href="#设计模型" class="headerlink" title="设计模型"></a>设计模型</h2></li></ol><h3 id="1-装饰器-decorator-模式"><a href="#1-装饰器-decorator-模式" class="headerlink" title="1. 装饰器(decorator)模式"></a>1. 装饰器(decorator)模式</h3><p>(俄罗斯套娃封装)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@装饰器二</span></span><br><span class="line"><span class="meta">@装饰器一</span></span><br><span class="line">核心对象</span><br></pre></td></tr></table></figure><ol><li>创建一个装饰函数,内部定义一个wrapper新函数执行一些操作,将被装饰函数作为参数传入装饰函数,返回新函数</li><li>行为类似多重继承.</li><li>当在装饰器与继承之间选择时,只需要根据一些条件对对象进行动态修改时使用装饰器.<ol><li>日志装饰器,传递一些参数动态记录日志</li></ol></li><li>作用:<ol><li>增强核心对象的能力</li><li>让核心对象支持多种可选行为</li><li>编写判断执行不同的装饰器</li></ol></li></ol><h3 id="2-观察者模式"><a href="#2-观察者模式" class="headerlink" title="2.  观察者模式"></a>2.  观察者模式</h3><p>状态监测,事件处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">核心对象-&gt;update()-&gt;观察者们-&gt;各自处理自已的任务</span><br></pre></td></tr></table></figure><p><img src="/images/1564143774413.png" alt="1564143774413"></p><h3 id="3-策略模式"><a href="#3-策略模式" class="headerlink" title="3. 策略模式"></a>3. 策略模式</h3><p>每个策略类都包含同名方法,接收相同参数.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">核心对象-&gt;策略1</span><br><span class="line">核心对象-&gt;策略2</span><br></pre></td></tr></table></figure><h3 id="4-状态模式"><a href="#4-状态模式" class="headerlink" title="4.状态模式"></a>4.状态模式</h3><p>状态类的目的是实现状态转换,需要一个上下文类提供转换接口和指针指向状态类,状态类对前面的调用者是隐藏的.</p><figure class="highlight graph"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Context -&gt; state -&gt; [state1, state2, state3] -&gt; Parser</span><br><span class="line">OpenTag</span><br><span class="line">||</span><br><span class="line">FirstTag-&gt;ChildNode&lt;=&gt;Text</span><br><span class="line">||</span><br><span class="line">CloseTag</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>策略模式用于运行时选择一种算法</strong>,如一张图片根据不同的情况处理成不同的状态</p><p><strong>状态模式用于允许在不同状态之间进行动态切换,</strong>如解析XML文件,context上下文切换</p><h3 id="5-单件模式"><a href="#5-单件模式" class="headerlink" title="5.单件模式"></a>5.单件模式</h3><p>只有一个实例的对象类.</p><p><strong>模块级实例变量能够模仿单件实例</strong></p><h3 id="6-模板模式"><a href="#6-模板模式" class="headerlink" title="6.模板模式"></a>6.模板模式</h3><h3 id="7-适配模式-adapter"><a href="#7-适配模式-adapter" class="headerlink" title="7.适配模式(adapter)"></a>7.适配模式(adapter)</h3><p>接口适配转换</p><h3 id="8-外观模式-facade"><a href="#8-外观模式-facade" class="headerlink" title="8.外观模式(facade)"></a>8.外观模式(facade)</h3><p>为复杂的组件提供典型用途的简单接口,如requests为urllib,编写发送邮件的类为smtplib,samplib等</p><h3 id="9-享元模式"><a href="#9-享元模式" class="headerlink" title="9.享元模式"></a>9.享元模式</h3><p>专为节省内存而设计的,如果有成百上千的相同对象,将相同特性整合进一个享元可极大减少内存消耗.</p><h3 id="10-命令模式"><a href="#10-命令模式" class="headerlink" title="10.命令模式"></a>10.命令模式</h3><h3 id="11-抽象工厂模式"><a href="#11-抽象工厂模式" class="headerlink" title="11.抽象工厂模式"></a>11.抽象工厂模式</h3><h3 id="12-组合模式"><a href="#12-组合模式" class="headerlink" title="12.组合模式"></a>12.组合模式</h3><p>简单的组件构成复杂的树状结构</p><h2 id="迭代器iterator-amp-递归器"><a href="#迭代器iterator-amp-递归器" class="headerlink" title="迭代器iterator&amp;递归器"></a>迭代器<strong>iterator</strong>&amp;递归器</h2><ol><li>迭代器<ol><li>字符串(有时需要将字符串视为原子的.否则有时有可能导致无穷递归.)</li><li>每次只取一个对象,不会对内存造成巨大开销.</li></ol></li><li>递归器</li></ol><h2 id="表达式-amp-语句"><a href="#表达式-amp-语句" class="headerlink" title="表达式 &amp; 语句"></a>表达式 &amp; 语句</h2><ol><li>表达式有返回值<ol><li>yield是表达式,所以调用生成器需要next()来执行表达式</li><li>send是传递值给yield表达式</li></ol></li></ol><h2 id="python-运算符"><a href="#python-运算符" class="headerlink" title="python 运算符"></a>python 运算符</h2><h3 id="Python逻辑运算符"><a href="#Python逻辑运算符" class="headerlink" title="Python逻辑运算符"></a>Python逻辑运算符</h3><p>Python语言支持逻辑运算符，以下假设变量 a 为 10, b为 20:</p><table><thead><tr><th align="left">运算符</th><th align="left">逻辑表达式</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">and</td><td align="left">x and y</td><td align="left">布尔”与” - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</td><td align="left">(a and b) 返回 20。</td></tr><tr><td align="left">or</td><td align="left">x or y</td><td align="left">布尔”或”    - 如果 x 是非 0，它返回 x 的值，否则它返回 y 的计算值。</td><td align="left">(a or b) 返回 10。</td></tr><tr><td align="left">not</td><td align="left">not x</td><td align="left">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td align="left">not(a and b) 返回 False</td></tr></tbody></table><h3 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ plus</span><br><span class="line">- minus</span><br><span class="line">/ slash</span><br><span class="line">* asterisk</span><br><span class="line">% percent</span><br><span class="line">&lt; less-than</span><br><span class="line">&gt; greater-than</span><br><span class="line">&lt;= less-than-equal</span><br><span class="line">&gt;= greater-than-equal</span><br></pre></td></tr></table></figure><h2 id="print"><a href="#print" class="headerlink" title="print"></a>print</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"If I add %d, %r, and %d I get %d."</span> % (my_age, my_height, my_weight, my_age + my_height + my_weight)</span><br></pre></td></tr></table></figure><p>标识符  %s, %r, %d</p><h2 id="byte-amp-string"><a href="#byte-amp-string" class="headerlink" title="byte &amp; string"></a>byte &amp; string</h2><p>Unicode<br>字符串和二进制数据流</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bytes object</span></span><br><span class="line">b = <span class="string">b"example"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># str object</span></span><br><span class="line">s = <span class="string">"example"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># str to bytes</span></span><br><span class="line">bytes(s, encoding = <span class="string">"utf8"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bytes to str</span></span><br><span class="line">str(b, encoding = <span class="string">"utf-8"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># an alternative method</span></span><br><span class="line"><span class="comment"># str to bytes</span></span><br><span class="line">str.encode(s)</span><br><span class="line"></span><br><span class="line"><span class="comment"># bytes to str</span></span><br><span class="line">bytes.decode(b)</span><br></pre></td></tr></table></figure><p>编码就是把一个字符用一个二进制来表示。<br>字符串类str里有一个encode()方法，它是从字符串向比特流的编码过程。而bytes类型恰好有个decode()方法，它是从比特流向字符串解码的过程。<br>ASCII码，一种8位即1个字节的编码规范，它可以涵盖整个英语系的编码需要。<br><strong>python 中编码print后会以ascii编码方式显示,所以中文会显示16进制,英文会直接显示ascii后的原文.</strong></p><p>世界标准:</p><p>ASCII(en:1byte,8bits) =&gt;</p><p>unicode(en:2bytes,16bits; cn:3bytes,24bits) =&gt;</p><p>utf-8(en:1byte,8bits; cn:3bytes,24bits)</p><p>中国标准</p><p>GBK 2bytes, 16bits</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p><code>raw_input()</code></p><h2 id="Parameters"><a href="#Parameters" class="headerlink" title="Parameters"></a>Parameters</h2><p>argument 命令行参数<br>Parameters</p><h2 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h2><p>close – Closes the file. Like File-&gt;Save.. in your editor.<br>read – Reads the contents of the file. You can assign the result to a variable.<br>readline – Reads just one line of a text file.<br>truncate – Empties the file. Watch out if you care about the file.<br>write(‘stuff’) – Writes “stuff” to the file.  </p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li><p>匿名函数</p><p>  lambda x: x * 8</p></li><li><p>回调函数</p><p>作为参数传入中间函数的函数</p><p>回调实际上有两种：阻塞式回调和延迟式回调。两者的区别在于：阻塞式回调里，回调函数的调用一定发生在起始函数返回之前；而延迟式回调里，回调函数的调用有可能是在起始函数返回之后。</p></li><li><p>中间函数</p><p>  需要传入回调函数的函数</p></li><li><p>起始函数</p><p>  调用中间函数的函数</p></li><li><p>装饰函数</p><p>  ​    代码风格</p><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logging_tool</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*arg, **kwargs)</span>:</span></span><br><span class="line">        logging.info(<span class="string">'%s is running...'</span> % func.__name__)</span><br><span class="line">        <span class="comment"># 把today当作参数传递进来，执行func()就相当于执行today()</span></span><br><span class="line">        func()</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">    @logging_tool</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">today</span><span class="params">()</span>:</span></span><br><span class="line">        print(<span class="string">'2018-05-25'</span>)</span><br><span class="line"></span><br><span class="line">        today()</span><br></pre></td></tr></table></figure></code></pre></li></ul><h2 id="多进程-多线程"><a href="#多进程-多线程" class="headerlink" title="多进程,多线程"></a>多进程,多线程</h2><p>What is a process? A process is just an instance of an executing program.<br>sbla(socket, bind, listen, accept)<br>process -&gt; UNIX fork()</p><blockquote><p>进程&gt;线程&gt;协程 </p><p>Python对协程的支持是通过generator实现的。</p></blockquote><blockquote><p>子程序顺序栈式调用,不可乱序</p><p>协程(Coroutine)中断式调用,可乱序</p></blockquote><p>子程序，或者称为函数，在所有语言中都是层级调用(栈式调用)，比如A调用B，B在执行过程中又调用了C，C执行完毕返回，B执行完毕返回，最后是A执行完毕。</p><p>子程序调用总是一个入口，一次返回，调用顺序是明确的。而协程的调用和子程序不同。</p><blockquote><p>Python中的协程大概经历了如下三个阶段： </p><ol><li>最初的生成器变形yield/send </li><li>引入@asyncio.coroutine和yield from </li><li>在最近的Python3.5版本中引入async/await关键字</li></ol></blockquote><h2 id="生成器-generator-协程-yield-需要多次调用-执行先中断-返回变量-再执行"><a href="#生成器-generator-协程-yield-需要多次调用-执行先中断-返回变量-再执行" class="headerlink" title="生成器(generator)(协程)(yield,需要多次调用:执行先中断,返回变量,再执行.)"></a>生成器(generator)(协程)(yield,需要多次调用:执行先中断,返回变量,再执行.)</h2><p>函数是顺序执行,生成器也是顺序计算的.</p><p>协程看上去也是子程序，但执行过程中，在子程序内部可中断，然后转而执行别的子程序，在适当的时候再返回来接着执行。</p><p>注意，在一个子程序中中断，去执行其他子程序，不是函数调用，有点类似CPU的中断。</p><ol><li><p>列表推导式 -&gt; []</p><ol><li>直接打印</li></ol></li><li><p>生成器推导式 -&gt; ()</p><ol><li>next(generator)激活,最后一个返回StopIteration error</li><li>generator保存的是算法,调用才开始计算</li><li>可迭代对象</li><li>生成器并没有将所有值放入内存中，而是实时地生成这些值，并且不会保存上一次迭代生成的值，因而，在迭代一个比较大的数据的时候，使用迭代器更好</li><li>yield 的作用就是返回迭代器</li><li>python直到遇到关键字yield之后，中断代码执行，返回yield变量值</li><li>send 函数就是给yield语句赋值<ol><li>先调用,返回原值(send并不会改变yield的返回值)</li><li>发送send,修改变量,并返回next值</li><li>因为当send方法的参数为None时，它与next方法完全等价(不规范,慎用)</li></ol></li><li>close可以关闭生成器</li></ol></li><li><p>生成器使用场景</p><ol><li>项目中如何使用yield，使用的思路就是，中断代码执行，在yield之前打开一个资源，然后在yield之后关闭这个资源，这样可以很好地保证每次只有一个资源被打开，同时执行完成之后资源会被关闭</li><li>第二个思路，就是节约内存，不要一下子加载所有的资源</li></ol></li></ol><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><p>if 语句的判断条件可以用&gt;（大于）、&lt;(小于)、==（等于）、&gt;=（大于等于）、&lt;=（小于等于）来表示其关系。</p><h4 id="True-amp-False"><a href="#True-amp-False" class="headerlink" title="True &amp; False"></a>True &amp; False</h4><p>针对Python中的True和False的定义，在不同版本的Python中是这样定义的：</p><ul><li>Python 2：None, 0, 和空字符串都被算作 False，其他的均为 True</li><li>Python 3：None，0，空字符串，空列表，空字典都算是False，所有其他值都是True</li></ul><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><ol><li><p>编写代码首要考虑它的可读性(DRY不要让自己重复)</p><ol><li>继承(超类里也可定义子类才有的方法,使得自己成为通用类)</li><li>组合(大部分继承关系都可以建模替代为组合关系,反之大部分组合都不能建模为继承)<ol start="3"><li>关联</li></ol></li></ol></li></ol><p><img src="/images/1564058294189.png" alt="1564058294189"></p><ol><li><p>如果只对数据操作-&gt;使用python数据结构</p></li><li><p>如果只关注行为不存储数据-&gt;使用函数</p></li></ol><p><strong>如果同时包含数据和行为</strong> -&gt;使用对象-&gt;代码更易读而不关心长短,对象之间的继承,关联,组合.</p><ul><li><p>随着程序的进一步扩展,需要把一组相关的变量传递到不同的函数中,这是一个将变量函数组合成类的好场景.(数据与行为的分离)</p><ul><li>存储数据(名词)<ul><li>数据对象CRUD操作行为使用property</li><li>参数也是另一种对象类型(自身就是文档)</li></ul></li><li>数据行为操作(动词)<ul><li>为了看起来像函数一样更易用,可以在<strong>init</strong>构造函数中接收参数而不是在方法中.</li></ul></li><li>管理对象(有点类似之前自己使用main实现的函数,保证步骤顺序)</li></ul><p>python不像java语言,类私有变量可以直接访问,所以变量可以直接访问,无需访问方法.</p></li></ul><blockquote><p><strong>使用property优雅的处理对象属性</strong>:可以直接访问name-&gt;property构造函数-&gt;调用方法,看起来跟直接访问属性一样.</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, rgb_value, name)</span>:</span></span><br><span class="line">        self.rgb_value = rgb_value</span><br><span class="line">        self._name = name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_set_name</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"Invalid Name"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_name</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._name</span><br><span class="line">    name = property(_get_name, _set_name)</span><br><span class="line"><span class="comment"># or 另一种风格</span></span><br><span class="line"><span class="meta"> @property</span></span><br><span class="line">    <span class="comment"># foo.getter 对于长消耗的操作,可以只取一次然后缓存起来.</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._foo</span><br><span class="line"><span class="meta">    @foo.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        self._foo = value</span><br></pre></td></tr></table></figure><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line">*** 忽略当前包下的模块,导入系统模块.</span><br><span class="line">相对导入：在不指明 package 名的情况下导入自己这个 package 的模块，比如一个 package 下有 a.py 和 b.py 两个文件，在 a.py 里 <span class="keyword">from</span> . <span class="keyword">import</span> b 即是相对导入 b.py。</span><br><span class="line"></span><br><span class="line">绝对导入：指明顶层 package 名。比如 <span class="keyword">import</span> a，Python 会在 sys.path 里寻找所有名为 a 的顶层模块。</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import: 在 <span class="number">3.0</span> 以前的旧版本中启用相对导入等特性所必须的 future 语句。</span><br><span class="line">如果你在main.py中写<span class="keyword">import</span> string,那么在Python <span class="number">2.4</span>或之前, Python会先查找当前目录下有没有string.py, 若找到了，则引入该模块，然后你在main.py中可以直接用string了。如果你是真的想用同目录下的string.py那就好，但是如果你是想用系统自带的标准string.py呢？那其实没有什么好的简洁的方式可以忽略掉同目录的string.py而引入系统自带的标准string.py。这时候你就需要<span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import了。</span><br><span class="line">---------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">相同缩进</span><br><span class="line">：开始缩进，短语句可以直接跟在：后面</span><br><span class="line">;可以连接多个操作语句</span><br><span class="line">＃注释</span><br><span class="line"><span class="string">'''大段注释'''</span></span><br><span class="line"><span class="string">"""大段注释"""</span></span><br><span class="line">基本输入：raw_input()</span><br><span class="line">基本输出：print()</span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*- 解决中文乱码</span></span><br><span class="line">print(var.decode(<span class="string">'utf-8'</span>).encode(<span class="string">'cp936'</span>))</span><br><span class="line">交互命令下可以当计算器使用。</span><br><span class="line"><span class="keyword">import</span> math基本的数学模块</span><br><span class="line">数据类型是程序的基础。程序设计的本质就是对数据进行处理。</span><br><span class="line">使用python数据结构基本不用考虑自己重新定义数据结构。</span><br><span class="line">数字,python中可以使用任意大的数字。</span><br><span class="line">基本类型：（整数，长整数，浮点数，复数），使用前无需声明其类型。</span><br><span class="line">运算符：**,*,/,%,+,-,|,^,&amp;,&lt;&lt;,&gt;&gt;按优先级下降</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2.30</span><span class="number">-1.30</span></span><br><span class="line"><span class="number">0.9999999999999998</span>由于浮点数精度问题。</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span>^<span class="number">3</span><span class="number">101</span>^<span class="number">011</span>=<span class="number">110</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">11</span>|<span class="number">5</span><span class="number">1011</span>|<span class="number">0101</span>=<span class="number">1111</span></span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4</span>&lt;&lt;<span class="number">2</span><span class="number">100</span>&lt;&lt;<span class="number">2</span>=<span class="number">10000</span> 等同于<span class="number">4</span>*<span class="number">2</span>**<span class="number">2</span></span><br><span class="line"><span class="number">16</span></span><br><span class="line">字符串：<span class="string">''</span>,<span class="string">""</span>,<span class="string">""" """</span>,<span class="string">''' '''</span></span><br><span class="line">转义符：\n,\t,\r,\\,\<span class="string">',\"</span></span><br><span class="line"><span class="string">原始字符串：R或r开头</span></span><br><span class="line"><span class="string">str操作方法：https://docs.python.org/3.5/library/stdtypes.html#string-methods</span></span><br><span class="line"><span class="string">字符串索引，分片 []</span></span><br><span class="line"><span class="string">字符串格式化：%c单字符,%d十进制数,%o八进制数,%s字符串,%x十六进制数，字母小写,%X十六进制数，字母大写</span></span><br><span class="line"><span class="string">%c%s%d % ('</span>a<span class="string">','</span>talen<span class="string">',5)</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; print( "%c%s%d" % ('</span>a<span class="string">','</span>talen<span class="string">',5))</span></span><br><span class="line"><span class="string">atalen5</span></span><br><span class="line"><span class="string">字符串与数字的相互转换</span></span><br><span class="line"><span class="string">int(str),str(int)</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; int("10") +4</span></span><br><span class="line"><span class="string">14</span></span><br><span class="line"><span class="string">列表list[]</span></span><br><span class="line"><span class="string">字典dict&#123;key:value&#125;</span></span><br><span class="line"><span class="string">file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if,else</span></span><br><span class="line"><span class="string">for</span></span><br><span class="line"><span class="string">while</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">函数：def name(args):</span></span><br><span class="line"><span class="string">return</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">python</span></span><br><span class="line"><span class="string">  对象</span></span><br><span class="line"><span class="string">    元素</span></span><br><span class="line"><span class="string">  数据结构</span></span><br><span class="line"><span class="string">    自定义类</span></span><br><span class="line"><span class="string">    容器</span></span><br><span class="line"><span class="string">      序列    （迭代，索引，分片，加，乘，成员资格，最大，最小，长度）</span></span><br><span class="line"><span class="string">        列表</span></span><br><span class="line"><span class="string">        元组</span></span><br><span class="line"><span class="string">        字符串</span></span><br><span class="line"><span class="string">        Ｕnicode对象</span></span><br><span class="line"><span class="string">        buffer对象</span></span><br><span class="line"><span class="string">        xrange对象</span></span><br><span class="line"><span class="string">      映射</span></span><br><span class="line"><span class="string">        字典（python惟一内置映射类型）</span></span><br><span class="line"><span class="string">      集合</span></span><br><span class="line"><span class="string">  语句</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">包</span></span><br><span class="line"><span class="string">import 模块</span></span><br><span class="line"><span class="string">    函数（参数），函数可嵌套函数</span></span><br><span class="line"><span class="string">        内置函数</span></span><br><span class="line"><span class="string">        外置导入，from 模块名 import 函数，可以使用变量引用函数，效果等同函数操作。</span></span><br><span class="line"><span class="string">            类型对象</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">模块名.函数</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">多态：操作的意义取决于操作对象的类型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">第4章：python的核心对象类型</span></span><br><span class="line"><span class="string">  数字、列表、字典、元组、</span></span><br><span class="line"><span class="string">第5章：数字</span></span><br><span class="line"><span class="string">  对象是python中最基本的概念，python编程的基础是对象。</span></span><br><span class="line"><span class="string">  python完整数字类型工具：</span></span><br><span class="line"><span class="string">    整数与浮点数</span></span><br><span class="line"><span class="string">    复数</span></span><br><span class="line"><span class="string">    固定精度的十进制数</span></span><br><span class="line"><span class="string">    有理分数</span></span><br><span class="line"><span class="string">    集合</span></span><br><span class="line"><span class="string">    布尔类型</span></span><br><span class="line"><span class="string">    无穷的整数精度</span></span><br><span class="line"><span class="string">    各种数字内置函数和模块</span></span><br><span class="line"><span class="string">  内置表达式操作符： + - * / &gt;&gt; ** &amp;等。</span></span><br><span class="line"><span class="string">    表达式是处理数字的最基本工具。</span></span><br><span class="line"><span class="string">    混合操作符表达式的优先级P120表5.2.越向后优先级越高。</span></span><br><span class="line"><span class="string">    使用（）分组子表达式改变优先级。</span></span><br><span class="line"><span class="string">    混合数字类型操作会将简单类型升级为复杂类型再计算。复杂度：整型&lt;浮点&lt;复数</span></span><br><span class="line"><span class="string">  内置数学函数：     pow, abs, round, int, hex, bin等</span></span><br><span class="line"><span class="string">  公用模块：        random, math等</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  变量：</span></span><br><span class="line"><span class="string">    变量在它第一次赋值时创建。</span></span><br><span class="line"><span class="string">    变量在表达式中使用将被替换为它们的值。</span></span><br><span class="line"><span class="string">    变量在表达式中使用前必须赋值。</span></span><br><span class="line"><span class="string">    变量像对象一样不需要一开始进行声明。</span></span><br><span class="line"><span class="string">  数字的显示格式：</span></span><br><span class="line"><span class="string">  　　repr代码交互式</span></span><br><span class="line"><span class="string">  　　str用户友好式</span></span><br><span class="line"><span class="string">  比较：一般比较与连续的长比较</span></span><br><span class="line"><span class="string">    对数字启作用，比较结果是一个布尔类型</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">python基础教程</span></span><br><span class="line"><span class="string">  第１章　基础知识</span></span><br><span class="line"><span class="string">    列表，字符串，字典是python中最重要的三种数据类型。</span></span><br><span class="line"><span class="string">  第２章 列表(可变)与元组（不可变）</span></span><br><span class="line"><span class="string">    数据结构：是通过方式对元素的集合</span></span><br><span class="line"><span class="string">    容器数据结构：包含其它对象的任意对象。主要有序列（列表，元组等）与映射（字典等），集合。</span></span><br><span class="line"><span class="string">    序列中的每个元素都有一个编号，映射每个元素都有一个键。</span></span><br><span class="line"><span class="string">      python中最基本的数据结构是序列（内置６种，重点包括元组与列表，其它有字符串，Unicode字符串，buffer对象，xrange对象），元素序号是索引。</span></span><br><span class="line"><span class="string">      操作一组数值时，使用序列。</span></span><br><span class="line"><span class="string">      序列中可以包含序列。</span></span><br><span class="line"><span class="string">      序列操作：</span></span><br><span class="line"><span class="string">        索引</span></span><br><span class="line"><span class="string">          &gt;&gt;&gt; getting = '</span>hello<span class="string">'</span></span><br><span class="line"><span class="string">          &gt;&gt;&gt; getting[1]</span></span><br><span class="line"><span class="string">          '</span>e<span class="string">'</span></span><br><span class="line"><span class="string">          &gt;&gt;&gt; getting[-1]</span></span><br><span class="line"><span class="string">          '</span>o<span class="string">'</span></span><br><span class="line"><span class="string">          &gt;&gt;&gt; '</span>hello<span class="string">'[1]</span></span><br><span class="line"><span class="string">          '</span>e<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        分片</span></span><br><span class="line"><span class="string">          冒号分割，２个索引作为边界，每１个索引在分片内，第２个在分片外。</span></span><br><span class="line"><span class="string">          使用捷径</span></span><br><span class="line"><span class="string">          更大的步长，使用负数做为步长时，必须让开始点大于结束点。</span></span><br><span class="line"><span class="string">        加</span></span><br><span class="line"><span class="string">          相同类型的序列才可以连接。</span></span><br><span class="line"><span class="string">        乘</span></span><br><span class="line"><span class="string">          None内置代表空 *</span></span><br><span class="line"><span class="string">        成员资格</span></span><br><span class="line"><span class="string">          in  返回True False</span></span><br><span class="line"><span class="string">        长度，最大元素，最小元素。</span></span><br><span class="line"><span class="string">        迭代(interation)：   依次对序列中的元素重复执行操作。</span></span><br><span class="line"><span class="string">    列表　[a,b,n...]</span></span><br><span class="line"><span class="string">      list()</span></span><br><span class="line"><span class="string">      元素赋值，元素删除，分片赋值，列表方法。</span></span><br><span class="line"><span class="string">    列表方法：</span></span><br><span class="line"><span class="string">      方法是函数,但只对特定对象进行操作，如序列，字典等。</span></span><br><span class="line"><span class="string">      对象.方法（参数）</span></span><br><span class="line"><span class="string">        append  入𣏾</span></span><br><span class="line"><span class="string">        count</span></span><br><span class="line"><span class="string">        extend</span></span><br><span class="line"><span class="string">        index</span></span><br><span class="line"><span class="string">        insert</span></span><br><span class="line"><span class="string">        pop 惟一一个修改列表并返回值的方法。出𣏾</span></span><br><span class="line"><span class="string">        remove 移出但不返回值，跟pop不同。</span></span><br><span class="line"><span class="string">        reverse　反序</span></span><br><span class="line"><span class="string">        sort</span></span><br><span class="line"><span class="string">        高级排序  cmp,key,reverse</span></span><br><span class="line"><span class="string">    元组：不可变序列  (a,n...)</span></span><br><span class="line"><span class="string">      tuple</span></span><br><span class="line"><span class="string">  第３章　使用字符串</span></span><br><span class="line"><span class="string">    基本字符串操作</span></span><br><span class="line"><span class="string">      适用所有标准序列操作，如上一章</span></span><br><span class="line"><span class="string">      字符串如元组一样不可修改</span></span><br><span class="line"><span class="string">      字符串操作符%</span></span><br><span class="line"><span class="string">        format % values values一般是元组，字典可格式多个值。如果使用列表，只能格式为一个值。</span></span><br><span class="line"><span class="string">        %.3f %s</span></span><br><span class="line"><span class="string">        模板字符串</span></span><br><span class="line"><span class="string">          from string import Template</span></span><br><span class="line"><span class="string">          变量.substitute()</span></span><br><span class="line"><span class="string">        字段宽度和精度</span></span><br><span class="line"><span class="string">          转换说明符可以包括字段宽度与精度。</span></span><br><span class="line"><span class="string">          可以使用＊号作为字体宽度或精度，这个值可以从后面的元组中读取。</span></span><br><span class="line"><span class="string">        标表</span></span><br><span class="line"><span class="string">          0,-,+,'</span> <span class="string">'，放置在宽度或精度字段。 对齐，０填充。</span></span><br><span class="line"><span class="string">      字符串方法：</span></span><br><span class="line"><span class="string">       　find  返回最左端的索引  字符串.find('</span>内容<span class="string">',起点，终点)</span></span><br><span class="line"><span class="string">       　split join相反的操作。分割，合并字符串</span></span><br><span class="line"><span class="string">       　  join添加的队列必须是字符串。</span></span><br><span class="line"><span class="string">       　lower</span></span><br><span class="line"><span class="string">       　replace</span></span><br><span class="line"><span class="string">       　strip 去除两侧空格。</span></span><br><span class="line"><span class="string">       　translate 只替换单个字符。</span></span><br><span class="line"><span class="string">  第４章 字典：当索引不好用时</span></span><br><span class="line"><span class="string">    ４.１字典的使用</span></span><br><span class="line"><span class="string">      &#123;k键:v值&#125;</span></span><br><span class="line"><span class="string">    4.2　创建与使用字典</span></span><br><span class="line"><span class="string">    　　4.2.1 dict函数</span></span><br><span class="line"><span class="string">    　　4.2.2 基本字典操作</span></span><br><span class="line"><span class="string">    　　  键类型：更多类型</span></span><br><span class="line"><span class="string">    　　  自动添加：列表不能不使用append的方法外自动建立。</span></span><br><span class="line"><span class="string">    　　  成员资格：字典比列表检查成员资格更高效。</span></span><br><span class="line"><span class="string">  第５章 条件、循环、其它语句</span></span><br><span class="line"><span class="string">    5.1 print,import</span></span><br><span class="line"><span class="string">      print 逗号输出多个表达式</span></span><br><span class="line"><span class="string">      +链接字符没有空格输出，逗号有空格输出。</span></span><br><span class="line"><span class="string">      from module import function as name </span></span><br><span class="line"><span class="string">    5.2 赋值魔法</span></span><br><span class="line"><span class="string">      序列解包</span></span><br><span class="line"><span class="string">      链式赋值</span></span><br><span class="line"><span class="string">      增量赋值  +=,*=,/=,%=</span></span><br><span class="line"><span class="string">    5.3 语句块：缩排的乐趣</span></span><br><span class="line"><span class="string">      布尔变量：假：false  None  0 "" () [] &#123;&#125;</span></span><br><span class="line"><span class="string">      布尔函数：bool</span></span><br><span class="line"><span class="string">    5.4 条件</span></span><br><span class="line"><span class="string">      if :</span></span><br><span class="line"><span class="string">      elif:</span></span><br><span class="line"><span class="string">      else:</span></span><br><span class="line"><span class="string">      使用==判断两个对象是否相等，使用is判断两者是否等同。</span></span><br><span class="line"><span class="string">      多重if可以用布尔判断代替。</span></span><br><span class="line"><span class="string">    命名空间：作用域：in scope ,调用使用scope()函数</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">  第６章　抽象abstraction</span></span><br><span class="line"><span class="string">    抽象结构：组织可读性程序，细节在其它地方定义。</span></span><br><span class="line"><span class="string">    函数：</span></span><br><span class="line"><span class="string">      调用（）中的参数或值，执行一系列操作，返回一个值。</span></span><br><span class="line"><span class="string">      创建函数是组织程序的关键。</span></span><br><span class="line"><span class="string">        def 函数名（参数）</span></span><br><span class="line"><span class="string">          操作</span></span><br><span class="line"><span class="string">          return result</span></span><br><span class="line"><span class="string">      记录函数：文档字符串,在函数开头写，使用函数.__doc__访问。</span></span><br><span class="line"><span class="string">    形参,实参</span></span><br><span class="line"><span class="string">      def 形参</span></span><br><span class="line"><span class="string">      调用 实参 </span></span><br><span class="line"><span class="string">    函数内的局部作用域</span></span><br><span class="line"><span class="string">      使用关键字参数忘记顺序</span></span><br><span class="line"><span class="string">      使用多个参数  *是生成元组，**生成字典</span></span><br><span class="line"><span class="string">    python 命令空间，作用域，变量是不可见的字典　vars()</span></span><br><span class="line"><span class="string">      local variable</span></span><br><span class="line"><span class="string">      globals 变量名可以在函数作用域内定义全局变量。</span></span><br><span class="line"><span class="string">    递归：引用自身，调用自身的意思。＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝</span></span><br><span class="line"><span class="string">    二元搜索</span></span><br><span class="line"><span class="string">  第７章 更加抽象，创建自己的数据类型自定义类。</span></span><br><span class="line"><span class="string">    面向对象的编程。</span></span><br><span class="line"><span class="string">    核心概念。</span></span><br><span class="line"><span class="string">    object.method()对象.方法()</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">baseexcept(SystemExit , KeyboardInterrupt , and GeneratorExit (these three derive directly from BaseException instead).</span><br><span class="line">exception</span><br><span class="line">arithmeticerror(the superclass of Over flowError , ZeroDivisionError , and FloatingPointError ,</span><br><span class="line">and a subclass of Exception .)</span><br><span class="line">buffererror</span><br><span class="line"></span><br><span class="line">类:</span><br><span class="line">动:方法</span><br><span class="line">静:数据</span><br><span class="line">带访问控制的数据属性(property)(getter,setter,deleter,text)(自动调用一些自定义动作)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第三节:</span><br><span class="line">没有self的类变量会被所有类实例共享,作用域是类;self变量作用域是类实例,只有类实例可以使用.</span><br><span class="line"></span><br><span class="line">新式父类调用</span><br><span class="line">super().__init__(name, email)</span><br><span class="line">旧式父类调用</span><br><span class="line">super(subclass_name).__init__(name, email)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">多态:调用不同的子类实现不同的行为.</span><br><span class="line">different behaviors happen depending on which subclass is being used, without having to explicitly know what the subclass actually is.</span><br><span class="line">python的动态特性让其它编程中的多态变得不太重要.</span><br><span class="line">class AudioFile:</span><br><span class="line">def __init__(self, filename):</span><br><span class="line">if not filename.endswith(self.ext):# 父类并没有定义ext变量,但可以访问子类中的变量</span><br><span class="line">raise Exception(&quot;Invalid file format&quot;)</span><br><span class="line">self.filename = filename</span><br><span class="line"></span><br><span class="line">class MP3File(AudioFile):</span><br><span class="line">ext = &quot;mp3&quot;</span><br><span class="line">def play(self):</span><br><span class="line">print(&quot;playing &#123;&#125; as mp3&quot;.format(self.filename))</span><br><span class="line"></span><br><span class="line">类静态方法(staticmethod)与类关联,被所有类实例共享</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">异常:</span><br><span class="line">BaseException</span><br><span class="line">SystemExist</span><br><span class="line">KeyboardInterrupt</span><br><span class="line">Exception</span><br><span class="line">Most other Exceptions</span><br><span class="line">except:或except BaseException:将捕捉所有异常</span><br><span class="line">except Exception:只捕捉Exception类</span><br><span class="line"></span><br><span class="line">对于一些使用if else的语句,也可以使用异常来做程序流控,会更简洁.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">property声明</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python-笔记&quot;&gt;&lt;a href=&quot;#python-笔记&quot; class=&quot;headerlink&quot; title=&quot;python 笔记&quot;&gt;&lt;/a&gt;python 笔记&lt;/h1&gt;&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;h2 id=&quot;设计模型&quot;&gt;&lt;a href=&quot;#设计模型&quot; class=&quot;headerlink&quot; title=&quot;设计模型&quot;&gt;&lt;/a&gt;设计模型&lt;/h2&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;1-装饰器-decorator-模式&quot;&gt;&lt;a href=&quot;#1-装饰器-decorator-模式&quot; class=&quot;headerlink&quot; title=&quot;1. 装饰器(decorator)模式&quot;&gt;&lt;/a&gt;1. 装饰器(decorator)模式&lt;/h3&gt;&lt;p&gt;(俄罗斯套娃封装)&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@装饰器二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;	@装饰器一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		核心对象&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;创建一个装饰函数,内部定义一个wrapper新函数执行一些操作,将被装饰函数作为参数传入装饰函数,返回新函数&lt;/li&gt;
&lt;li&gt;行为类似多重继承.&lt;/li&gt;
&lt;li&gt;当在装饰器与继承之间选择时,只需要根据一些条件对对象进行动态修改时使用装饰器.&lt;ol&gt;
&lt;li&gt;日志装饰器,传递一些参数动态记录日志&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;作用:&lt;ol&gt;
&lt;li&gt;增强核心对象的能力&lt;/li&gt;
&lt;li&gt;让核心对象支持多种可选行为&lt;/li&gt;
&lt;li&gt;编写判断执行不同的装饰器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;2-观察者模式&quot;&gt;&lt;a href=&quot;#2-观察者模式&quot; class=&quot;headerlink&quot; title=&quot;2.  观察者模式&quot;&gt;&lt;/a&gt;2.  观察者模式&lt;/h3&gt;&lt;p&gt;状态监测,事件处理&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;核心对象-&amp;gt;update()-&amp;gt;观察者们-&amp;gt;各自处理自已的任务&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/1564143774413.png&quot; alt=&quot;1564143774413&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-策略模式&quot;&gt;&lt;a href=&quot;#3-策略模式&quot; class=&quot;headerlink&quot; title=&quot;3. 策略模式&quot;&gt;&lt;/a&gt;3. 策略模式&lt;/h3&gt;&lt;p&gt;每个策略类都包含同名方法,接收相同参数.&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;核心对象-&amp;gt;策略1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;核心对象-&amp;gt;策略2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;4-状态模式&quot;&gt;&lt;a href=&quot;#4-状态模式&quot; class=&quot;headerlink&quot; title=&quot;4.状态模式&quot;&gt;&lt;/a&gt;4.状态模式&lt;/h3&gt;&lt;p&gt;状态类的目的是实现状态转换,需要一个上下文类提供转换接口和指针指向状态类,状态类对前面的调用者是隐藏的.&lt;/p&gt;
&lt;figure class=&quot;highlight graph&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Context -&amp;gt; state -&amp;gt; [state1, state2, state3] -&amp;gt; Parser&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				OpenTag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FirstTag	-&amp;gt;	ChildNode	&amp;lt;=&amp;gt;	Text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				CloseTag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="python" scheme="https://talenhao.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://talenhao.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>使用nvm管理node版本</title>
    <link href="https://talenhao.github.io/2019/07/25/%E4%BD%BF%E7%94%A8nvm%E7%AE%A1%E7%90%86node%E7%89%88%E6%9C%AC/"/>
    <id>https://talenhao.github.io/2019/07/25/使用nvm管理node版本/</id>
    <published>2019-07-25T07:03:58.000Z</published>
    <updated>2019-07-25T07:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nvm管理node版本"><a href="#nvm管理node版本" class="headerlink" title="nvm管理node版本"></a>nvm管理node版本</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>curl -o- <a href="https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh|bash" target="_blank" rel="noopener">https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh|bash</a></p><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ vim  ~/.bashrc</span><br><span class="line"><span class="meta">#</span><span class="bash"> nvm</span></span><br><span class="line">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">source</span> /usr/share/nvm/init-nvm.sh</span></span><br><span class="line">export NVM_DIR="$HOME/.nvm"</span><br><span class="line">[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; \. "$NVM_DIR/nvm.sh"  # This loads nvm</span><br><span class="line">[ -s "$NVM_DIR/bash_completion" ] &amp;&amp; \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure><h3 id="查看lts版本"><a href="#查看lts版本" class="headerlink" title="查看lts版本"></a>查看lts版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm ls-remote --lts</span><br><span class="line">v4.2.0   (LTS: Argon)</span><br><span class="line">...</span><br><span class="line">v10.15.2   (LTS: Dubnium)</span><br><span class="line"><span class="meta">-&gt;</span><span class="bash">  v10.15.3   (LTS: Dubnium)</span></span><br><span class="line">v10.16.0   (Latest LTS: Dubnium)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm install v10.16.0</span><br><span class="line">Downloading and installing node v10.16.0...</span><br><span class="line">Downloading https://npm.taobao.org/mirrors/node/v10.16.0/node-v10.16.0-linux-x64.tar.xz...</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################################################################################# 100.0%</span></span></span><br><span class="line">Computing checksum with sha256sum</span><br><span class="line">Checksums matched!</span><br><span class="line">Now using node v10.16.0 (npm v6.9.0)</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ node -v</span><br><span class="line">v10.16.0</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm ls</span><br><span class="line">v10.15.3</span><br><span class="line"><span class="meta">-&gt;</span><span class="bash">     v10.16.0</span></span><br><span class="line">v12.2.0</span><br><span class="line">system</span><br><span class="line">default -&gt; lts/* (-&gt; v10.16.0)</span><br><span class="line">node -&gt; stable (-&gt; v12.2.0) (default)</span><br><span class="line">stable -&gt; 12.2 (-&gt; v12.2.0) (default)</span><br><span class="line">iojs -&gt; N/A (default)</span><br><span class="line">lts/* -&gt; lts/dubnium (-&gt; v10.16.0)</span><br><span class="line">lts/argon -&gt; v4.9.1 (-&gt; N/A)</span><br><span class="line">lts/boron -&gt; v6.17.1 (-&gt; N/A)</span><br><span class="line">lts/carbon -&gt; v8.16.0 (-&gt; N/A)</span><br><span class="line">lts/dubnium -&gt; v10.16.0</span><br></pre></td></tr></table></figure><h3 id="切换版本"><a href="#切换版本" class="headerlink" title="切换版本"></a>切换版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm use v10.16.0</span><br><span class="line">Now using node v10.16.0 (npm v6.9.0)</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm current</span><br><span class="line">v10.16.0</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ which npm</span><br><span class="line">/home/talen/.nvm/versions/node/v10.16.0/bin/npm</span><br><span class="line">[Wed Jul 24 talen@tp-arch-tianfei ~]$ which node</span><br><span class="line">/home/talen/.nvm/versions/node/v10.16.0/bin/node</span><br><span class="line"></span><br><span class="line">[Thu Jul 25 talen@tp-arch-tianfei github]$ nvm use lts/*</span><br><span class="line">Now using node v10.16.0 (npm v6.9.0)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;nvm管理node版本&quot;&gt;&lt;a href=&quot;#nvm管理node版本&quot; class=&quot;headerlink&quot; title=&quot;nvm管理node版本&quot;&gt;&lt;/a&gt;nvm管理node版本&lt;/h2&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;curl -o- &lt;a href=&quot;https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh|bash&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh|bash&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置环境&quot;&gt;&lt;a href=&quot;#配置环境&quot; class=&quot;headerlink&quot; title=&quot;配置环境&quot;&gt;&lt;/a&gt;配置环境&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Wed Jul 24 talen@tp-arch-tianfei ~]$ vim  ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; nvm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; /usr/share/nvm/init-nvm.sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export NVM_DIR=&quot;$HOME/.nvm&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;amp;&amp;amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;查看lts版本&quot;&gt;&lt;a href=&quot;#查看lts版本&quot; class=&quot;headerlink&quot; title=&quot;查看lts版本&quot;&gt;&lt;/a&gt;查看lts版本&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Wed Jul 24 talen@tp-arch-tianfei ~]$ nvm ls-remote --lts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v4.2.0   (LTS: Argon)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v10.15.2   (LTS: Dubnium)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt;  v10.15.3   (LTS: Dubnium)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	v10.16.0   (Latest LTS: Dubnium)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="front-end" scheme="https://talenhao.github.io/categories/front-end/"/>
    
    
      <category term="nodejs" scheme="https://talenhao.github.io/tags/nodejs/"/>
    
      <category term="npm" scheme="https://talenhao.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Django2.2 url path error</title>
    <link href="https://talenhao.github.io/2019/04/30/Django2-2-url-path-error/"/>
    <id>https://talenhao.github.io/2019/04/30/Django2-2-url-path-error/</id>
    <published>2019-04-30T08:45:10.000Z</published>
    <updated>2019-07-25T08:07:40.527Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WARNINGS:</span><br><span class="line">?: (2_0.W001) Your URL pattern &apos;nagios/alert/(?P&lt;pk&gt;\d+)/delete/&apos; [name=&apos;nagios-alert-delete&apos;] has a route that contains &apos;(?P&lt;&apos;, begins with a &apos;^&apos;, or ends with a &apos;$&apos;. This was likely an oversight when migrating to django.urls.path().</span><br><span class="line">?: (2_0.W001) Your URL pattern &apos;nagios/alert/(?P&lt;pk&gt;\d+)/update/&apos; [name=&apos;nagios-alert-edit&apos;] has a route that contains &apos;(?P&lt;&apos;, begins with a &apos;^&apos;, or ends with a &apos;$&apos;. This was likely an oversight when migrating to django.urls.path().</span><br></pre></td></tr></table></figure><p>搜索了一下,URL中有正则表达式的需要使用re_path代替path,修改后修复</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">re_path(&apos;nagios/alert/(?P&lt;pk&gt;\d+)/update/&apos;, views.AlertEditView.as_view(), name=&apos;nagios-alert-edit&apos;),</span><br><span class="line">re_path(&apos;nagios/alert/(?P&lt;pk&gt;\d+)/delete/&apos;, views.AlertDeleteView.as_view(), name=&apos;nagios-alert-delete&apos;),</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(study-xiaofanzhuo) [tianfei@tianfei-pc xiaofanzhuo]$ python manage.py runserver</span><br><span class="line">Watching for file changes with StatReloader</span><br><span class="line">Performing system checks...</span><br><span class="line"></span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line">April 30, 2019 - 16:40:40</span><br><span class="line">Django version 2.2, using settings &apos;xiaofanzhuo.settings&apos;</span><br><span class="line">Starting development server at http://127.0.0.1:8000/</span><br><span class="line">Quit the server with CONTROL-C.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WARNINGS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?: (2_0.W001) Your URL pattern &amp;apos;nagios/alert/(?P&amp;lt;pk&amp;gt;\d+)/delete/&amp;apos; [name=&amp;apos;nagios-alert-delete&amp;apos;] has a route that contains &amp;apos;(?P&amp;lt;&amp;apos;, begins with a &amp;apos;^&amp;apos;, or ends with a &amp;apos;$&amp;apos;. This was likely an oversight when migrating to django.urls.path().&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?: (2_0.W001) Your URL pattern &amp;apos;nagios/alert/(?P&amp;lt;pk&amp;gt;\d+)/update/&amp;apos; [name=&amp;apos;nagios-alert-edit&amp;apos;] has a route that contains &amp;apos;(?P&amp;lt;&amp;apos;, begins with a &amp;apos;^&amp;apos;, or ends with a &amp;apos;$&amp;apos;. This was likely an oversight when migrating to django.urls.path().&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;搜索了一下,URL中有正则表达式的需要使用re_path代替path,修改后修复&lt;/p&gt;
    
    </summary>
    
      <category term="django" scheme="https://talenhao.github.io/categories/django/"/>
    
    
      <category term="django" scheme="https://talenhao.github.io/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>运维常用术语</title>
    <link href="https://talenhao.github.io/2019/04/12/%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8%E6%9C%AF%E8%AF%AD/"/>
    <id>https://talenhao.github.io/2019/04/12/运维常用术语/</id>
    <published>2019-04-12T02:18:41.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TCO（总体拥有成本）</span><br><span class="line">黑石物理服务器2.0:  基于腾讯云最新虚拟化技术研发的一款拥有极致性能裸金属云服务器</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
      <category term="uncategorized" scheme="https://talenhao.github.io/categories/uncategorized/"/>
    
    
      <category term="untags" scheme="https://talenhao.github.io/tags/untags/"/>
    
  </entry>
  
  <entry>
    <title>use /sbin/netconfig 命令更新/etc/resolv.conf文件</title>
    <link href="https://talenhao.github.io/2019/04/01/use-sbin-netconfig-%E5%91%BD%E4%BB%A4%E6%9B%B4%E6%96%B0-etc-resolv-conf%E6%96%87%E4%BB%B6/"/>
    <id>https://talenhao.github.io/2019/04/01/use-sbin-netconfig-命令更新-etc-resolv-conf文件/</id>
    <published>2019-04-01T01:57:05.000Z</published>
    <updated>2019-07-25T08:08:08.937Z</updated>
    
    <content type="html"><![CDATA[<p>netconfig是用于设置网络环境的命令</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:/etc/sysconfig&gt; sudo netconfig --help</span><br><span class="line">Usage:</span><br><span class="line"> netconfig &lt;global options&gt;</span><br><span class="line"> netconfig &lt;action&gt; &lt;action options&gt;</span><br><span class="line"></span><br><span class="line"> actions:</span><br><span class="line">  modify    Requires an interface and service specific settings via STDIN</span><br><span class="line">            or as file using the --input-file or --lease-file option.</span><br><span class="line">            Already existing settings for this interface and service will</span><br><span class="line">            be replaced with the new one, otherwise netconfig creates a</span><br><span class="line">            new state file. Finaly, netconfig updates the managed files.</span><br><span class="line">  remove    Removes the interface and service specific settings and</span><br><span class="line">            updates the managed files.</span><br><span class="line">  update    Updates the managed files with the current set of settings.</span><br><span class="line">  batch     Executes a batch file with modify,remove,update action lines.</span><br><span class="line">            Unlike in regular actions, modify and remove do not call update.</span><br><span class="line"> modify options:</span><br><span class="line">  &lt; -s|--service &lt;service name&gt; &gt;       service providing settings</span><br><span class="line">  [ -i|--interface &lt;interface name&gt; ]   interface providing settings</span><br><span class="line">  [ -F|--input-format &lt;input format&gt; ]  currently &apos;dhcpcd&apos; supported only</span><br><span class="line">  [ -I|--input-file &lt;file name&gt; ]       file name to read, stdin by default</span><br><span class="line">  [ -l|--lease-file &lt;file name&gt; ]       alias for --input-file</span><br><span class="line">  [ -m|--module-only &lt;name | prefix&gt; ]  module or module group updates only</span><br><span class="line">  [ -f|--force-replace ]                generate files, even user modified</span><br><span class="line">  [ -v|--verbose ]                      enable debug and be verbose</span><br><span class="line"></span><br><span class="line"> remove options:</span><br><span class="line">  &lt; -s|--service &lt;service name&gt; &gt;       service providing settings</span><br><span class="line">  [ -i|--interface &lt;interface name&gt; ]   interface providing settings</span><br><span class="line">  [ -m|--module-only &lt;name | prefix&gt; ]  module or module group updates only</span><br><span class="line">  [ -f|--force-replace ]                generate files, even user modified</span><br><span class="line">  [ -v|--verbose ]                      enable debug and be verbose</span><br><span class="line"></span><br><span class="line"> update options:</span><br><span class="line">  [ -m|--module-only &lt;name | prefix&gt; ]  module or module group updates only</span><br><span class="line">  [ -f|--force-replace ]                generate files, even user modified</span><br><span class="line">  [ -v|--verbose ]                      enable debug and be verbose</span><br><span class="line"></span><br><span class="line"> batch options:</span><br><span class="line">  [ -B|--batch-file &lt;file name&gt; ]       file name to read, stdin by default</span><br><span class="line">  [ -v|--verbose ]                      enable debug and be verbose</span><br><span class="line"></span><br><span class="line"> global options:</span><br><span class="line">  &lt;-h|--help&gt;                           show this help text</span><br><span class="line"></span><br><span class="line">Active modules: dns-resolver dns-bind dns-dnsmasq nis ntp-runtime</span><br><span class="line">Module groups : dns nis ntp</span><br></pre></td></tr></table></figure><p>注意help中的update,如果网络配置不正常,可以使用netconfig update -f强制修复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:/etc/sysconfig&gt; sudo netconfig update</span><br><span class="line">&lt;13&gt;Apr  1 09:53:46 dns-resolver: ATTENTION: You have modified /etc/resolv.conf. Leaving it untouched...</span><br><span class="line">&lt;13&gt;Apr  1 09:53:46 dns-resolver: You can find my version in /etc/resolv.conf.netconfig</span><br><span class="line">ATTENTION: You have modified /etc/resolv.conf.  Leaving it untouched...</span><br><span class="line">You can find my version in /etc/resolv.conf.netconfig ...</span><br><span class="line">haotianfei@tianfei-opensuse:/etc/sysconfig&gt; sudo netconfig update -f</span><br><span class="line">&lt;13&gt;Apr  1 09:54:03 dns-resolver: force replace set: backup created as /etc/resolv.conf.20190401-095403</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;netconfig是用于设置网络环境的命令&lt;/p&gt;
    
    </summary>
    
      <category term="opensuse" scheme="https://talenhao.github.io/categories/opensuse/"/>
    
    
      <category term="opensuse" scheme="https://talenhao.github.io/tags/opensuse/"/>
    
  </entry>
  
  <entry>
    <title>use imagemagick convert命令批量resize图片</title>
    <link href="https://talenhao.github.io/2019/03/30/use%20imagemagick%20convert%20%E5%91%BD%E4%BB%A4%E6%89%B9%E9%87%8Fresize%E5%9B%BE%E7%89%87/"/>
    <id>https://talenhao.github.io/2019/03/30/use imagemagick convert 命令批量resize图片/</id>
    <published>2019-03-30T09:30:59.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for img in $(ls);do convert -resize 40%x40% -quality 80 $img convert_$img;done</span><br></pre></td></tr></table></figure><p>图片质量还是可以的,对于3M左右的图片,压缩到40%,质量80差不多300多K的样子,只需要1/10的存储空间</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="uncategorized" scheme="https://talenhao.github.io/categories/uncategorized/"/>
    
    
      <category term="untags" scheme="https://talenhao.github.io/tags/untags/"/>
    
  </entry>
  
  <entry>
    <title>zabbix always in progress problem</title>
    <link href="https://talenhao.github.io/2019/02/28/zabbix-always-in-progress-problem/"/>
    <id>https://talenhao.github.io/2019/02/28/zabbix-always-in-progress-problem/</id>
    <published>2019-02-28T03:32:18.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<p>zabbix告警触发时一直显示in progress状态,查询了许多资料都没有解决.后来发现media脚本是pyc,更换成py后解决.这个有点太无语了.</p><p><img src="/img/20190228/progress.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;zabbix告警触发时一直显示in progress状态,查询了许多资料都没有解决.后来发现media脚本是pyc,更换成py后解决.这个有点太无语了.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/20190228/progress.png&quot; alt&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="zabbix" scheme="https://talenhao.github.io/categories/zabbix/"/>
    
    
      <category term="zabbix" scheme="https://talenhao.github.io/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>15 zabbix 自动发现discover</title>
    <link href="https://talenhao.github.io/2019/02/19/15-zabbix-%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0discover/"/>
    <id>https://talenhao.github.io/2019/02/19/15-zabbix-自动发现discover/</id>
    <published>2019-02-19T06:39:40.000Z</published>
    <updated>2019-07-25T08:08:24.476Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络发现"><a href="#网络发现" class="headerlink" title="网络发现"></a>网络发现</h2><p>zabbix提供自动网络发现功能是非常高效灵活的.<br>使用网络发现</p><ul><li>提高部署效率</li><li>简化管理</li><li>自动管理</li></ul><p>自动发现基于以下信息:</p><ul><li>IP段</li><li>可用的外部服务访问(FTP,SSH,WEB,POP3,IMAP,TCP,etc)</li><li>非加密的zabbix agent信息</li><li>snmp agent信息</li></ul><p>目前还不具有的功能:</p><ul><li>网络拓扑</li></ul><p>网络发现主要有两个部分:discovery-&gt; action</p><a id="more"></a><h3 id="discover"><a href="#discover" class="headerlink" title="discover"></a>discover</h3><p>周期性的扫描在network discovery rules 中定义的IP段.频率在每个规则下分别设置.<br>每个rule只会被一个process处理.一个网段不会被分配到多个process.<br>discovery checks 分别独立处理,一个check失败并不影响其它check的执行.<br>每个check生成一个discovery event.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zabbix   24712  0.0  0.1 300100  5908 ?        S    Feb05   1:02  \_ /usr/sbin/zabbix_server: discoverer #1 [processed 0 rules in 0.001094 sec, idle 60 sec]</span><br></pre></td></tr></table></figure><h3 id="action"><a href="#action" class="headerlink" title="action"></a>action</h3><p>discovery event是actions的基础.<br>action可以执行以下操作:</p><ul><li>发送信息</li><li>Adding/removing hosts</li><li>Enabling/disabling hosts</li><li>Adding/removing hosts to/from a group</li><li>Linking hosts to/unlinking from a template</li><li>Executing remote scripts</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;网络发现&quot;&gt;&lt;a href=&quot;#网络发现&quot; class=&quot;headerlink&quot; title=&quot;网络发现&quot;&gt;&lt;/a&gt;网络发现&lt;/h2&gt;&lt;p&gt;zabbix提供自动网络发现功能是非常高效灵活的.&lt;br&gt;使用网络发现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提高部署效率&lt;/li&gt;
&lt;li&gt;简化管理&lt;/li&gt;
&lt;li&gt;自动管理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动发现基于以下信息:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP段&lt;/li&gt;
&lt;li&gt;可用的外部服务访问(FTP,SSH,WEB,POP3,IMAP,TCP,etc)&lt;/li&gt;
&lt;li&gt;非加密的zabbix agent信息&lt;/li&gt;
&lt;li&gt;snmp agent信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前还不具有的功能:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络拓扑&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络发现主要有两个部分:discovery-&amp;gt; action&lt;/p&gt;
    
    </summary>
    
      <category term="zabbix" scheme="https://talenhao.github.io/categories/zabbix/"/>
    
    
      <category term="zabbix" scheme="https://talenhao.github.io/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 架构分析</title>
    <link href="https://talenhao.github.io/2019/02/18/Prometheus-%E6%9E%B6%E6%9E%84%E5%88%86%E6%9E%90/"/>
    <id>https://talenhao.github.io/2019/02/18/Prometheus-架构分析/</id>
    <published>2019-02-18T03:01:58.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/20190218/prometheus_arch.svg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/20190218/prometheus_arch.svg&quot; alt&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="kubernetes" scheme="https://talenhao.github.io/categories/kubernetes/"/>
    
    
      <category term="prometheus" scheme="https://talenhao.github.io/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>salt配置</title>
    <link href="https://talenhao.github.io/2019/02/12/configuring-salt/"/>
    <id>https://talenhao.github.io/2019/02/12/configuring-salt/</id>
    <published>2019-02-12T01:39:30.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置salt"><a href="#配置salt" class="headerlink" title="配置salt"></a>配置salt</h1><p>这一部分将展示如何配置用户访问,查看和存储job结果,安全性,排错和其它管理任务.</p><pre><code>Configuring the Salt MasterConfiguring the Salt MinionConfiguring the Salt Proxy MinionConfiguration file examplesMinion Blackout ConfigurationAccess Control SystemJob ManagementManaging the Job CacheStoring Job Results in an External SystemLoggingExternal Logging Handlerssalt.log.handlers.fluent_modsalt.log.handlers.log4mongo_modsalt.log.handlers.logstash_modsalt.log.handlers.sentry_modSalt File ServerGit Fileserver Backend WalkthroughMinionFS Backend WalkthroughSalt Package ManagerStoring Data in Other DatabasesRunning the Salt Master/Minion as an Unprivileged UserUsing cron with SaltUse cron to initiate a highstateHardening SaltSecurity disclosure policySalt TransportMaster Tops SystemReturnersRenderers</code></pre><h2 id="配置salt-master"><a href="#配置salt-master" class="headerlink" title="配置salt master"></a>配置salt master</h2><p>salt系统配置另人惊讶的简单和轻松,两个组件各自有单独的配置文件.salt-master,salt-minion两个文件分别对应两个组件.<br>默认的salt-master组件的配置文件在/etc/salt/master,FREEBSD显著的不同,位置/usr/local/etc/salt.</p><h3 id="主master配置"><a href="#主master配置" class="headerlink" title="主master配置"></a>主master配置</h3><p>/etc/salt/master配置文件用来管理salt-master的行为.<br><strong>约定:被注释的值后面有一个空白行的,表示不需要配置使用默认值.如果没有空白行的表示这个是一个示例,并没有默认值.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">默认的,master会自动包含在master.d/*.conf下的所有配置文件,master.d是一个目录,在master相同的目录级别下.</span><br><span class="line">#default_include: master.d/*.conf</span><br></pre></td></tr></table></figure><h3 id="minions配置"><a href="#minions配置" class="headerlink" title="minions配置"></a>minions配置</h3><p>配置salt-minion非常简单.一般的,惟一需要设置的值是master,这样minion就知道如何定位master.<br>默认配置文件在/etc/salt/minion,FREEBSE显著不同的,位于/usr/local/etc/salt/minion.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;配置salt&quot;&gt;&lt;a href=&quot;#配置salt&quot; class=&quot;headerlink&quot; title=&quot;配置salt&quot;&gt;&lt;/a&gt;配置salt&lt;/h1&gt;&lt;p&gt;这一部分将展示如何配置用户访问,查看和存储job结果,安全性,排错和其它管理任务.&lt;/p&gt;
&lt;pre&gt;&lt;co
      
    
    </summary>
    
      <category term="salt" scheme="https://talenhao.github.io/categories/salt/"/>
    
    
      <category term="salt" scheme="https://talenhao.github.io/tags/salt/"/>
    
  </entry>
  
  <entry>
    <title>salt ssh,agentless模式</title>
    <link href="https://talenhao.github.io/2019/02/11/use-salt-though-ssh-agentless/"/>
    <id>https://talenhao.github.io/2019/02/11/use-salt-though-ssh-agentless/</id>
    <published>2019-02-11T01:56:20.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<h1 id="salt-ssh"><a href="#salt-ssh" class="headerlink" title="salt ssh"></a>salt ssh</h1><p>执行salt commands及states通过ssh,不需要安装salt-minion.</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>salt ssh方式使用非常简单,通过配置/etc/salt/roster文件定义系统需要连接的主机,salt-ssh命令使用方式跟salt相同.</p><ul><li>salt ssh在2014.7.0版本产品化</li><li>远端需要有至少python2.6(也可以使用-r选项发送原子的ssh命令)</li><li>大多数系统中都是使用salt-ssh命令执行</li><li>salt ssh并不是用来替代标准的salt通信系统,它提供了不需要zeromq和远程agent的一个选择.由于所有通信都是通过ssh会在速度上慢于salt+zeromq</li><li>目前fileserver选项必须会封装,确保关联的文件会使用salt-ssh交付.state模块是例外,在master端编译,进程会找到所有salt://路径指向然后复制打tar包,fileserver封装还在开发中.</li></ul><h2 id="salt-ssh-roster"><a href="#salt-ssh-roster" class="headerlink" title="salt ssh roster"></a>salt ssh roster</h2><p>salt roster系统轻松定义远程minions.<a href="https://docs.saltstack.com/en/latest/topics/ssh/roster.html#ssh-roster" target="_blank" rel="noopener">https://docs.saltstack.com/en/latest/topics/ssh/roster.html#ssh-roster</a></p><p>默认roster文件是在/etc/salt/roster:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">web1:</span><br><span class="line">  host: 192.168.42.1 # The IP addr or DNS hostname</span><br><span class="line">  user: fred         # Remote executions will be executed as user fred</span><br><span class="line">  passwd: foobarbaz  # The password to use for login, if omitted, keys are used</span><br><span class="line">  sudo: True         # Whether to sudo to root, not enabled by default</span><br><span class="line">web2:</span><br><span class="line">  host: 192.168.42.2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Note</span><br><span class="line"></span><br><span class="line">sudo works only if NOPASSWD is set for user in /etc/sudoers: fred ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure><h2 id="salt-ssh部署ssh-key"><a href="#salt-ssh部署ssh-key" class="headerlink" title="salt-ssh部署ssh key"></a>salt-ssh部署ssh key</h2><p>默认salt-ssh将为ssh生成密钥对,默认路径是/etc/salt/pki/master/ssh/salt-ssh.rsa.密钥对将在第一次运行salt-ssh命令时生成.</p><p>之后使用ssh-copy-id命令部署公钥到minions.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i /etc/salt/pki/master/ssh/salt-ssh.rsa.pub user@server.demo.com</span><br></pre></td></tr></table></figure><p>可以创建一个简单的脚本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">if [ -z $1 ]; then</span><br><span class="line">   echo $0 user@host.com</span><br><span class="line">   exit 0</span><br><span class="line">fi</span><br><span class="line">ssh-copy-id -i /etc/salt/pki/master/ssh/salt-ssh.rsa.pub $1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./salt-ssh-copy-id.sh user@server1.host.com</span><br><span class="line">./salt-ssh-copy-id.sh user@server2.host.com</span><br></pre></td></tr></table></figure><p>当公钥部署完成后,salt-ssh就可以控制这些minions了.</p><h2 id="调用salt-ssh"><a href="#调用salt-ssh" class="headerlink" title="调用salt-ssh"></a>调用salt-ssh</h2><p>RHEL/centos 5 python2.6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt-ssh centos-5-minion -r &apos;yum -y install epel-release ; yum -y install python26&apos;</span><br></pre></td></tr></table></figure><p>python3.x<br>在2017.7.0版本之前,salt是不支持python3.x,最好使用-r参数.<br>salt-ssh的使用方法跟salt基本相同,有着相似的语法<br>默认salt-ssh使用在远程minions上使用salt执行模块,使用-r会使用raw shell命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt-ssh &apos;*&apos; test.ping</span><br></pre></td></tr></table></figure><h2 id="salt-ssh-使用state"><a href="#salt-ssh-使用state" class="headerlink" title="salt ssh 使用state"></a>salt ssh 使用state</h2><p>salt ssh 使用state系统与salt一样抽象了相同的接口.</p><h2 id="salt-ssh-使用target"><a href="#salt-ssh-使用target" class="headerlink" title="salt ssh 使用target"></a>salt ssh 使用target</h2><p>只支持glog与regex targets</p><h2 id="配置salt-ssh"><a href="#配置salt-ssh" class="headerlink" title="配置salt ssh"></a>配置salt ssh</h2><p>还是在/etc/salt/master中.<br>Minion 配置选项可以在master配置中的ssh_minion_opts中配置,也可以在roster中的minion_opts中配置.</p><h2 id="salt-ssh使用非root用户"><a href="#salt-ssh使用非root用户" class="headerlink" title="salt-ssh使用非root用户"></a>salt-ssh使用非root用户</h2><p>默认salt读取/etc/salt配置.如果你使用普通用户必须修改pki_dir和cachedir路径,否则会报权限错误.<br>推荐为普通用户创建单独的配置文件并使用-c加载.</p><h2 id="使用saltfile定义命令行参数"><a href="#使用saltfile定义命令行参数" class="headerlink" title="使用saltfile定义命令行参数"></a>使用saltfile定义命令行参数</h2><p>使用saltfile定义命令行参数,可以在一台服务器上管理多个不同的salt项目.<br>可以cd到saltfile的目录执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">salt-ssh:</span><br><span class="line">  config_dir: path/to/config/dir</span><br><span class="line">  ssh_max_procs: 30</span><br><span class="line">  ssh_wipe: True</span><br></pre></td></tr></table></figure><p>salt-ssh –config-dir=path/to/config/dir –max-procs=30 –wipe * test.ping<br>使用saltfile可简化成<br>salt-ssh * test.ping.</p><h2 id="saltssh-debug"><a href="#saltssh-debug" class="headerlink" title="saltssh debug"></a>saltssh debug</h2><p>salt-ssh 加 -ltrace 参数或定义SALT_ARGV变量.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;salt-ssh&quot;&gt;&lt;a href=&quot;#salt-ssh&quot; class=&quot;headerlink&quot; title=&quot;salt ssh&quot;&gt;&lt;/a&gt;salt ssh&lt;/h1&gt;&lt;p&gt;执行salt commands及states通过ssh,不需要安装salt-minion.&lt;
      
    
    </summary>
    
      <category term="salt" scheme="https://talenhao.github.io/categories/salt/"/>
    
    
      <category term="salt" scheme="https://talenhao.github.io/tags/salt/"/>
    
  </entry>
  
  <entry>
    <title>man 手册中的下划线</title>
    <link href="https://talenhao.github.io/2019/02/07/man-%E6%89%8B%E5%86%8C%E4%B8%AD%E7%9A%84%E4%B8%8B%E5%88%92%E7%BA%BF/"/>
    <id>https://talenhao.github.io/2019/02/07/man-手册中的下划线/</id>
    <published>2019-02-07T02:51:41.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<p>一直印象里觉得man手册中的下划线是个链接,可以跳转到另一个文档.<br>查看了man的help都没有提到这一块知识,后面才发现原来记忆的都是info命令功能;info命令是可以使用tab跳转到另一个文档的.<br>man手册中的下划线单纯就是个下划线标识而已.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:~&gt; man man</span><br></pre></td></tr></table></figure><p><img src="/img/20190207/man.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:~&gt; info zypper</span><br></pre></td></tr></table></figure><p><img src="/img/20190207/info.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直印象里觉得man手册中的下划线是个链接,可以跳转到另一个文档.&lt;br&gt;查看了man的help都没有提到这一块知识,后面才发现原来记忆的都是info命令功能;info命令是可以使用tab跳转到另一个文档的.&lt;br&gt;man手册中的下划线单纯就是个下划线标识而已.&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="Linux" scheme="https://talenhao.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://talenhao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>ssh透传</title>
    <link href="https://talenhao.github.io/2019/02/05/ssh%E9%80%8F%E4%BC%A0/"/>
    <id>https://talenhao.github.io/2019/02/05/ssh透传/</id>
    <published>2019-02-05T13:25:21.000Z</published>
    <updated>2019-07-25T02:10:43.775Z</updated>
    
    <content type="html"><![CDATA[<p>nodeC节点上有一个HTTP服务器,监听在80端口<br>nodeA节点可以访问nodeB,nodeB可以访问节点nodeC,但nodeA无法直接访问nodeC.</p><p>[root@nodeB ~]# ssh -N -f -o GatewayPorts=yes -L *:8808:192.168.0.3:80 <a href="mailto:root@192.168.0.3" target="_blank" rel="noopener">root@192.168.0.3</a><br>[root@nodeB ~]# curl <a href="http://localhost:8808/zabbix" target="_blank" rel="noopener">http://localhost:8808/zabbix</a><br><!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"></p><html><head><meta name="generator" content="Hexo 3.9.0"><title>301 Moved Permanently</title></head><body><h1>Moved Permanently</h1><p>The document has moved <a href="http://localhost:8808/zabbix/" target="_blank" rel="noopener">here</a>.</p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;nodeC节点上有一个HTTP服务器,监听在80端口&lt;br&gt;nodeA节点可以访问nodeB,nodeB可以访问节点nodeC,但nodeA无法直接访问nodeC.&lt;/p&gt;
&lt;p&gt;[root@nodeB ~]# ssh -N -f -o GatewayPorts=yes -
      
    
    </summary>
    
      <category term="uncategorized" scheme="https://talenhao.github.io/categories/uncategorized/"/>
    
    
      <category term="untags" scheme="https://talenhao.github.io/tags/untags/"/>
    
  </entry>
  
  <entry>
    <title>postgresql 11 install</title>
    <link href="https://talenhao.github.io/2019/02/05/postgresql-11-install/"/>
    <id>https://talenhao.github.io/2019/02/05/postgresql-11-install/</id>
    <published>2019-02-05T05:22:18.000Z</published>
    <updated>2019-07-25T02:10:43.765Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://yum.postgresql.org/repopackages.php" target="_blank" rel="noopener">https://yum.postgresql.org/repopackages.php</a></p><p>[root@postgresql ~]# yum install <a href="https://download.postgresql.org/pub/repos/yum/11/redhat/rhel-7-x86_64/pgdg-centos11-11-2.noarch.rpm" target="_blank" rel="noopener">https://download.postgresql.org/pub/repos/yum/11/redhat/rhel-7-x86_64/pgdg-centos11-11-2.noarch.rpm</a></p><p>[root@postgresql ~]# yum install postgresql11-server postgresql11-contrib</p><p>[root@postgresql ~]# /usr/pgsql-11/bin/postgresql-11-setup initdb<br>Initializing database … OK<br>[root@postgresql ~]# ll /usr/lib/systemd/system/  |grep postgre</p><p>[root@postgresql ~]# systemctl enable postgresql-11 –now<br>Created symlink from /etc/systemd/system/multi-user.target.wants/postgresql-11.service to /usr/lib/systemd/system/postgresql-11.service.<br>[root@postgresql ~]# systemctl status postgresql-11<br>● postgresql-11.service - PostgreSQL 11 database server<br>   Loaded: loaded (/usr/lib/systemd/system/postgresql-11.service; enabled; vendor preset: disabled)<br>   Active: active (running) since Tue 2019-02-05 21:37:11 CST; 43s ago<br>     Docs: <a href="https://www.postgresql.org/docs/11/static/" target="_blank" rel="noopener">https://www.postgresql.org/docs/11/static/</a><br>  Process: 14569 ExecStartPre=/usr/pgsql-11/bin/postgresql-11-check-db-dir ${PGDATA} (code=exited, status=0/SUCCESS)<br> Main PID: 14575 (postmaster)<br>   CGroup: /system.slice/postgresql-11.service<br>           ├─14575 /usr/pgsql-11/bin/postmaster -D /var/lib/pgsql/11/data/<br>           ├─14577 postgres: logger<br>           ├─14579 postgres: checkpointer<br>           ├─14580 postgres: background writer<br>           ├─14581 postgres: walwriter<br>           ├─14582 postgres: autovacuum launcher<br>           ├─14583 postgres: stats collector<br>           └─14584 postgres: logical replication launcher   </p><p>Feb 05 21:37:11 postgresql.wasu.iot systemd[1]: Starting PostgreSQL 11 database server…<br>Feb 05 21:37:11 postgresql.wasu.iot postmaster[14575]: 2019-02-05 21:37:11.150 CST [14575] LOG:  listening on IPv6 address “::1”, port 5432<br>Feb 05 21:37:11 postgresql.wasu.iot postmaster[14575]: 2019-02-05 21:37:11.150 CST [14575] LOG:  listening on IPv4 address “127.0.0.1”, port 5432<br>Feb 05 21:37:11 postgresql.wasu.iot postmaster[14575]: 2019-02-05 21:37:11.154 CST [14575] LOG:  listening on Unix socket “/var/run/postgresql/.s.PGSQL.5432”<br>Feb 05 21:37:11 postgresql.wasu.iot postmaster[14575]: 2019-02-05 21:37:11.161 CST [14575] LOG:  listening on Unix socket “/tmp/.s.PGSQL.5432”<br>Feb 05 21:37:11 postgresql.wasu.iot postmaster[14575]: 2019-02-05 21:37:11.174 CST [14575] LOG:  redirecting log output to logging collector process<br>Feb 05 21:37:11 postgresql.wasu.iot postmaster[14575]: 2019-02-05 21:37:11.174 CST [14575] HINT:  Future log output will appear in directory “log”.<br>Feb 05 21:37:11 postgresql.wasu.iot systemd[1]: Started PostgreSQL 11 database server.</p><p>修改/var/lib/pgsql/11/data/postgresql.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen_addresses = &apos;*&apos;</span><br></pre></td></tr></table></figure><p>修改/var/lib/pgsql/11/data/pg_hba.conf,添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host    zabbix          zabbix          10.0.0.0/25          md5</span><br></pre></td></tr></table></figure><p>[root@postgresql ~]# systemctl restart postgresql-11<br>[root@postgresql data]# firewall-cmd –add-service postgresql –permanent<br>[root@postgresql data]# firewall-cmd –add-service postgresql</p><p>[root@postgresql data]# ss -lnpt<br>State       Recv-Q Send-Q                                                          Local Address:Port                                                                         Peer Address:Port<br>LISTEN      0      128                                                                         <em>:22                                                                                      *:</em>                   users:((“sshd”,pid=3737,fd=3))<br>LISTEN      0      128                                                                         <em>:5432                                                                                    *:</em>                   users:((“postmaster”,pid=15874,fd=3))<br>LISTEN      0      100                                                                 127.0.0.1:25                                                                                      <em>:</em>                   users:((“master”,pid=4105,fd=13))<br>LISTEN      0      128                                                                        :::22                                                                                     :::*                   users:((“sshd”,pid=3737,fd=4))<br>LISTEN      0      128                                                                        :::5432                                                                                   :::*                   users:((“postmaster”,pid=15874,fd=4))<br>LISTEN      0      100                                                                       ::1:25                                                                                     :::*                   users:((“master”,pid=4105,fd=14))</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://yum.postgresql.org/repopackages.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://yum.postgresql.org/repopackages.php&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Databasees" scheme="https://talenhao.github.io/categories/Databasees/"/>
    
    
      <category term="postgresql" scheme="https://talenhao.github.io/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>ovirt spice 代理服务</title>
    <link href="https://talenhao.github.io/2019/02/03/ovirt-spice-proxy/"/>
    <id>https://talenhao.github.io/2019/02/03/ovirt-spice-proxy/</id>
    <published>2019-02-03T08:20:10.000Z</published>
    <updated>2019-07-25T02:10:43.765Z</updated>
    
    <content type="html"><![CDATA[<p>由于engine管理平台是做SNAT映射出去的,所以</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于engine管理平台是做SNAT映射出去的,所以&lt;/p&gt;

      
    
    </summary>
    
      <category term="Ovirt" scheme="https://talenhao.github.io/categories/Ovirt/"/>
    
    
      <category term="ovirt" scheme="https://talenhao.github.io/tags/ovirt/"/>
    
      <category term="kvm" scheme="https://talenhao.github.io/tags/kvm/"/>
    
      <category term="RHV" scheme="https://talenhao.github.io/tags/RHV/"/>
    
  </entry>
  
  <entry>
    <title>ovirt虚拟机管理手册</title>
    <link href="https://talenhao.github.io/2019/02/01/ovirt-virtual-machine-management-guide/"/>
    <id>https://talenhao.github.io/2019/02/01/ovirt-virtual-machine-management-guide/</id>
    <published>2019-02-01T06:30:49.000Z</published>
    <updated>2019-07-25T02:10:43.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="chapter-7-模板templates"><a href="#chapter-7-模板templates" class="headerlink" title="chapter 7. 模板templates"></a>chapter 7. 模板templates</h2><p>模板是虚拟机的复本,在接下来操作中轻松重复创建相似的虚拟机.模板封装了软件,配置和硬件,还有模板基于的源虚拟机的所有安装软件.使用模板启动的虚拟机基于源虚拟机.</p><p>当基于一个虚拟机创建一个模板,虚拟机的一个只读复本硬盘被创建.这个只读硬盘成为新模板和由此模板创建的虚拟机的基本磁盘,因此,如果ovirt中存在基于这个模板创建的虚拟机,这个硬盘不能被删除.</p><p>基于模板创建的虚拟机使用跟源虚拟机相同的网卡类型和驱动,便被分配特别的不重复的MAC地址.</p><h3 id="7-1-封装虚拟机并部署为模板"><a href="#7-1-封装虚拟机并部署为模板" class="headerlink" title="7.1 封装虚拟机并部署为模板"></a>7.1 封装虚拟机并部署为模板</h3><p>封装是基于虚拟机创建模板之前从虚拟机中移除所有特殊的系统细节的处理过程.封装是保证基于相同模板创建的多个虚拟机防止使用显明相同的细节的需要.同时也是确保其它特性的功能如预期的网卡定制的需要.</p><h4 id="7-1-1-封装linux做为模板"><a href="#7-1-1-封装linux做为模板" class="headerlink" title="7.1.1 封装linux做为模板"></a>7.1.1 封装linux做为模板</h4><p>linux封装通过新创建模板窗口勾选Seal Template勾选框创建处理.<br><img src="/img/20190201/seal.png" alt></p><h4 id="7-1-2-封装windows做为模板"><a href="#7-1-2-封装windows做为模板" class="headerlink" title="7.1.2 封装windows做为模板"></a>7.1.2 封装windows做为模板</h4><p>部署windows虚拟机创建的模板必需是无特殊性的.这保证机器特殊配置不会复制到模板.<br>使用sysprep用来封装windows模板.sysprep创建一个完整的没有附加的安装回答文件. /usr/share/ovirt-engine/conf/sysprep/目录下有多个windows操作系统的默认设置值文件. 这些文件是sysprep的模板.文件中的字段可以根据需求复制,粘贴,修改.这些定义将覆盖”修改虚拟机”-&gt;”初始运行”中设置.被修改的sysprep文件会多方面影响附加了sysprep文件的模板所创建的windows虚拟机.包含域成员,主机名,安全策略等.</p><h5 id="7-1-2-1-封装windows虚拟机的先决条件"><a href="#7-1-2-1-封装windows虚拟机的先决条件" class="headerlink" title="7.1.2.1 封装windows虚拟机的先决条件"></a>7.1.2.1 封装windows虚拟机的先决条件</h5><p>略,详细查看<a href="https://access.redhat.com/documentation/en-us/red_hat_virtualization/4.2/html/virtual_machine_management_guide/chap-templates" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_virtualization/4.2/html/virtual_machine_management_guide/chap-templates</a></p><h5 id="7-1-2-2-封装windows-7-2008-2012为模板"><a href="#7-1-2-2-封装windows-7-2008-2012为模板" class="headerlink" title="7.1.2.2 封装windows 7,2008,2012为模板"></a>7.1.2.2 封装windows 7,2008,2012为模板</h5><p>略,详细查看<a href="https://access.redhat.com/documentation/en-us/red_hat_virtualization/4.2/html/virtual_machine_management_guide/chap-templates" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_virtualization/4.2/html/virtual_machine_management_guide/chap-templates</a></p><h3 id="7-2-创建模板"><a href="#7-2-创建模板" class="headerlink" title="7.2 创建模板"></a>7.2 创建模板</h3><p>从一个已经存在的虚拟机创建模板作为蓝本创建其它虚拟机.</p><p>当创建模板,需要指定硬盘模式,raw或QCOW2:</p><ul><li>QCOW2 是瘦提供,即动态分配.</li><li>RAW 硬盘在文件存储上是动态分配.</li><li>RAW 硬盘在块存储上是预分配的.</li></ul><p>创建模拟步骤:</p><ol><li>Compute → Virtual Machines,选择源虚拟机</li><li>确保虚拟机是关机的</li><li>More Actions → Make Template.</li><li>输入模板名称,说明,评语</li><li>选择分配给的集群,默认同源虚拟机相同</li><li>可选的,选择CPU配置集</li><li>可选的,创建为另一个模板的子模板</li><li>硬盘分配,别名,格式,存储域,硬盘配置集;默认与源虚拟机相同.</li><li>选择允许所有用户访问模板,是否公开模板.</li><li>选择是否复制源虚拟机的权限设置</li><li>如果是linux主机勾选封装模板</li><li>OK</li></ol><p>模板创建过程中显示虚拟机image lock.处理过程有可能花费几个小时,决定于硬件能力及源虚拟机硬盘大小.完成后模板添加到Tamplates选项中,至此你可以基于模板创建虚拟机了.</p><p>创建模板会复制虚拟机,模板与源虚拟会同时存在.<br><img src="/img/20190201/maketemplate.png" alt></p><h3 id="7-3-编辑模板"><a href="#7-3-编辑模板" class="headerlink" title="7.3 编辑模板"></a>7.3 编辑模板</h3><h3 id="7-4-删除模板"><a href="#7-4-删除模板" class="headerlink" title="7.4 删除模板"></a>7.4 删除模板</h3><h3 id="7-5-导出模板"><a href="#7-5-导出模板" class="headerlink" title="7.5 导出模板"></a>7.5 导出模板</h3><h3 id="7-6-导入模板"><a href="#7-6-导入模板" class="headerlink" title="7.6 导入模板"></a>7.6 导入模板</h3><h3 id="7-7-模板权限"><a href="#7-7-模板权限" class="headerlink" title="7.7 模板权限"></a>7.7 模板权限</h3><h3 id="7-8-使用cloud-init自动配置虚拟机"><a href="#7-8-使用cloud-init自动配置虚拟机" class="headerlink" title="7.8 使用cloud-init自动配置虚拟机"></a>7.8 使用cloud-init自动配置虚拟机</h3><h3 id="7-9-使用sysprep自动配置虚拟机"><a href="#7-9-使用sysprep自动配置虚拟机" class="headerlink" title="7.9 使用sysprep自动配置虚拟机"></a>7.9 使用sysprep自动配置虚拟机</h3><h3 id="7-10-基于模板创建虚拟机"><a href="#7-10-基于模板创建虚拟机" class="headerlink" title="7.10 基于模板创建虚拟机"></a>7.10 基于模板创建虚拟机</h3><p> 从模板创建一个预配置了操作系统,网络,应用和其它资源的虚拟机.<br> 如果基于模板创建了虚拟机,模板将不能被删除;如果要删除模板,可以选择clone方式.</p><p> 模板创建虚拟机步骤:</p><ol><li><p>Compute → Virtual Machines. </p></li><li><p>创建</p></li><li><p>选择集群</p></li><li><p>选择模板</p></li><li><p>输入名称,说明,评论</p></li><li><p>资源分配标签</p></li><li><p>选择存储是thin(QCOW2)或clone(QCOW2/RAW)方式</p></li><li><p>选择存储域</p></li><li><p>OK.</p><p><img src="/img/20190201/templatecreatevm.png" alt></p></li></ol><h3 id="7-11-基于模板创建cloned虚拟机"><a href="#7-11-基于模板创建cloned虚拟机" class="headerlink" title="7.11 基于模板创建cloned虚拟机"></a>7.11 基于模板创建cloned虚拟机</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;chapter-7-模板templates&quot;&gt;&lt;a href=&quot;#chapter-7-模板templates&quot; class=&quot;headerlink&quot; title=&quot;chapter 7. 模板templates&quot;&gt;&lt;/a&gt;chapter 7. 模板templates
      
    
    </summary>
    
      <category term="Ovirt" scheme="https://talenhao.github.io/categories/Ovirt/"/>
    
    
      <category term="ovirt" scheme="https://talenhao.github.io/tags/ovirt/"/>
    
      <category term="kvm" scheme="https://talenhao.github.io/tags/kvm/"/>
    
      <category term="RHV" scheme="https://talenhao.github.io/tags/RHV/"/>
    
  </entry>
  
  <entry>
    <title>ovirt 4.2 为Centos linux虚拟机安装 guest agent</title>
    <link href="https://talenhao.github.io/2019/01/31/ovirt-4-2-install-guest-agent/"/>
    <id>https://talenhao.github.io/2019/01/31/ovirt-4-2-install-guest-agent/</id>
    <published>2019-01-30T16:22:29.000Z</published>
    <updated>2019-07-25T02:10:43.765Z</updated>
    
    <content type="html"><![CDATA[<p>2.4.1. Red Hat Virtualization Guest Agents and Drivers</p><p>Oivrt guest agents 为Linux和Windows虚拟机提供了附加信息和功能,其中最核心的包括监控虚拟机资源使用和使用管理界面优雅的关闭或重启虚拟机</p><p>没有安装前虚拟机的IP地址无法获取<br><img src="/img/20190131/noagent.png" alt></p><p>生产主要使用CentOS7.6的系统(其它CentOS系列基本相同),安装如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@dns01 ~]# yum install centos-release-ovirt42</span><br><span class="line">[root@dns01 ~]# yum install -y ovirt-guest-agent-common</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@dns01 ~]# systemctl start ovirt-guest-agent.service </span><br><span class="line">[root@dns01 ~]# systemctl enable ovirt-guest-agent.service </span><br><span class="line">[root@dns01 ~]# systemctl status ovirt-guest-agent.service</span><br><span class="line">● ovirt-guest-agent.service - oVirt Guest Agent</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/ovirt-guest-agent.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Sat 2019-02-02 22:38:38 CST; 2s ago</span><br><span class="line">  Process: 12089 ExecStartPre=/bin/chown ovirtagent:ovirtagent /run/ovirt-guest-agent.pid (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 12086 ExecStartPre=/bin/touch /run/ovirt-guest-agent.pid (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 12083 ExecStartPre=/sbin/modprobe virtio_console (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 12093 (python)</span><br><span class="line">   CGroup: /system.slice/ovirt-guest-agent.service</span><br><span class="line">           └─12093 /usr/bin/python /usr/share/ovirt-guest-agent/ovirt-guest-agent.py</span><br><span class="line"></span><br><span class="line">Feb 02 22:38:38 dns01.talen.iot systemd[1]: Starting oVirt Guest Agent...</span><br><span class="line">Feb 02 22:38:38 dns01.talen.iot systemd[1]: Started oVirt Guest Agent.</span><br><span class="line">Feb 02 22:38:38 dns01.talen.iot userhelper[12101]: pam_succeed_if(ovirt-container-list:auth): requirement &quot;user = ovirtagent&quot; was met by user &quot;ovirtagent&quot;</span><br><span class="line">Feb 02 22:38:38 dns01.talen.iot userhelper[12101]: running &apos;/usr/share/ovirt-guest-agent/container-list&apos; with root privileges on behalf of &apos;ovirtagent&apos;</span><br><span class="line">Feb 02 22:38:39 dns01.talen.iot userhelper[12103]: pam_succeed_if(ovirt-container-list:auth): requirement &quot;user = ovirtagent&quot; was met by user &quot;ovirtagent&quot;</span><br><span class="line">Feb 02 22:38:39 dns01.talen.iot userhelper[12103]: running &apos;/usr/share/ovirt-guest-agent/container-list&apos; with root privileges on behalf of &apos;ovirtagent&apos;</span><br><span class="line"></span><br><span class="line">[root@dns01 ~]# systemctl start qemu-guest-agent.service</span><br><span class="line">[root@dns01 ~]# systemctl enable qemu-guest-agent.service</span><br><span class="line">[root@dns01 ~]# systemctl status qemu-guest-agent.service           </span><br><span class="line">● qemu-guest-agent.service - QEMU Guest Agent</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/qemu-guest-agent.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Sat 2019-02-02 22:38:38 CST; 20min ago</span><br><span class="line"> Main PID: 12082 (qemu-ga)</span><br><span class="line">   CGroup: /system.slice/qemu-guest-agent.service</span><br><span class="line">           └─12082 /usr/bin/qemu-ga --method=virtio-serial --path=/dev/virtio-ports/org.qemu.guest_agent.0 --blacklist=guest-file-open,guest-file-close,guest-file-read,guest-file-write,guest-file-seek,gue...</span><br><span class="line"></span><br><span class="line">Feb 02 22:38:38 dns01.talen.iot systemd[1]: Started QEMU Guest Agent.</span><br></pre></td></tr></table></figure><p>服务启动后提示消失,并能获取到虚拟机IP等信息.</p><p><img src="/img/20190131/yesagent.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2.4.1. Red Hat Virtualization Guest Agents and Drivers&lt;/p&gt;
&lt;p&gt;Oivrt guest agents 为Linux和Windows虚拟机提供了附加信息和功能,其中最核心的包括监控虚拟机资源使用和使用管理界面优雅的关
      
    
    </summary>
    
      <category term="Ovirt" scheme="https://talenhao.github.io/categories/Ovirt/"/>
    
    
      <category term="ovirt" scheme="https://talenhao.github.io/tags/ovirt/"/>
    
      <category term="kvm" scheme="https://talenhao.github.io/tags/kvm/"/>
    
      <category term="RHV" scheme="https://talenhao.github.io/tags/RHV/"/>
    
  </entry>
  
  <entry>
    <title>Install SecureCRT 8.3.4 on openSUSE 15.1</title>
    <link href="https://talenhao.github.io/2019/01/27/Install-SecureCRT-8-3-4-on-openSUSE-15-1/"/>
    <id>https://talenhao.github.io/2019/01/27/Install-SecureCRT-8-3-4-on-openSUSE-15-1/</id>
    <published>2019-01-27T11:01:58.000Z</published>
    <updated>2019-07-25T02:10:43.765Z</updated>
    
    <content type="html"><![CDATA[<p>官方下载scrt-sfx-8.3.4.1699.rhel7-64.tar.gz并解压,我这里是/home/haotianfei/bin/scrt8.3.4/scrt-sfx-8.3.4/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/haotianfei/bin/scrt8.3.4/</span><br><span class="line">tar zxvf scrt-sfx-8.3.4.1699.rhel7-64.tar.gz</span><br></pre></td></tr></table></figure><p>解压后进入bin目录运行提示找不到openssl的库文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:~/bin/scrt8.3.4/scrt-sfx-8.3.4&gt; ./SecureCRT</span><br><span class="line">./SecureCRT: error while loading shared libraries: libssl.so.10: cannot open shared object file: No such file or directory</span><br><span class="line">./SecureCRT: error while loading shared libraries: libcrypto.so.10: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>这里使用<a href="http://www.openssl.org官方网站下载编译,然后链接到/usr/lib64/的方式" target="_blank" rel="noopener">www.openssl.org官方网站下载编译,然后链接到/usr/lib64/的方式</a></p><p><a href="https://www.openssl.org/source/old/1.0.2/" target="_blank" rel="noopener">https://www.openssl.org/source/old/1.0.2/</a></p><p>1.0.2版本的最后一个版本1.0.2p<br><a href="https://www.openssl.org/source/old/1.0.2/openssl-1.0.2p.tar.gz" target="_blank" rel="noopener">https://www.openssl.org/source/old/1.0.2/openssl-1.0.2p.tar.gz</a></p><p>解压并编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:~/bin/scrt8.3.4/openssl-devel/openssl-1.0.2p&gt; ./config shared zlib-dynamic</span><br><span class="line">haotianfei@tianfei-opensuse:~/bin/scrt8.3.4/openssl-devel/openssl-1.0.2p&gt; make</span><br></pre></td></tr></table></figure><p>将编译好的so文件链接到系统库目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">haotianfei@tianfei-opensuse:~/bin/scrt8.3.4/openssl-devel/openssl-1.0.2p&gt; sudo ln -sf `pwd`/libssl.so.1.0.0 /usr/lib64/libssl.so.10</span><br><span class="line">haotianfei@tianfei-opensuse:~/bin/scrt8.3.4/openssl-devel/openssl-1.0.2p&gt; sudo ln -sf `pwd`/libcrypto.so.1.0.0 /usr/lib64/libcrypto.so.10</span><br></pre></td></tr></table></figure><p>虽然还是会提示版本信息不可用,但已经可以正常运行使用了.</p><p><img src="/img/2019-01-27/scrt.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;官方下载scrt-sfx-8.3.4.1699.rhel7-64.tar.gz并解压,我这里是/home/haotianfei/bin/scrt8.3.4/scrt-sfx-8.3.4/&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
      <category term="openSUSE" scheme="https://talenhao.github.io/categories/openSUSE/"/>
    
    
      <category term="opensuse" scheme="https://talenhao.github.io/tags/opensuse/"/>
    
  </entry>
  
  <entry>
    <title>配置DNS服务器</title>
    <link href="https://talenhao.github.io/2019/01/27/dns-can-t-resolv-out-domain/"/>
    <id>https://talenhao.github.io/2019/01/27/dns-can-t-resolv-out-domain/</id>
    <published>2019-01-27T09:28:07.000Z</published>
    <updated>2019-07-25T02:10:43.765Z</updated>
    
    <content type="html"><![CDATA[<p>Ovirt虚拟化平台对DNS的可靠要求比较高,DNS服务如果无法正常提供解析,将造成整个虚拟化平台的宕机;</p><p>Ovirt官方不推荐只在虚拟化平台上运行DNS服务,防止虚拟机宕机造成整个平台宕机,所以这里采用的是一台实体物理机运行主DNS服务(10.0.0.40),其它两台从服务器运行在虚拟化平台上低成本解决单点问题.</p><p>服务器:</p><ol><li>主服务器: 10.0.0.40</li><li>从服务器1: 10.0.0.41</li><li>从服务器2: 10.0.0.42</li></ol><p>其中主服务器部署在一台实体物理机上,其它服务器在Ovirt平台上启动的虚拟机.</p><p>在所有服务器上执行安装:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@dns00 ~]# yum install -y bind bind-utils</span><br><span class="line">[root@dns01 ~]# yum install -y bind bind-utils</span><br><span class="line">[root@dns02 ~]# yum install -y bind bind-utils</span><br></pre></td></tr></table></figure><p>配置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">[root@dns00 ~]# cat /etc/named.conf </span><br><span class="line">//</span><br><span class="line">// named.conf</span><br><span class="line">//</span><br><span class="line">// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS</span><br><span class="line">// server as a caching only nameserver (as a localhost DNS resolver only).</span><br><span class="line">//</span><br><span class="line">// See /usr/share/doc/bind*/sample/ for example named configuration files.</span><br><span class="line">//</span><br><span class="line">// See the BIND Administrator&apos;s Reference Manual (ARM) for details about the</span><br><span class="line">// configuration located in /usr/share/doc/bind-&#123;version&#125;/Bv9ARM.html</span><br><span class="line">acl iot-slaves &#123;</span><br><span class="line">        10.0.0.41;</span><br><span class="line">        10.0.0.42;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">acl localnet253 &#123;</span><br><span class="line">        10.0.0.0/25;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; any;&#125;;</span><br><span class="line">        listen-on-v6 port 53 &#123; any; &#125;;</span><br><span class="line">        directory       &quot;/var/named&quot;;</span><br><span class="line">        dump-file       &quot;/var/named/data/cache_dump.db&quot;;</span><br><span class="line">        statistics-file &quot;/var/named/data/named_stats.txt&quot;;</span><br><span class="line">        memstatistics-file &quot;/var/named/data/named_mem_stats.txt&quot;;</span><br><span class="line">        recursing-file  &quot;/var/named/data/named.recursing&quot;;</span><br><span class="line">        secroots-file   &quot;/var/named/data/named.secroots&quot;;</span><br><span class="line"></span><br><span class="line">        allow-query     &#123; localnets;10.0.0.20; &#125;;</span><br><span class="line"></span><br><span class="line">        recursion yes;</span><br><span class="line">        allow-recursion &#123; localnets; &#125;;</span><br><span class="line"></span><br><span class="line">        /* </span><br><span class="line">         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.</span><br><span class="line">         - If you are building a RECURSIVE (caching) DNS server, you need to enable </span><br><span class="line">           recursion. </span><br><span class="line">         - If your recursive DNS server has a public IP address, you MUST enable access</span><br><span class="line">           control to limit queries to your legitimate users. Failing to do so will</span><br><span class="line">           cause your server to become part of large scale DNS amplification</span><br><span class="line">           attacks. Implementing BCP38 within your network would greatly</span><br><span class="line">           reduce such attack surface</span><br><span class="line">        */</span><br><span class="line"></span><br><span class="line">        forward only;</span><br><span class="line">        forwarders &#123;</span><br><span class="line">            119.29.29.29;</span><br><span class="line">            223.5.5.5;</span><br><span class="line">            223.6.6.6;</span><br><span class="line">            8.8.8.8;</span><br><span class="line">        &#125;;</span><br><span class="line">        allow-transfer &#123;</span><br><span class="line">                iot-slaves;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        dnssec-enable no;</span><br><span class="line">        dnssec-validation no;</span><br><span class="line"></span><br><span class="line">        /* Path to ISC DLV key */</span><br><span class="line">        bindkeys-file &quot;/etc/named.iscdlv.key&quot;;</span><br><span class="line"></span><br><span class="line">        managed-keys-directory &quot;/var/named/dynamic&quot;;</span><br><span class="line"></span><br><span class="line">        pid-file &quot;/run/named/named.pid&quot;;</span><br><span class="line">        session-keyfile &quot;/run/named/session.key&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file &quot;data/named.run&quot; versions 30 size 10240k;</span><br><span class="line">                severity debug;</span><br><span class="line">                print-time yes;</span><br><span class="line">                print-severity yes;</span><br><span class="line">                print-category yes;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;.&quot; IN &#123;</span><br><span class="line">        type hint;</span><br><span class="line">        file &quot;named.ca&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include &quot;/etc/named.rfc1912.zones&quot;;</span><br><span class="line">include &quot;/etc/named.root.key&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[root@dns00 ~]# cat /etc/named.rfc1912.zones </span><br><span class="line">// named.rfc1912.zones:</span><br><span class="line">//</span><br><span class="line">// Provided by Red Hat caching-nameserver package </span><br><span class="line">//</span><br><span class="line">// ISC BIND named zone configuration for zones recommended by</span><br><span class="line">// RFC 1912 section 4.1 : localhost TLDs and address zones</span><br><span class="line">// and http://www.ietf.org/internet-drafts/draft-ietf-dnsop-default-local-zones-02.txt</span><br><span class="line">// (c)2007 R W Franks</span><br><span class="line">//</span><br><span class="line">// See /usr/share/doc/bind*/sample/ for example named configuration files.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">zone &quot;localhost.localdomain&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.localhost&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;localhost&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.localhost&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.loopback&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;1.0.0.127.in-addr.arpa&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.loopback&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;0.in-addr.arpa&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.empty&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;talen.iot&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.talen.iot&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">        allow-transfer &#123; iot-slaves; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;253.34.10.in-addr.arpa&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.10.0.0&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">        allow-transfer &#123; iot-slaves; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>注意zone文件中一定要将所有NS服务器列举出来,否则从服务器无法收到主服务的notify</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@dns00 ~]# cat /var/named/named.talen.iot</span><br><span class="line">$TTL 3H</span><br><span class="line">@       IN SOA  @ haotianfei.talen.com. (</span><br><span class="line">                                        2019020300      ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      ns.talen.iot.</span><br><span class="line">        NS      ns1.talen.iot.</span><br><span class="line">        NS      ns2.talen.iot.</span><br><span class="line">storage NS      ns.talen.iot.</span><br><span class="line">server  IN      A       10.0.0.40</span><br><span class="line">ns      IN      A       10.0.0.40</span><br><span class="line">ns1     IN      A       10.0.0.41</span><br><span class="line">ns2     IN      A       10.0.0.42</span><br><span class="line">engine  IN      A       10.0.0.20</span><br><span class="line">vnode00 IN      A       10.0.0.30</span><br><span class="line">vnode01 IN      A       10.0.0.31</span><br><span class="line">vnode02 IN      A       10.0.0.32</span><br><span class="line">storage IN      A       10.0.0.20</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@dns00 ~]# cat /var/named/named.10.0.0</span><br><span class="line">$TTL 3H</span><br><span class="line">@       IN SOA  ns.talen.iot haotianfei.talen.com. (</span><br><span class="line">                                        2019012700      ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      ns.talen.iot.</span><br><span class="line">        NS      ns1.talen.iot.</span><br><span class="line">        NS      ns2.talen.iot.</span><br><span class="line">40      IN      PTR     ns.talen.iot.</span><br><span class="line">40      IN      PTR     server.talen.iot.</span><br><span class="line">20      IN      PTR     engine.talen.iot.</span><br><span class="line">30      IN      PTR     vnode00.talen.iot.</span><br><span class="line">31      IN      PTR     vnode01.talen.iot.</span><br><span class="line">32      IN      PTR     vnode02.talen.iot.</span><br><span class="line">20      IN      PTR     engine.talen.iot.</span><br></pre></td></tr></table></figure><p>配置两个从节点,配置基本一致,zone数据是从主节点同步过来的,所以无需管理.:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">[root@dns01 ~]# cat /etc/named.conf</span><br><span class="line">//</span><br><span class="line">// named.conf</span><br><span class="line">//</span><br><span class="line">// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS</span><br><span class="line">// server as a caching only nameserver (as a localhost DNS resolver only).</span><br><span class="line">//</span><br><span class="line">// See /usr/share/doc/bind*/sample/ for example named configuration files.</span><br><span class="line">//</span><br><span class="line">// See the BIND Administrator&apos;s Reference Manual (ARM) for details about the</span><br><span class="line">// configuration located in /usr/share/doc/bind-&#123;version&#125;/Bv9ARM.html</span><br><span class="line">acl &quot;trusted&quot; &#123;</span><br><span class="line">        10.0.0.20;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">options &#123;</span><br><span class="line">        listen-on port 53 &#123; any; &#125;;</span><br><span class="line">        listen-on-v6 port 53 &#123; any; &#125;;</span><br><span class="line">        directory       &quot;/var/named&quot;;</span><br><span class="line">        dump-file       &quot;/var/named/data/cache_dump.db&quot;;</span><br><span class="line">        statistics-file &quot;/var/named/data/named_stats.txt&quot;;</span><br><span class="line">        memstatistics-file &quot;/var/named/data/named_mem_stats.txt&quot;;</span><br><span class="line">        recursing-file  &quot;/var/named/data/named.recursing&quot;;</span><br><span class="line">        secroots-file   &quot;/var/named/data/named.secroots&quot;;</span><br><span class="line"></span><br><span class="line">        allow-query     &#123; localnets;10.0.0.20; &#125;;</span><br><span class="line">        recursion yes;</span><br><span class="line">        allow-recursion &#123; localnets; &#125;;</span><br><span class="line"></span><br><span class="line">        forward only;</span><br><span class="line">        forwarders &#123;</span><br><span class="line">            119.29.29.29;</span><br><span class="line">            223.5.5.5;</span><br><span class="line">            223.6.6.6;</span><br><span class="line">            8.8.8.8;</span><br><span class="line">        &#125;;</span><br><span class="line">        allow-transfer &#123;</span><br><span class="line">                none;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        /*</span><br><span class="line">         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.</span><br><span class="line">         - If you are building a RECURSIVE (caching) DNS server, you need to enable</span><br><span class="line">           recursion.</span><br><span class="line">         - If your recursive DNS server has a public IP address, you MUST enable access</span><br><span class="line">           control to limit queries to your legitimate users. Failing to do so will</span><br><span class="line">           cause your server to become part of large scale DNS amplification</span><br><span class="line">           attacks. Implementing BCP38 within your network would greatly</span><br><span class="line">           reduce such attack surface</span><br><span class="line">        */</span><br><span class="line"></span><br><span class="line">        dnssec-enable no;</span><br><span class="line">        dnssec-validation no;</span><br><span class="line"></span><br><span class="line">        /* Path to ISC DLV key */</span><br><span class="line">        bindkeys-file &quot;/etc/named.iscdlv.key&quot;;</span><br><span class="line"></span><br><span class="line">        managed-keys-directory &quot;/var/named/dynamic&quot;;</span><br><span class="line"></span><br><span class="line">        pid-file &quot;/run/named/named.pid&quot;;</span><br><span class="line">        session-keyfile &quot;/run/named/session.key&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">logging &#123;</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file &quot;data/named.run&quot; versions 30 size 10240k;</span><br><span class="line">                severity debug;</span><br><span class="line">                print-time yes;</span><br><span class="line">                print-severity yes;</span><br><span class="line">                print-category yes;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;.&quot; IN &#123;</span><br><span class="line">        type hint;</span><br><span class="line">        file &quot;named.ca&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">include &quot;/etc/named.rfc1912.zones&quot;;</span><br><span class="line">include &quot;/etc/named.root.key&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@dns01 ~]# cat /etc/named.rfc1912.zones </span><br><span class="line">// named.rfc1912.zones:</span><br><span class="line">//</span><br><span class="line">// Provided by Red Hat caching-nameserver package </span><br><span class="line">//</span><br><span class="line">// ISC BIND named zone configuration for zones recommended by</span><br><span class="line">// RFC 1912 section 4.1 : localhost TLDs and address zones</span><br><span class="line">// and http://www.ietf.org/internet-drafts/draft-ietf-dnsop-default-local-zones-02.txt</span><br><span class="line">// (c)2007 R W Franks</span><br><span class="line">// </span><br><span class="line">// See /usr/share/doc/bind*/sample/ for example named configuration files.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">zone &quot;localhost.localdomain&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.localhost&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;localhost&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.localhost&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.loopback&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;1.0.0.127.in-addr.arpa&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.loopback&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;0.in-addr.arpa&quot; IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;named.empty&quot;;</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;talen.iot&quot; IN &#123;</span><br><span class="line">        type slave;</span><br><span class="line">        file &quot;named.talen.iot&quot;;</span><br><span class="line">        masters &#123;10.0.0.40;&#125;;</span><br><span class="line">        allow-query &#123; localnets; &#125;;</span><br><span class="line">        zone-statistics yes;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone &quot;253.34.10.in-addr.arpa&quot; IN &#123;</span><br><span class="line">        type slave;</span><br><span class="line">        file &quot;named.10.0.0&quot;;</span><br><span class="line">        masters &#123;10.0.0.40;&#125;;</span><br><span class="line">        allow-query &#123; localnets; &#125;;</span><br><span class="line">        zone-statistics yes;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>验证:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[root@dns00 ~]# dig www.sina.com</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-72.el7 &lt;&lt;&gt;&gt; www.sina.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 20729</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;www.sina.com.                  IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">www.sina.com.           24      IN      CNAME   us.sina.com.cn.</span><br><span class="line">us.sina.com.cn.         15      IN      CNAME   spool.grid.sinaedge.com.</span><br><span class="line">spool.grid.sinaedge.com. 28     IN      A       202.102.94.124</span><br><span class="line"></span><br><span class="line">;; Query time: 8 msec</span><br><span class="line">;; SERVER: 10.0.0.40#53(10.0.0.40)</span><br><span class="line">;; WHEN: Sun Jan 27 17:38:06 CST 2019</span><br><span class="line">;; MSG SIZE  rcvd: 119</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@dns00 ~]# dig engine.talen.iot</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-72.el7 &lt;&lt;&gt;&gt; engine.talen.iot</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 63533</span><br><span class="line">;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 2</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;engine.talen.iot.               IN      A</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">engine.talen.iot.        10800   IN      A       10.0.0.20</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">talen.iot.               10800   IN      NS      ns.talen.iot.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">ns.talen.iot.            10800   IN      A       10.0.0.40</span><br><span class="line"></span><br><span class="line">;; Query time: 1 msec</span><br><span class="line">;; SERVER: 10.0.0.40#53(10.0.0.40)</span><br><span class="line">;; WHEN: Sun Jan 27 17:39:03 CST 2019</span><br><span class="line">;; MSG SIZE  rcvd: 93</span><br></pre></td></tr></table></figure><h2 id="故障现象一"><a href="#故障现象一" class="headerlink" title="故障现象一"></a>故障现象一</h2><ul><li>bind可以解析自管理的域名,但无法解析外部域名.</li><li>日志中报错:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Jan 27 17:22:31 server.talen.iot named[7460]: no valid RRSIG resolving &apos;net/DS/IN&apos;: 223.6.6.6#53</span><br><span class="line">Jan 27 17:22:31 server.talen.iot named[7460]: no valid RRSIG resolving &apos;net/DS/IN&apos;: 223.5.5.5#53</span><br><span class="line">Jan 27 17:22:41 server.talen.iot named[7460]: no valid DS resolving &apos;l.root-servers.net/AAAA/IN&apos;: 223.6.6.6#53</span><br><span class="line">Jan 27 17:22:41 server.talen.iot named[7460]: no valid DS resolving &apos;l.root-servers.net/A/IN&apos;: 223.6.6.6#53</span><br></pre></td></tr></table></figure><p>解决方法:</p><ul><li>关闭DNSSEC</li></ul><h2 id="故障现象二"><a href="#故障现象二" class="headerlink" title="故障现象二"></a>故障现象二</h2><ul><li>主服务器域名zone文件是text,从服务器zone文件是data</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@dns00 ~]# file /var/named/named.talen.iot </span><br><span class="line">/var/named/named.talen.iot: ASCII text</span><br><span class="line">[root@dns01 ~]# file /var/named/named.talen.iot </span><br><span class="line">/var/named/named.talen.iot: data</span><br></pre></td></tr></table></figure><p>解决方法:<br>从服务器/etc/named.conf的option中添加masterfile-format text;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@dns01 ~]# file /var/named/named.talen.iot </span><br><span class="line">/var/named/named.talen.iot: ASCII text</span><br></pre></td></tr></table></figure><h2 id="故障现象三"><a href="#故障现象三" class="headerlink" title="故障现象三"></a>故障现象三</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@saltstack bind]# nslookup salt      </span><br><span class="line">Server:         10.34.253.40</span><br><span class="line">Address:        10.34.253.40#53</span><br><span class="line"></span><br><span class="line">** server can&apos;t find salt: NXDOMAIN</span><br><span class="line"></span><br><span class="line">[root@saltstack bind]# vi /etc/resolv.conf</span><br><span class="line">[root@saltstack bind]# hostname</span><br><span class="line">saltstack.talne.iot</span><br></pre></td></tr></table></figure><p>解决方法:<br>hostname中的域名配置错误,只使用主机名解析找不到域.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@saltstack bind]# hostnamectl set-hostname saltstack.talen.iot</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ovirt虚拟化平台对DNS的可靠要求比较高,DNS服务如果无法正常提供解析,将造成整个虚拟化平台的宕机;&lt;/p&gt;
&lt;p&gt;Ovirt官方不推荐只在虚拟化平台上运行DNS服务,防止虚拟机宕机造成整个平台宕机,所以这里采用的是一台实体物理机运行主DNS服务(10.0.0.40)
      
    
    </summary>
    
      <category term="Redhat Server" scheme="https://talenhao.github.io/categories/Redhat-Server/"/>
    
    
      <category term="dns" scheme="https://talenhao.github.io/tags/dns/"/>
    
  </entry>
  
</feed>
